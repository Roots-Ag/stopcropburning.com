{"version":3,"file":"pane.js","sources":["../../src/structure/diffView/hooks/useCreatePathSyncChannel.ts","../../src/structure/diffView/constants.ts","../../src/structure/diffView/hooks/useDiffViewRouter.ts","../../src/structure/diffView/types/diffViewMode.ts","../../src/structure/diffView/hooks/useDiffViewState.ts","../../src/structure/diffView/hooks/useScrollMirror.tsx","../../src/structure/diffView/utils/findRelease.ts","../../src/structure/diffView/versionMode/components/VersionModeHeader.tsx","../../src/structure/diffView/components/DialogLayout.ts","../../src/structure/panes/document/document-layout/pickDocumentLayoutComponent.ts","../../src/structure/diffView/hooks/usePathSyncChannel.ts","../../src/structure/diffView/components/Scroller.ts","../../src/structure/diffView/components/DiffViewPane.tsx","../../src/structure/diffView/components/EditReferenceLinkComponent.tsx","../../src/structure/diffView/components/DiffView.tsx","../../src/structure/diffView/plugin/DiffViewDocumentLayout.tsx","../../src/structure/components/pane/constants.ts","../../src/structure/components/pane/usePaneLayout.ts","../../src/structure/components/pane/PaneDivider.tsx","../../src/structure/components/pane/Pane.tsx","../../src/structure/components/pane/PaneContent.styles.tsx","../../src/structure/components/pane/usePane.ts","../../src/structure/components/pane/PaneContent.tsx","../../src/structure/util/toLowerCaseNoSpaces.tsx","../../src/structure/components/pane/PaneMenuButtonItem.tsx","../../src/structure/components/pane/PaneContextMenuButton.tsx","../../src/structure/components/pane/PaneFooter.styles.tsx","../../src/structure/components/pane/PaneFooter.tsx","../../src/structure/components/pane/PaneHeader.styles.tsx","../../src/structure/components/pane/PaneHeader.tsx","../../src/structure/components/pane/PaneHeaderActionButton.tsx","../../src/structure/components/pane/PaneLayout.styles.tsx","../../src/structure/components/pane/helpers/_calcPaneResize.ts","../../src/structure/components/pane/helpers/_getDOMPath.ts","../../src/structure/components/pane/helpers/_sortElements.ts","../../src/structure/components/pane/paneLayoutController.ts","../../src/structure/components/pane/PaneLayout.tsx","../../src/structure/panes/error/ErrorPane.tsx","../../src/structure/components/Delay.tsx","../../src/structure/panes/loading/getWaitMessages.ts","../../src/structure/panes/loading/LoadingPane.tsx","../../src/structure/panes/document/useDocumentPane.tsx","../../src/structure/panes/document/comments/CommentsWrapper.tsx","../../src/structure/useStructureTool.ts","../../src/structure/panes/document/constants.ts","../../src/structure/panes/document/DocumentInspectorMenuItemsResolver.tsx","../../src/structure/panes/document/useDocumentTitle.ts","../../src/structure/panes/document/DocumentOperationResults.tsx","../../src/structure/components/paneItem/helpers.tsx","../../src/structure/hasObsoleteDraft.ts","../../src/structure/mustChooseNewDocumentDestination.ts","../../src/structure/panes/document/documentInspector/DocumentInspectorHeader.tsx","../../src/structure/panes/document/documentInspector/DocumentInspectorPanel.tsx","../../src/structure/useStructureToolSetting.ts","../../src/structure/panes/document/inspectDialog/constants.ts","../../src/structure/panes/document/inspectDialog/helpers.ts","../../src/structure/panes/document/inspectDialog/InspectDialog.styles.tsx","../../src/structure/panes/document/inspectDialog/Search.tsx","../../src/structure/panes/document/inspectDialog/InspectDialog.tsx","../../src/structure/panes/document/documentPanel/banners/Banner.tsx","../../src/structure/panes/document/documentPanel/banners/DeletedDocumentBanners.tsx","../../src/structure/panes/document/documentPanel/banners/DeprecatedDocumentTypeBanner.tsx","../../src/structure/components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry.ts","../../src/structure/components/requestPermissionDialog/RequestPermissionDialog.tsx","../../src/structure/components/requestPermissionDialog/useRoleRequestsStatus.tsx","../../src/structure/panes/document/documentPanel/banners/InsufficientPermissionBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ReferenceChangedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ScheduledDraftOverrideBanner.tsx","../../src/structure/components/paneRouter/usePaneRouter.ts","../../src/structure/panes/document/documentPanel/banners/ArchivedReleaseDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CanvasLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ChooseNewDocumentDestinationBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CreateLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/DocumentNotInReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/__telemetry__/DraftLiveEditBanner.telemetry.ts","../../src/structure/panes/document/documentPanel/banners/ObsoleteDraftBanner.tsx","../../src/structure/panes/document/documentPanel/banners/OpenReleaseToEditBanner.tsx","../../src/structure/panes/document/documentPanel/banners/RevisionNotFoundBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ScheduledReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/UnpublishedDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormHeader.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormView.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTabs.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTitle.tsx","../../src/structure/panes/document/documentPanel/header/FavoriteToggle.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelSubHeader.tsx","../../src/structure/panes/document/documentPanel/DocumentPanel.tsx","../../src/structure/menuNodes.ts","../../src/structure/constants.ts","../../src/structure/panes/document/statusBar/dialogs/constants.ts","../../src/structure/panes/document/statusBar/dialogs/ConfirmDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/ModalDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/PopoverDialog.tsx","../../src/structure/panes/document/statusBar/ActionStateDialog.tsx","../../src/structure/panes/document/statusBar/ActionMenuButton.tsx","../../src/structure/documentActions/DeleteAction.tsx","../../src/structure/documentActions/DiscardChangesAction.tsx","../../src/structure/documentActions/DuplicateAction.tsx","../../src/structure/documentActions/HistoryRestoreAction.tsx","../../src/structure/documentActions/__telemetry__/documentActions.telemetry.ts","../../src/structure/documentActions/PublishAction.tsx","../../src/structure/documentActions/UnpublishAction.tsx","../../src/structure/panes/document/statusBar/DocumentStatusBarActions.tsx","../../src/structure/panes/document/documentPanel/header/hook/useChipScrollPosition.tsx","../../src/structure/panes/document/documentPanel/header/perspective/DocumentPerspectiveList.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelHeader.tsx","../../src/structure/components/spacerButton/SpacerButton.tsx","../../src/structure/panes/document/statusBar/DocumentBadges.tsx","../../src/structure/panes/document/timeline/constants.ts","../../src/structure/panes/document/timeline/helpers.ts","../../src/structure/panes/document/timeline/expandableTimelineItemButton.tsx","../../src/structure/panes/document/timeline/timeline.styled.tsx","../../src/structure/panes/document/timeline/timelineI18n.ts","../../src/structure/panes/document/timeline/userAvatarStack.tsx","../../src/structure/panes/document/timeline/timelineItem.tsx","../../src/structure/panes/document/timeline/utils.ts","../../src/structure/panes/document/timeline/timeline.tsx","../../src/structure/panes/document/timeline/TimelineError.tsx","../../src/structure/panes/document/timeline/timelineMenu.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/AnimatedStatusIcon.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/DocumentStatusPulse.tsx","../../src/structure/panes/document/statusBar/DocumentStatusLine.tsx","../../src/structure/panes/document/statusBar/RevisionStatusLine.tsx","../../src/structure/panes/document/statusBar/useResizeObserver.ts","../../src/structure/panes/document/statusBar/DocumentStatusBar.tsx","../../src/structure/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx","../../src/structure/panes/document/components/HiddenCheckmarkIcon.tsx","../../src/structure/panes/document/menuItems.ts","../../src/structure/panes/document/document-layout/DocumentLayoutError.tsx","../../src/structure/panes/document/document-layout/DocumentLayoutFooter.tsx","../../src/structure/panes/document/document-layout/DocumentLayout.tsx","../../src/structure/panes/document/document-layout/useDocumentLayoutComponent.ts","../../src/structure/hooks/useDocumentLastRev.ts","../../src/structure/panes/document/__telemetry__/documentPanes.telemetry.ts","../../src/structure/panes/document/getInitialValueTemplateOpts.ts","../../src/structure/panes/document/useDocumentPaneInitialValue.ts","../../src/structure/panes/document/useDocumentPaneInspector.ts","../../src/structure/panes/document/usePreviewUrl.ts","../../src/structure/panes/document/DocumentPaneProvider.tsx","../../src/structure/panes/document/DocumentEventsPane.tsx","../../src/structure/panes/document/DocumentPaneLegacyTimeline.tsx","../../src/structure/panes/document/DocumentPerspectiveProvider.tsx","../../src/structure/panes/document/DocumentPaneProviderWrapper.tsx","../../src/structure/panes/document/useResetHistoryParams.ts","../../src/structure/panes/document/DocumentPane.tsx","../../src/structure/components/paneRouter/BackLink.tsx","../../src/structure/components/paneRouter/ChildLink.tsx","../../src/structure/components/paneRouter/ParameterizedLink.tsx","../../src/structure/components/paneRouter/ReferenceChildLink.tsx","../../src/structure/components/paneRouter/PaneRouterProvider.tsx","../../src/structure/panes/unknown/UnknownPaneType.tsx","../../src/structure/panes/StructureToolPane.tsx","../../src/structure/components/DocTitle.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx","../../src/structure/components/paneItem/PaneItemPreview.tsx","../../src/structure/components/confirmDeleteDialog/ReferencePreviewLink.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx","../../src/structure/components/confirmDeleteDialog/useReferringDocuments.ts","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx","../../src/structure/components/confirmDeleteDialog/index.tsx","../../src/structure/components/IntentButton.tsx","../../src/structure/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderCreateButton.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderActions.tsx","../../src/structure/components/MissingSchemaType.tsx","../../src/structure/components/paneItem/PaneItem.tsx","../../src/structure/components/RenderActionCollectionState.tsx","../../src/structure/components/RenderBadgeCollectionState.tsx","../../src/structure/panes/documentList/constants.ts","../../src/structure/panes/documentList/DocumentListPaneContent.tsx","../../src/structure/panes/documentList/helpers.ts","../../src/structure/panes/documentList/listenSearchQuery.ts","../../src/structure/panes/documentList/useDocumentList.ts","../../src/structure/panes/documentList/DocumentListPane.tsx","../../src/structure/panes/documentList/PaneHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListSelect.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListProvider.tsx","../../src/structure/panes/documentList/sheetList/SheetListCell.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetColumns.tsx","../../src/structure/panes/documentList/sheetList/ColumnsControl.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListFilter.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListPaginator.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetListStore.ts","../../src/structure/panes/documentList/sheetList/useDocumentSheetList.ts","../../src/structure/panes/documentList/sheetList/DocumentSheetListPane.tsx","../../src/structure/panes/documentList/PaneContainer.tsx","../../src/structure/documentBadges/LiveEditBadge.ts","../../src/structure/getIntentState.ts","../../src/structure/panes/document/inspectors/changes/ChangesInspector.tsx","../../src/structure/panes/document/timeline/events/EventTimelineItem.tsx","../../src/structure/panes/document/timeline/events/PublishedEventMenu.tsx","../../src/structure/panes/document/timeline/events/EventsTimeline.tsx","../../src/structure/panes/document/timeline/events/EventsTimelineMenu.tsx","../../src/structure/panes/document/inspectors/changes/EventsInspector.tsx","../../src/structure/panes/document/inspectors/changes/EventsSelector.tsx","../../src/structure/panes/document/inspectors/changes/HistorySelector.tsx","../../src/structure/panes/document/inspectors/changes/ChangesTabs.tsx","../../src/structure/panes/document/inspectors/changes/index.ts","../../src/structure/panes/document/inspectors/validation/getPathTitles.ts","../../src/structure/panes/document/inspectors/validation/ValidationInspector.tsx","../../src/structure/panes/document/inspectors/validation/index.ts","../../src/structure/router.ts","../../src/structure/structureTool.ts"],"sourcesContent":["import {useMemo} from 'react'\nimport {Subject} from 'rxjs'\n\nimport {type PathSyncChannel, type PathSyncState} from '../types/pathSyncChannel'\n\n/**\n * @internal\n */\nexport function useCreatePathSyncChannel(): PathSyncChannel {\n  return useMemo(() => new Subject<PathSyncState>(), [])\n}\n","/**\n * @internal\n */\nexport const DIFF_VIEW_SEARCH_PARAMETER = 'diffView'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER = 'previousDocument'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER = 'nextDocument'\n\n/**\n * @internal\n */\nexport const DIFF_SEARCH_PARAM_DELIMITER = ','\n","import {fromPairs, toPairs} from 'lodash'\nimport {useCallback} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode} from '../types/diffViewMode'\n\ntype NavigateDiffView = (\n  options: {\n    mode?: DiffViewMode\n  } & Partial<\n    Record<\n      'previousDocument' | 'nextDocument',\n      {\n        type: string\n        id: string\n      }\n    >\n  >,\n) => void\n\nexport interface DiffViewRouter {\n  navigateDiffView: NavigateDiffView\n  exitDiffView: () => void\n}\n\n/**\n * @internal\n */\nexport function useDiffViewRouter(): DiffViewRouter {\n  const {navigate, state: routerState} = useRouter()\n\n  const navigateDiffView = useCallback<NavigateDiffView>(\n    ({mode, previousDocument, nextDocument}) => {\n      const next = {\n        ...fromPairs(routerState._searchParams),\n        ...(mode\n          ? {\n              [DIFF_VIEW_SEARCH_PARAMETER]: mode,\n            }\n          : {}),\n        ...(previousDocument\n          ? {\n              [DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER]: [\n                previousDocument.type,\n                previousDocument.id,\n              ].join(DIFF_SEARCH_PARAM_DELIMITER),\n            }\n          : {}),\n        ...(nextDocument\n          ? {\n              [DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER]: [nextDocument.type, nextDocument.id].join(\n                DIFF_SEARCH_PARAM_DELIMITER,\n              ),\n            }\n          : {}),\n      }\n\n      navigate({\n        ...routerState,\n        _searchParams: toPairs(next),\n      })\n    },\n    [navigate, routerState],\n  )\n\n  const exitDiffView = useCallback(() => {\n    navigate({\n      ...routerState,\n      _searchParams: (routerState._searchParams ?? []).filter(\n        ([key]) =>\n          ![\n            DIFF_VIEW_SEARCH_PARAMETER,\n            DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n            DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n          ].includes(key),\n      ),\n    })\n  }, [navigate, routerState])\n\n  return {\n    navigateDiffView,\n    exitDiffView,\n  }\n}\n","/**\n * @internal\n */\nexport const diffViewModes = ['version'] as const\n\n/**\n * @internal\n */\nexport type DiffViewMode = (typeof diffViewModes)[number]\n","import {useEffect, useMemo} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode, diffViewModes} from '../types/diffViewMode'\n\nfunction isDiffViewMode(maybeDiffViewMode: unknown): maybeDiffViewMode is DiffViewMode {\n  return diffViewModes.includes(maybeDiffViewMode as DiffViewMode)\n}\n\ntype DiffViewState =\n  | {\n      isActive: true\n      state: 'ready'\n      mode: DiffViewMode\n      documents: Record<\n        'previous' | 'next',\n        {\n          type: string\n          id: string\n        }\n      >\n    }\n  | {\n      isActive: true\n      state: 'error'\n      mode: DiffViewMode\n      documents?: never\n    }\n  | {\n      isActive: false\n      state?: never\n      mode?: never\n      documents?: never\n    }\n\nexport function useDiffViewState({\n  onParamsError,\n}: {\n  onParamsError?: (errors: DiffViewStateErrorWithInput[]) => void\n} = {}): DiffViewState {\n  const {state: routerState} = useRouter()\n  const searchParams = new URLSearchParams(routerState._searchParams)\n  const previousDocument = searchParams.get(DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER)\n  const nextDocument = searchParams.get(DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER)\n  const mode = searchParams.get(DIFF_VIEW_SEARCH_PARAMETER)\n  const anyParamSet = [previousDocument, nextDocument, mode].some((param) => param !== null)\n\n  const params = useMemo(\n    () =>\n      parseParams({\n        previousDocument: previousDocument ?? '',\n        nextDocument: nextDocument ?? '',\n        mode: mode ?? '',\n      }),\n    [mode, nextDocument, previousDocument],\n  )\n\n  useEffect(() => {\n    if (params.result === 'error' && anyParamSet) {\n      onParamsError?.(params.errors)\n    }\n  }, [anyParamSet, onParamsError, params])\n\n  if (params.result === 'error') {\n    return {\n      isActive: false,\n    }\n  }\n\n  return {\n    state: 'ready',\n    isActive: true,\n    ...params.params,\n  }\n}\n\ntype DiffViewStateError =\n  | 'invalidModeParam'\n  | 'invalidPreviousDocumentParam'\n  | 'invalidNextDocumentParam'\n\ntype DiffViewStateErrorWithInput = [error: DiffViewStateError, input: unknown]\n\ninterface ParamsSuccess {\n  result: 'success'\n  params: Pick<DiffViewState & {state: 'ready'}, 'mode' | 'documents'>\n}\n\ninterface ParamsError {\n  result: 'error'\n  errors: DiffViewStateErrorWithInput[]\n}\n\nfunction parseParams({\n  previousDocument,\n  nextDocument,\n  mode,\n}: {\n  previousDocument: string\n  nextDocument: string\n  mode: string\n}): ParamsSuccess | ParamsError {\n  const errors: DiffViewStateErrorWithInput[] = []\n\n  const [previousDocumentType, previousDocumentId] = previousDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  const [nextDocumentType, nextDocumentId] = nextDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  if (!isDiffViewMode(mode)) {\n    errors.push(['invalidModeParam', mode])\n  }\n\n  if (typeof previousDocumentType === 'undefined' || typeof previousDocumentId === 'undefined') {\n    errors.push(['invalidPreviousDocumentParam', previousDocument])\n  }\n\n  if (typeof nextDocumentType === 'undefined' || typeof nextDocumentId === 'undefined') {\n    errors.push(['invalidNextDocumentParam', nextDocument])\n  }\n\n  if (errors.length !== 0) {\n    return {\n      result: 'error',\n      errors,\n    }\n  }\n\n  return {\n    result: 'success',\n    params: {\n      mode,\n      documents: {\n        previous: {\n          type: previousDocumentType,\n          id: previousDocumentId,\n        },\n        next: {\n          type: nextDocumentType,\n          id: nextDocumentId,\n        },\n      },\n    },\n  } as ParamsSuccess\n}\n","import {useEffect} from 'react'\nimport ScrollMirror from 'scrollmirror'\n\n/**\n * Use the ScrollMirror library to synchronise the scroll position for an array of elements.\n *\n * @internal\n */\nexport function useScrollMirror(elements: (HTMLElement | null)[]): void {\n  useEffect(() => {\n    const existentElements = elements.filter((element) => element !== null)\n\n    if (existentElements.length === 0) {\n      return undefined\n    }\n\n    const scrollMirror = new ScrollMirror(existentElements)\n    return () => scrollMirror.destroy()\n  }, [elements])\n}\n","import {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  type ReleaseDocument,\n} from 'sanity'\n\n/**\n * If the provided document id represents a version, find and return the corresponding release\n * document. Otherwise, return a string literal signifying whether the document id represents a\n * published or draft document.\n *\n * TODO: Return a type compatible with `TargetPerspective` (`\"draft\"` must be `\"drafts\"`).\n *\n * @internal\n */\nexport function findRelease(\n  documentId: string,\n  releases: ReleaseDocument[],\n): ReleaseDocument | 'published' | 'draft' | undefined {\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  if (isDraftId(documentId)) {\n    return 'draft'\n  }\n\n  return releases.find(\n    ({_id}) => getReleaseIdFromReleaseDocumentId(_id) === getVersionFromId(documentId),\n  )\n}\n","import {CloseIcon, LockIcon, TransferIcon} from '@sanity/icons'\nimport {\n  Box,\n  // eslint-disable-next-line no-restricted-imports -- we need more control over how the `Button` component is rendered\n  Button,\n  type ButtonTone,\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports -- the `VersionModeHeader` component needs more control over how the `MenuItem` component is rendered\n  MenuItem,\n  Stack,\n  Text,\n} from '@sanity/ui'\n// eslint-disable-next-line @sanity/i18n/no-i18next-import -- figure out how to have the linter be fine with importing types-only\nimport {type TFunction} from 'i18next'\nimport {type ComponentProps, type ComponentType, useCallback, useMemo} from 'react'\nimport {\n  type DocumentLayoutProps,\n  formatRelativeLocalePublishDate,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  getVersionId,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  ReleaseAvatar,\n  type ReleaseDocument,\n  useActiveReleases,\n  useDocumentVersions,\n  useEditState,\n  useTranslation,\n  useWorkspace,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {MenuButton} from '../../../../ui-components/menuButton/MenuButton'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useDiffViewRouter} from '../../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../../hooks/useDiffViewState'\nimport {findRelease} from '../../utils/findRelease'\n\nconst VersionModeHeaderLayout = styled.header`\n  display: grid;\n  grid-area: header;\n  grid-template-columns: 1fr min-content 1fr;\n  border-block-end: 1px solid var(--card-border-color);\n`\n\nconst VersionModeHeaderLayoutSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\n/**\n * The header component that is rendered when diff view is being used to compare versions of a\n * document.\n *\n * @internal\n */\nexport const VersionModeHeader: ComponentType<\n  {state: 'pending' | 'ready' | 'error'} & Pick<DocumentLayoutProps, 'documentId'>\n> = ({documentId, state}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const {exitDiffView, navigateDiffView} = useDiffViewRouter()\n  const {documents} = useDiffViewState()\n  const activeReleases = useActiveReleases()\n  const releasesIds = documentVersions.flatMap((id) => getVersionFromId(id) ?? [])\n\n  const releases = useMemo(() => {\n    return activeReleases.data.filter((release) => {\n      const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n      return typeof releaseId !== 'undefined' && releasesIds.includes(releaseId)\n    })\n  }, [activeReleases.data, releasesIds])\n\n  const onSelectPreviousRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.previous !== 'undefined') {\n        navigateDiffView({\n          previousDocument: {\n            ...documents.previous,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.previous, navigateDiffView],\n  )\n\n  const onSelectNextRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.next !== 'undefined') {\n        navigateDiffView({\n          nextDocument: {\n            ...documents.next,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.next, navigateDiffView],\n  )\n\n  return (\n    <VersionModeHeaderLayout>\n      <VersionModeHeaderLayoutSection>\n        <Box padding={4}>\n          <Text as=\"h1\" size={1} muted>\n            {t('compare-versions.title')}\n          </Text>\n        </Box>\n        {typeof documents?.previous !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectPreviousRelease}\n            role=\"previous\"\n            documentId={documentId}\n            state={state}\n            document={documents.previous}\n          />\n        )}\n      </VersionModeHeaderLayoutSection>\n      <Flex align=\"center\" paddingX={3}>\n        <Text size={1}>\n          <TransferIcon />\n        </Text>\n      </Flex>\n      <VersionModeHeaderLayoutSection>\n        {typeof documents?.next !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectNextRelease}\n            role=\"next\"\n            documentId={documentId}\n            state={state}\n            document={documents.next}\n          />\n        )}\n        <Box\n          padding={3}\n          style={{\n            justifySelf: 'end',\n          }}\n        >\n          <Button icon={CloseIcon} mode=\"bleed\" onClick={exitDiffView} padding={2} />\n        </Box>\n      </VersionModeHeaderLayoutSection>\n    </VersionModeHeaderLayout>\n  )\n}\n\ninterface VersionMenuProps {\n  state: 'pending' | 'ready' | 'error'\n  releases: ReleaseDocument[]\n  role: 'previous' | 'next'\n  onSelectRelease: (releaseId: string) => void\n  documentId: string\n  document: {\n    type: string\n    id: string\n  }\n}\n\nconst VersionMenu: ComponentType<VersionMenuProps> = ({\n  releases = [],\n  onSelectRelease,\n  role,\n  documentId,\n  document,\n}) => {\n  const {published, draft} = useEditState(getPublishedId(document.id), document.type)\n  const selected = useMemo(() => findRelease(document.id, releases), [document.id, releases])\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  return (\n    <MenuButton\n      id={role}\n      button={\n        <Button\n          type=\"button\"\n          mode=\"bleed\"\n          padding={2}\n          paddingRight={3}\n          radius=\"full\"\n          selected\n          {...getMenuButtonProps({selected, tCore, tStructure})}\n        />\n      }\n      menu={\n        <Menu>\n          {published && (\n            <VersionMenuItem\n              type=\"published\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'published'}\n              documentId={documentId}\n            />\n          )}\n          {isDraftModelEnabled && draft && (\n            <VersionMenuItem\n              type=\"draft\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'draft'}\n              documentId={documentId}\n            />\n          )}\n          {releases.map((release) => (\n            <VersionMenuItem\n              key={release._id}\n              release={release}\n              onSelect={onSelectRelease}\n              isSelected={typeof selected !== 'string' && selected?._id === release._id}\n              documentId={documentId}\n            />\n          ))}\n        </Menu>\n      }\n    />\n  )\n}\n\ntype VersionMenuItemProps = {\n  onSelect: (releaseId: string) => void\n  isSelected?: boolean\n  documentId: string\n} & (\n  | {\n      release: ReleaseDocument\n      type?: never\n    }\n  | {\n      type: 'published' | 'draft'\n      release?: never\n    }\n)\n\nconst VersionMenuItem: ComponentType<VersionMenuItemProps> = ({\n  type,\n  release,\n  onSelect,\n  isSelected,\n  documentId,\n}) => {\n  const {t: tCore} = useTranslation()\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n\n  const onClick = useCallback(() => {\n    if (type === 'draft') {\n      onSelect(getDraftId(documentId))\n      return\n    }\n\n    if (type === 'published') {\n      onSelect(getPublishedId(documentId))\n      return\n    }\n\n    if (typeof release?._id !== 'undefined') {\n      onSelect(getVersionId(documentId, getReleaseIdFromReleaseDocumentId(release._id)))\n    }\n  }, [type, onSelect, documentId, release?._id])\n\n  if (type) {\n    const tone: ButtonTone = type === 'published' ? 'positive' : 'caution'\n\n    return (\n      <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n        <Flex gap={1}>\n          <ReleaseAvatar padding={2} tone={tone} />\n          <Box paddingY={2}>\n            <Text size={1} weight=\"medium\">\n              {tStructure(['compare-versions.status', type].join('.'))}\n            </Text>\n          </Box>\n        </Flex>\n      </MenuItem>\n    )\n  }\n\n  const tone: ButtonTone = release ? getReleaseTone(release) : 'neutral'\n\n  return (\n    <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n      <Flex gap={1}>\n        <ReleaseAvatar padding={2} tone={tone} />\n        <Stack flex={1} paddingY={2} paddingRight={2} space={2}>\n          <Text size={1} weight=\"medium\">\n            {release.metadata.title || tCore('release.placeholder-untitled-release')}\n          </Text>\n          {['asap', 'undecided'].includes(release.metadata.releaseType) && (\n            <Text muted size={1}>\n              {tCore(`release.type.${release.metadata.releaseType}`)}\n            </Text>\n          )}\n          {release.metadata.releaseType === 'scheduled' && (\n            <Text muted size={1}>\n              {formatRelativeLocalePublishDate(release)}\n            </Text>\n          )}\n        </Stack>\n        <Flex flex=\"none\">\n          {isReleaseScheduledOrScheduling(release) && (\n            <Box padding={2}>\n              <Text size={1}>\n                <LockIcon />\n              </Text>\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n    </MenuItem>\n  )\n}\n\nfunction getMenuButtonProps({\n  selected,\n  tCore,\n  tStructure,\n}: {\n  selected?: ReleaseDocument | 'published' | 'draft'\n  tCore: TFunction\n  tStructure: TFunction\n}): Pick<ComponentProps<typeof Button>, 'text' | 'tone' | 'icon' | 'iconRight' | 'disabled'> {\n  if (typeof selected === 'undefined') {\n    return {\n      text: tCore('common.loading'),\n      tone: 'neutral',\n      disabled: true,\n    }\n  }\n\n  if (isReleaseDocument(selected)) {\n    const tone: ButtonTone = selected ? getReleaseTone(selected) : 'neutral'\n\n    return {\n      text: selected?.metadata.title || tCore('release.placeholder-untitled-release'),\n      icon: <ReleaseAvatar padding={1} tone={tone} />,\n      iconRight: selected && isReleaseScheduledOrScheduling(selected) ? <LockIcon /> : undefined,\n      tone,\n    }\n  }\n\n  const tone: ButtonTone = selected === 'published' ? 'positive' : 'caution'\n\n  return {\n    text: tStructure(['compare-versions.status', selected].join('.')),\n    icon: <ReleaseAvatar padding={1} tone={tone} />,\n    tone,\n  }\n}\n","import {styled} from 'styled-components'\n\nexport const DialogLayout = styled.div`\n  --offset-block: 40px;\n  display: grid;\n  height: calc(100vh - var(--offset-block));\n  min-height: 0;\n  overflow: hidden;\n  grid-template-areas:\n    'header header'\n    'previous-document next-document';\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: min-content minmax(0, 1fr);\n`\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, type PluginOptions} from 'sanity'\n\n/**\n * Pick the document layout component when composing the component middleware chain.\n */\nexport function pickDocumentLayoutComponent(plugin: PluginOptions) {\n  return plugin.document?.components?.unstable_layout as ComponentType<\n    Omit<DocumentLayoutProps, 'renderDefault'>\n  >\n}\n","import {type Path} from '@sanity/types'\nimport {useCallback, useMemo} from 'react'\nimport deepEquals from 'react-fast-compare'\nimport {distinctUntilChanged, filter, map, type Observable} from 'rxjs'\n\nimport {type PathSyncChannelProps, type PathSyncState} from '../types/pathSyncChannel'\n\ntype Push = (state: PathSyncState) => void\n\n/**\n * Synchronise the open path between multiple document panes.\n *\n * @internal\n */\nexport function usePathSyncChannel({syncChannel, id}: PathSyncChannelProps): {\n  push: Push\n  path: Observable<Path>\n} {\n  const push = useCallback<Push>(\n    (state) => syncChannel.next({...state, source: id}),\n    [id, syncChannel],\n  )\n\n  const path = useMemo(\n    () =>\n      syncChannel.pipe(\n        distinctUntilChanged<PathSyncState>((previous, next) =>\n          deepEquals(previous.path, next.path),\n        ),\n        filter(({source}) => source !== id),\n        map((state) => state.path),\n      ),\n    [id, syncChannel],\n  )\n\n  return {\n    path,\n    push,\n  }\n}\n","import {styled} from 'styled-components'\n\nexport const Scroller = styled.div`\n  position: relative;\n  height: 100%;\n  overflow: auto;\n  scroll-behavior: smooth;\n  scrollbar-width: var(--scrollbar-width);\n  overscroll-behavior: contain;\n  will-change: scroll-position;\n`\n","import {type Path, type SanityDocument} from '@sanity/types'\nimport {\n  BoundaryElementProvider,\n  Card,\n  Container as UiContainer,\n  DialogProvider,\n  PortalProvider,\n} from '@sanity/ui'\nimport {noop} from 'lodash'\nimport {\n  type ComponentType,\n  type CSSProperties,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  ChangeIndicatorsTracker,\n  createPatchChannel,\n  FormBuilder,\n  getPublishedId,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  isVersionId,\n  LoadingBlock,\n  type TargetPerspective,\n  useActiveReleases,\n  useDocumentForm,\n  useEditState,\n  useMiddlewareComponents,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {CommentsEnabledContext, ReviewChangesContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {pickDocumentLayoutComponent} from '../../panes/document/document-layout/pickDocumentLayoutComponent'\nimport {usePathSyncChannel} from '../hooks/usePathSyncChannel'\nimport {type PathSyncChannel} from '../types/pathSyncChannel'\nimport {findRelease} from '../utils/findRelease'\nimport {Scroller} from './Scroller'\n\nconst DiffViewPaneLayout = styled(Card)`\n  position: relative;\n  grid-area: var(--grid-area);\n`\n\nconst Container = styled(UiContainer)`\n  width: auto;\n`\n\ninterface DiffViewPaneProps {\n  documentType: string\n  documentId: string\n  role: 'previous' | 'next'\n  scrollElement: HTMLElement | null\n  syncChannel: PathSyncChannel\n  compareDocument: {\n    type: string\n    id: string\n  }\n}\n\nexport const DiffViewPane = forwardRef<HTMLDivElement, DiffViewPaneProps>(function DiffViewPane(\n  {role, documentType, documentId, scrollElement, syncChannel, compareDocument},\n  ref,\n) {\n  const containerElement = useRef<HTMLDivElement | null>(null)\n  const [portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const DocumentLayout = useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: useCallback(\n      () => (\n        <DiffViewDocument\n          compareDocument={compareDocument}\n          documentId={documentId}\n          documentType={documentType}\n          role={role}\n          scrollElement={scrollElement}\n          syncChannel={syncChannel}\n        />\n      ),\n      [compareDocument, documentId, documentType, role, scrollElement, syncChannel],\n    ),\n  })\n\n  return (\n    <ReviewChangesContext.Provider\n      value={{\n        // Render the change indicators inertly, because the diff view modal does not currently\n        // provide a way to display document inspectors.\n        isInteractive: false,\n        onOpenReviewChanges: noop,\n        onSetFocus: noop,\n        isReviewChangesOpen: false,\n      }}\n    >\n      <ChangeIndicatorsTracker>\n        <VirtualizerScrollInstanceProvider\n          scrollElement={scrollElement}\n          containerElement={containerElement}\n        >\n          <BoundaryElementProvider element={boundaryElement}>\n            <DiffViewPaneLayout\n              ref={setBoundaryElement}\n              style={\n                {\n                  '--grid-area': `${role}-document`,\n                } as CSSProperties\n              }\n              borderLeft={role === 'next'}\n            >\n              <Scroller\n                ref={ref}\n                style={\n                  {\n                    // The scroll position is synchronised between panes. This style hides the\n                    // scrollbar for all panes except the one displaying the next document.\n                    '--scrollbar-width': role !== 'next' && 'none',\n                  } as CSSProperties\n                }\n              >\n                <PortalProvider element={portalElement}>\n                  <DialogProvider position=\"absolute\">\n                    <Container ref={containerElement} padding={4} width={1}>\n                      <DocumentLayout documentId={documentId} documentType={documentType} />\n                    </Container>\n                  </DialogProvider>\n                </PortalProvider>\n              </Scroller>\n              <div data-testid=\"diffView-document-panel-portal\" ref={setPortalElement} />\n            </DiffViewPaneLayout>\n          </BoundaryElementProvider>\n        </VirtualizerScrollInstanceProvider>\n      </ChangeIndicatorsTracker>\n    </ReviewChangesContext.Provider>\n  )\n})\n\nconst DiffViewDocument: ComponentType<DiffViewPaneProps> = ({\n  role,\n  documentType,\n  documentId,\n  syncChannel,\n  compareDocument,\n}) => {\n  const compareValue = useCompareValue({compareDocument})\n  const {data: releases} = useActiveReleases()\n  const [patchChannel] = useState(() => createPatchChannel())\n  const perspective = useMemo(() => findRelease(documentId, releases), [documentId, releases])\n\n  const {\n    formState,\n    onChange,\n    onFocus,\n    onBlur,\n    onSetActiveFieldGroup,\n    onSetCollapsedFieldSet,\n    onSetCollapsedPath,\n    collapsedFieldSets,\n    ready,\n    collapsedPaths,\n    schemaType,\n    value,\n    onProgrammaticFocus,\n    ...documentForm\n  } = useDocumentForm({\n    documentId: getPublishedId(documentId),\n    documentType,\n    selectedPerspectiveName: perspectiveName(documentId),\n    releaseId: getVersionFromId(documentId),\n    comparisonValue: compareValue,\n    displayInlineChanges: true,\n  })\n\n  const isLoading = formState === null || !ready\n\n  const pathSyncChannel = usePathSyncChannel({\n    id: role,\n    syncChannel,\n  })\n\n  const onPathOpen = useCallback(\n    (path: Path) => {\n      documentForm.onPathOpen(path)\n      pathSyncChannel.push({source: role, path})\n    },\n    [documentForm, pathSyncChannel, role],\n  )\n\n  useEffect(() => {\n    const subscription = pathSyncChannel.path.subscribe(onProgrammaticFocus)\n    return () => subscription.unsubscribe()\n  }, [onProgrammaticFocus, pathSyncChannel.path])\n\n  return isLoading ? (\n    <LoadingBlock showText />\n  ) : (\n    <CommentsEnabledContext.Provider\n      value={{\n        enabled: false,\n        mode: null,\n      }}\n    >\n      <FormBuilder\n        __internal_patchChannel={patchChannel}\n        id={`diffView-pane-${role}`}\n        onChange={onChange}\n        onPathFocus={onFocus}\n        onPathOpen={onPathOpen}\n        onPathBlur={onBlur}\n        onFieldGroupSelect={onSetActiveFieldGroup}\n        onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n        onSetPathCollapsed={onSetCollapsedPath}\n        collapsedPaths={collapsedPaths}\n        collapsedFieldSets={collapsedFieldSets}\n        focusPath={formState.focusPath}\n        changed={formState.changed}\n        focused={formState.focused}\n        groups={formState.groups}\n        validation={formState.validation}\n        members={formState.members}\n        perspective={sanitizeBundleName(perspective)}\n        hasUpstreamVersion={formState.hasUpstreamVersion}\n        presence={formState.presence}\n        schemaType={schemaType}\n        value={value}\n        compareValue={compareValue}\n      />\n    </CommentsEnabledContext.Provider>\n  )\n}\n\nfunction perspectiveName(documentId: string): string | undefined {\n  if (isVersionId(documentId)) {\n    return getVersionFromId(documentId)\n  }\n\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  return undefined\n}\n\ntype UseCompareValueOptions = Pick<DiffViewPaneProps, 'compareDocument'>\n\n/**\n * Fetch the contents of `compareDocument` for comparison with another version of the document.\n */\nfunction useCompareValue({compareDocument}: UseCompareValueOptions): SanityDocument | undefined {\n  const compareDocumentEditState = useEditState(\n    getPublishedId(compareDocument.id),\n    compareDocument.type,\n    'low',\n    getVersionFromId(compareDocument.id),\n  )\n\n  return useMemo(() => {\n    if (isVersionId(compareDocument.id)) {\n      return compareDocumentEditState.version ?? undefined\n    }\n\n    if (isDraftId(compareDocument.id)) {\n      return compareDocumentEditState.draft ?? undefined\n    }\n\n    if (isPublishedId(compareDocument.id)) {\n      return compareDocumentEditState.published ?? undefined\n    }\n\n    return undefined\n  }, [\n    compareDocument.id,\n    compareDocumentEditState.draft,\n    compareDocumentEditState.published,\n    compareDocumentEditState.version,\n  ])\n}\n\n// TODO: Refactor `findRelease` to return a type compatible with `TargetPerspective` (`\"draft\"` must be `\"drafts\"`), so that `sanitizeBundleName` can be removed.\nfunction sanitizeBundleName(bundle: ReturnType<typeof findRelease>): TargetPerspective | undefined {\n  if (bundle === 'draft') {\n    return 'drafts'\n  }\n\n  return bundle\n}\n","import {type ReferenceInputOptions} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\nimport {styled} from 'styled-components'\n\nconst Link = styled.a`\n  flex: 1;\n  text-decoration: none;\n  color: inherit;\n`\n\nexport const EditReferenceLinkComponent: ReferenceInputOptions['EditReferenceLinkComponent'] = ({\n  children,\n  documentId: _documentId,\n  documentType,\n}) => {\n  const {href} = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: _documentId,\n      type: documentType,\n    },\n  })\n\n  return (\n    <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </Link>\n  )\n}\n","import {type ComponentType, useContext, useMemo, useState} from 'react'\nimport {type DocumentLayoutProps} from 'sanity'\nimport {ReferenceInputOptionsContext} from 'sanity/_singletons'\n\nimport {Dialog} from '../../../ui-components/dialog/Dialog'\nimport {useCreatePathSyncChannel} from '../hooks/useCreatePathSyncChannel'\nimport {useDiffViewRouter} from '../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\nimport {useScrollMirror} from '../hooks/useScrollMirror'\nimport {VersionModeHeader} from '../versionMode/components/VersionModeHeader'\nimport {DialogLayout} from './DialogLayout'\nimport {DiffViewPane} from './DiffViewPane'\nimport {EditReferenceLinkComponent} from './EditReferenceLinkComponent'\n\nexport const DiffView: ComponentType<Pick<DocumentLayoutProps, 'documentId'>> = ({documentId}) => {\n  const {documents, state, mode} = useDiffViewState()\n  const {exitDiffView} = useDiffViewRouter()\n  const syncChannel = useCreatePathSyncChannel()\n  const [previousPaneElement, setPreviousPaneElement] = useState<HTMLElement | null>(null)\n  const [nextPaneElement, setNextPaneElement] = useState<HTMLElement | null>(null)\n  const referenceInputOptionsContext = useContext(ReferenceInputOptionsContext)\n\n  const diffViewReferenceInputOptionsContext = useMemo(\n    () => ({\n      ...referenceInputOptionsContext,\n      disableNew: true,\n      EditReferenceLinkComponent,\n    }),\n    [referenceInputOptionsContext],\n  )\n\n  useScrollMirror([previousPaneElement, nextPaneElement])\n\n  return (\n    <ReferenceInputOptionsContext.Provider value={diffViewReferenceInputOptionsContext}>\n      <Dialog\n        id=\"diffView\"\n        width=\"auto\"\n        onClose={exitDiffView}\n        padding={false}\n        __unstable_hideCloseButton\n      >\n        <DialogLayout>\n          {mode === 'version' && <VersionModeHeader documentId={documentId} state={state} />}\n          {state === 'ready' && (\n            <>\n              <DiffViewPane\n                documentType={documents.previous.type}\n                documentId={documents.previous.id}\n                role=\"previous\"\n                ref={setPreviousPaneElement}\n                scrollElement={previousPaneElement}\n                syncChannel={syncChannel}\n                compareDocument={documents.previous}\n              />\n              <DiffViewPane\n                documentType={documents.next.type}\n                documentId={documents.next.id}\n                role=\"next\"\n                ref={setNextPaneElement}\n                scrollElement={nextPaneElement}\n                syncChannel={syncChannel}\n                // The previous document's edit state is used to calculate the diff inroduced by the next document.\n                compareDocument={documents.previous}\n              />\n            </>\n          )}\n        </DialogLayout>\n      </Dialog>\n    </ReferenceInputOptionsContext.Provider>\n  )\n}\n","import {useToast} from '@sanity/ui'\nimport {type ComponentType, type PropsWithChildren} from 'react'\nimport {type DocumentLayoutProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DiffView} from '../components/DiffView'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\n\nexport const DiffViewDocumentLayout: ComponentType<\n  PropsWithChildren<Pick<DocumentLayoutProps, 'documentId' | 'documentType'>>\n> = ({children, documentId}) => {\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isActive} = useDiffViewState({\n    onParamsError: (errors) => {\n      toast.push({\n        id: 'diffViewParamsParsingError',\n        status: 'error',\n        title: t('compare-version.error.invalidParams.title'),\n        description: (\n          <ul>\n            {errors.map(([error, input]) => (\n              <li key={error}>\n                {t(`compare-version.error.${error}`, {\n                  input,\n                })}\n              </li>\n            ))}\n          </ul>\n        ),\n      })\n    },\n  })\n\n  return (\n    <>\n      {children}\n      {isActive && <DiffView documentId={documentId} />}\n    </>\n  )\n}\n","/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n","import {useContext} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n","import {Layer} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize],\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n","import {BoundaryElementProvider, Card, type CardProps, Code, Flex} from '@sanity/ui'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  type HTMLProps,\n  type ReactNode,\n  useCallback,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {IsLastPaneProvider, LegacyLayerProvider} from 'sanity'\nimport {PaneContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneProps {\n  children?: ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n * @hidden\n * @internal\n */\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  forwardedRef: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const ref = useRef<HTMLDivElement | null>(null)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  // Forward ref to parent\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(forwardedRef, () => ref.current)\n\n  const setRef = useCallback((refValue: HTMLDivElement | null) => {\n    setRootElement(refValue)\n    ref.current = refValue\n  }, [])\n\n  useLayoutEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement],\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement],\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth],\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <IsLastPaneProvider isLastPane={isLast}>\n            <Root\n              data-testid=\"pane\"\n              data-ui=\"Pane\"\n              tone=\"inherit\"\n              hidden={hidden}\n              id={id}\n              overflow={layoutCollapsed ? undefined : 'hidden'}\n              {...restProps}\n              data-pane-collapsed={collapsed ? '' : undefined}\n              data-pane-index={paneIndex}\n              data-pane-selected={selected ? '' : undefined}\n              ref={setRef}\n              style={style}\n            >\n              {PANE_DEBUG && (\n                <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                  <Code size={1}>\n                    {[\n                      `#${paneIndex}`,\n                      `collapsed=${collapsed}`,\n                      `currentMinWidth=${currentMinWidth}`,\n                      `currentMaxWidth=${currentMaxWidth}`,\n                      `flex=${flex}`,\n                      `minWidth=${minWidth}`,\n                      `maxWidth=${maxWidth}`,\n                    ].join('\\n')}\n                  </Code>\n                </Card>\n              )}\n\n              <BoundaryElementProvider element={rootElement}>\n                {!hidden && (\n                  <Flex direction=\"column\" height=\"fill\">\n                    {children}\n                  </Flex>\n                )}\n              </BoundaryElementProvider>\n            </Root>\n          </IsLastPaneProvider>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n","import {useContext} from 'react'\nimport {PaneContext} from 'sanity/_singletons'\n\nimport {type PaneContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n","import {type BoxOverflow} from '@sanity/ui'\nimport {type ElementType, type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {Root} from './PaneContent.styles'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneContentProps {\n  as?: ElementType | keyof React.JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n * @hidden\n * @internal\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n","/**\n * Remove the spaces and lower case the string\n *\n * @param str - string to remove the spaces and lower case\n * @returns str with no spaces and lower case\n */\nexport function toLowerCaseNoSpaces(str: string | undefined): string {\n  if (!str) return ''\n  return str.toLocaleLowerCase().replaceAll(' ', '')\n}\n","import {CheckmarkIcon} from '@sanity/icons'\nimport {MenuDivider, Text} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {TooltipOfDisabled, useGetI18nText, useI18nText} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {MenuGroup, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {toLowerCaseNoSpaces} from '../../util/toLowerCaseNoSpaces'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\nconst MENU_GROUP_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'left-start',\n  portal: true,\n}\n\nexport function PaneMenuButtonItem(props: {\n  disabled?: boolean\n  isAfterGroup: boolean\n  node: _PaneMenuNode\n}) {\n  const {disabled, isAfterGroup, node} = props\n  const getI18nText = useGetI18nText('i18n' in node ? node : undefined)\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  const {title} = getI18nText(node)\n\n  if (node.type === 'group') {\n    if (node.children.length === 0) {\n      return null\n    }\n\n    if (node.expanded) {\n      return (\n        <>\n          {isAfterGroup && <MenuDivider />}\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              key={child.key}\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              node={child}\n            />\n          ))}\n        </>\n      )\n    }\n\n    return (\n      <>\n        {isAfterGroup && <MenuDivider />}\n        <MenuGroup\n          disabled={disabled}\n          icon={node.icon}\n          popover={MENU_GROUP_POPOVER_PROPS}\n          text={title}\n        >\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              key={child.key}\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              node={child}\n            />\n          ))}\n        </MenuGroup>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {isAfterGroup && <MenuDivider />}\n      <PaneContextMenuItemResolver disabled={disabled} node={node} />\n    </>\n  )\n}\n\nfunction PaneContextMenuItemResolver(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {node} = props\n\n  if (node.intent) {\n    return <PaneContextIntentMenuItem {...props} intent={node.intent} />\n  }\n\n  return <PaneContextMenuItem {...props} />\n}\n\nfunction PaneContextMenuItem(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {disabled, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        icon={node.icon}\n        iconRight={node.iconRight || (node.selected && CheckmarkIcon)}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n        data-testid={`action-${toLowerCaseNoSpaces(node.title)}`}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneContextIntentMenuItem(props: {\n  disabled?: boolean\n  intent: Intent\n  node: _PaneMenuItem\n}) {\n  const {disabled, intent, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        as=\"a\"\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        iconRight={node.selected ? CheckmarkIcon : undefined}\n        onClick={handleClick}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n","import {Menu, MenuDivider} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {ContextMenuButton} from 'sanity'\n\nimport {MenuButton, type PopoverProps} from '../../../ui-components'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\ninterface PaneContextMenuButtonProps {\n  nodes: _PaneMenuNode[]\n  actionsNodes?: ReactNode\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nfunction nodesHasTone(nodes: _PaneMenuNode[], tone: NonNullable<_PaneMenuItem['tone']>): boolean {\n  return nodes.some((node) => {\n    return (\n      (node.type === 'item' && node.tone === tone) ||\n      (node.type === 'group' && nodesHasTone(node.children, tone))\n    )\n  })\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {nodes, actionsNodes} = props\n  const id = useId()\n\n  const hasCritical = nodesHasTone(nodes, 'critical')\n  const hasCaution = nodesHasTone(nodes, 'caution')\n\n  return (\n    <MenuButton\n      button={\n        <ContextMenuButton\n          tone={hasCritical ? 'critical' : hasCaution ? 'caution' : undefined}\n          data-testid=\"pane-context-menu-button\"\n        />\n      }\n      id={id}\n      menu={\n        <Menu>\n          {actionsNodes && (\n            <>\n              {actionsNodes}\n              <MenuDivider />\n            </>\n          )}\n          {nodes.map((node, nodeIndex) => {\n            const isAfterGroup = nodes[nodeIndex - 1]?.type === 'group'\n            return <PaneMenuButtonItem key={node.key} isAfterGroup={isAfterGroup} node={node} />\n          })}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n","import {Card, Layer} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n","import {Box} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {usePane} from './usePane'\n\ninterface PaneFooterProps {\n  children?: ReactNode\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n","import {Card, Flex, Layer, Text, TextSkeleton, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\ninterface RootProps {\n  $border?: boolean\n}\n\nexport const Root = styled(Layer)<RootProps>(({$border}) => {\n  return css`\n    line-height: 0;\n    position: sticky;\n    top: 0;\n\n    &:not([data-collapsed]):after {\n      content: '';\n      display: block;\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: -1px;\n      border-bottom: 1px solid ${$border ? 'var(--card-border-color)' : 'transparent'};\n      opacity: 1;\n    }\n  `\n})\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleCard = styled(Card)(({theme}: {theme: Theme}) => {\n  const {fg, bg} = theme.sanity.color.card.enabled\n\n  // Disable color updates on hover\n  return css`\n    background-color: ${bg};\n\n    [data-ui='Text'] {\n      color: ${fg};\n    }\n  `\n})\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n","import {Box, Card, Flex, LayerProvider, useElementRect} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode, useCallback, useMemo} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Layout, Root, TitleCard, TitleText, TitleTextSkeleton} from './PaneHeader.styles'\nimport {usePane} from './usePane'\n\nexport type TabsType = 'default' | 'dropdown'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneHeaderProps {\n  actions?: ReactNode\n  backButton?: ReactNode\n  border?: boolean\n  contentAfter?: ReactNode\n  loading?: boolean\n  subActions?: ReactNode\n  tabIndex?: number\n  tabs?: ReactNode\n  title: ReactNode\n  appendTitle?: ReactNode\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    actions,\n    backButton,\n    border,\n    contentAfter,\n    loading,\n    subActions,\n    tabs,\n    tabIndex,\n    title,\n    appendTitle,\n  } = props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect],\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  const showTabsOrSubActions = Boolean(!collapsed && (tabs || subActions))\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root\n        $border={border}\n        data-collapsed={collapsed ? '' : undefined}\n        data-testid=\"pane-header\"\n        ref={ref}\n      >\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout\n              direction=\"column\"\n              gap={3}\n              onClick={handleLayoutClick}\n              padding={3}\n              sizing=\"border\"\n              style={layoutStyle}\n            >\n              <Flex align=\"flex-start\" gap={3}>\n                {backButton && <Box flex=\"none\">{backButton}</Box>}\n\n                <TitleCard\n                  __unstable_focusRing\n                  flex={1}\n                  onClick={handleTitleClick}\n                  paddingLeft={backButton ? 1 : 2}\n                  padding={2}\n                  tabIndex={tabIndex}\n                >\n                  {loading && (\n                    <Box>\n                      <TitleTextSkeleton animated radius={1} size={1} />\n                    </Box>\n                  )}\n                  {!loading && (\n                    <Flex align=\"center\" gap={1}>\n                      <TitleText size={1} textOverflow=\"ellipsis\" weight=\"semibold\">\n                        {title}\n                      </TitleText>\n                      {appendTitle}\n                    </Flex>\n                  )}\n                </TitleCard>\n\n                {actions && (\n                  <Box hidden={collapsed}>\n                    <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                  </Box>\n                )}\n              </Flex>\n\n              {showTabsOrSubActions && (\n                <Flex align=\"center\" hidden={collapsed} overflow=\"auto\">\n                  <Box flex={1} marginRight={subActions ? 3 : 0}>\n                    {tabs}\n                  </Box>\n\n                  {subActions}\n                </Flex>\n              )}\n            </Layout>\n\n            {!collapsed && contentAfter}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n","import {UnknownIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type MouseEvent, useCallback, useId} from 'react'\nimport {StatusButton, useI18nText, useTranslation} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {Button, MenuButton} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuGroup, type _PaneMenuItem} from './types'\n\nfunction getDisabledReason(node: _PaneMenuItem) {\n  if (!node.disabled) {\n    return {disabledReason: undefined, ariaLabel: undefined, isDisabled: false}\n  }\n\n  /**\n   * This component supports receiving a `reason: string | react.ReactNode`.\n   * We are casting it as string, to avoid the ts error, as content will be rendered into the tooltip which only accepts string, but it won't crash if it's a ReactNode.\n   * For the aria label, we want to check if it's actually a string, to avoid generating an aria-label with the value `[object Object]`.\n   */\n  const disabledReason =\n    typeof node.disabled === 'object' ? (node.disabled.reason as string) : undefined\n  const ariaLabel =\n    typeof node.disabled === 'object' && typeof node.disabled?.reason === 'string'\n      ? node.disabled.reason\n      : 'This is disabled'\n\n  return {disabledReason, ariaLabel, isDisabled: Boolean(node.disabled)}\n}\nexport interface PaneHeaderActionButtonProps {\n  node: _PaneMenuItem | _PaneMenuGroup\n}\n\nexport function PaneHeaderActionButton(props: PaneHeaderActionButtonProps) {\n  const {node} = props\n\n  if (node.type === 'item') {\n    return <PaneHeaderMenuItemActionButton node={node} />\n  }\n\n  if (node.type === 'group') {\n    return <PaneHeaderMenuGroupActionButton node={node} />\n  }\n\n  console.warn('unknown menu node (expected `type: \"item\" | \"group\"`):', node)\n\n  return null\n}\n\nexport interface PaneHeaderMenuItemActionButtonProps {\n  node: _PaneMenuItem\n}\n\nexport function PaneHeaderMenuItemActionButton(props: PaneHeaderMenuItemActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n  const {t} = useTranslation()\n\n  if (node.intent) {\n    return <PaneHeaderActionIntentButton {...props} intent={node.intent} />\n  }\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      disabled={isDisabled}\n      icon={node.icon}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClick={node.onAction}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : title,\n      }}\n    />\n  )\n}\n\nfunction PaneHeaderActionIntentButton(props: {intent: Intent; node: _PaneMenuItem}) {\n  const {intent, node} = props\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n  const {t} = useTranslation()\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      forwardedAs=\"a\"\n      disabled={isDisabled}\n      href={intentLink.href}\n      icon={node.icon}\n      onClick={handleClick}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || node.title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : node.title,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n}\n\nexport interface PaneHeaderMenuGroupActionButtonProps {\n  node: _PaneMenuGroup\n}\n\nfunction PaneHeaderMenuGroupActionButton(props: PaneHeaderMenuGroupActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          disabled={!!node.disabled}\n          icon={node.icon ?? UnknownIcon}\n          label={title}\n          mode=\"bleed\"\n          tooltipProps={{content: node.title, portal: true}}\n        />\n      }\n      id={useId()}\n      menu={\n        <Menu>\n          {node.children.map((child, idx) => {\n            return (\n              <PaneMenuButtonItem\n                key={child.key}\n                disabled={Boolean(node.disabled)}\n                isAfterGroup={node.children[idx - 1]?.type === 'group'}\n                node={child}\n              />\n            )\n          })}\n        </Menu>\n      }\n    />\n  )\n}\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n","import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {type PaneConfigOpts, type PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number,\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n","/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n","import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n","import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {\n  type PaneConfigOpts,\n  type PaneData,\n  type PaneResizeCache,\n  type PaneResizeData,\n} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX,\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n","import {type CardProps, useElementRect} from '@sanity/ui'\nimport {type HTMLProps, useEffect, useMemo, useState} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {Root} from './PaneLayout.styles'\nimport {createPaneLayoutController, type PaneLayoutState} from './paneLayoutController'\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>,\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const [controller] = useState(() => createPaneLayoutController())\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing],\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n","import {Box, type CardTone} from '@sanity/ui'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {\n    children,\n    currentMinWidth,\n    flex,\n    minWidth,\n    paneKey,\n    title = 'Error',\n    tone = 'critical',\n  } = props\n\n  return (\n    <Pane\n      currentMinWidth={currentMinWidth}\n      flex={flex}\n      id={paneKey}\n      minWidth={minWidth}\n      tone={tone}\n    >\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.JSX.Element | (() => React.JSX.Element)\n  ms?: number\n}): React.JSX.Element {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n","import {merge, type Observable, of} from 'rxjs'\nimport {delay, mapTo} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport type WaitMessage = {messageKey: string} | {message: string}\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<WaitMessage> {\n  const thresholds: (WaitMessage & {ms: number})[] = [\n    {ms: 300, messageKey: 'panes.resolving.default-message'},\n    {ms: 5000, messageKey: 'panes.resolving.slow-resolve-message'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(\n    ...thresholds.map((threshold) =>\n      src.pipe(\n        mapTo(\n          'messageKey' in threshold\n            ? {messageKey: threshold.messageKey}\n            : {message: threshold.message},\n        ),\n        delay(threshold.ms),\n      ),\n    ),\n  )\n}\n","import {_raf2, type CardTone, Flex} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useState} from 'react'\nimport {type Observable} from 'rxjs'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {getWaitMessages, type WaitMessage} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<WaitMessage>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE_KEY = 'panes.resolving.default-message'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return t(DEFAULT_MESSAGE_KEY)\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe !== 'function') return undefined\n\n    const sub = resolvedMessage.subscribe((message) => {\n      setCurrentMessage('messageKey' in message ? t(message.messageKey) : message.message)\n    })\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage, t])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <LoadingBlock showText title={title || currentMessage} />\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'Memo(LoadingPane)'\n","import {useContext} from 'react'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n","import {useCallback, useLayoutEffect, useRef} from 'react'\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  CommentsEnabledProvider,\n  CommentsProvider,\n  useCommentsEnabled,\n  usePerspective,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {usePaneRouter} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface CommentsWrapperProps {\n  children: React.ReactNode\n  documentId: string\n  documentType: string\n}\n\n/**\n * @internal\n * A wrapper that conditionally wraps the document layout in a comments provider\n * if the feature is enabled for the project and the current document.\n */\nexport function CommentsWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  return (\n    <CommentsEnabledProvider documentId={documentId} documentType={documentType}>\n      <CommentsProviderWrapper documentId={documentId} documentType={documentType}>\n        {children}\n      </CommentsProviderWrapper>\n    </CommentsEnabledProvider>\n  )\n}\n\nfunction CommentsProviderWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  const {enabled} = useCommentsEnabled()\n  const {connectionState, onPathOpen, inspector, openInspector} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const {params, setParams} = usePaneRouter()\n  const {resolveIntentLink} = useRouter()\n\n  const selectedCommentId = params?.comment\n  const paramsRef = useRef(params)\n\n  useLayoutEffect(() => {\n    paramsRef.current = params\n  }, [params])\n\n  const getCommentLink = useCallback(\n    (commentId: string) => {\n      const intentLink = resolveIntentLink('edit', {\n        id: documentId,\n        type: documentType,\n        inspect: COMMENTS_INSPECTOR_NAME,\n        comment: commentId,\n      })\n      return `${window.location.origin}${intentLink}`\n    },\n    [documentId, documentType, resolveIntentLink],\n  )\n\n  const handleClearSelectedComment = useCallback(() => {\n    setParams({...paramsRef.current, comment: undefined})\n  }, [setParams])\n\n  const handleOpenCommentsInspector = useCallback(() => {\n    if (inspector?.name === COMMENTS_INSPECTOR_NAME) return\n\n    openInspector(COMMENTS_INSPECTOR_NAME)\n  }, [inspector?.name, openInspector])\n\n  // If comments are not enabled, render the default document layout\n  if (!enabled) {\n    return <>{children}</>\n  }\n\n  return (\n    <CommentsProvider\n      documentId={documentId}\n      documentType={documentType}\n      getCommentLink={getCommentLink}\n      isCommentsOpen={inspector?.name === COMMENTS_INSPECTOR_NAME}\n      isConnecting={connectionState === 'connecting'}\n      onClearSelectedComment={handleClearSelectedComment}\n      onCommentsOpen={handleOpenCommentsInspector}\n      onPathOpen={onPathOpen}\n      selectedCommentId={selectedCommentId}\n      sortOrder=\"desc\"\n      type=\"field\"\n      releaseId={selectedReleaseId}\n    >\n      {children}\n    </CommentsProvider>\n  )\n}\n","import {useContext} from 'react'\nimport {StructureToolContext} from 'sanity/_singletons'\n\nimport {type StructureToolContextValue} from './types'\n\n/** @internal */\nexport function useStructureTool(): StructureToolContextValue {\n  const structureTool = useContext(StructureToolContext)\n  if (!structureTool) throw new Error(`StructureTool: missing context value`)\n\n  return structureTool\n}\n","import {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItemGroup} from '../../types'\n\nexport const DOCUMENT_PANEL_MIN_WIDTH = 320\nexport const DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\n\nexport const DOCUMENT_INSPECTOR_MIN_WIDTH = 320\nexport const DOCUMENT_INSPECTOR_MAX_WIDTH = 540\n\nexport const EMPTY_PARAMS: NonNullable<PaneRouterContextValue['params']> = {}\n\nexport const INSPECT_ACTION_PREFIX = 'inspect:'\n\nexport const DEFAULT_MENU_ITEM_GROUPS: PaneMenuItemGroup[] = [{id: 'inspectors'}, {id: 'links'}]\n\n// inspectors\nexport const HISTORY_INSPECTOR_NAME = 'sanity/structure/history'\nexport const VALIDATION_INSPECTOR_NAME = 'sanity/structure/validation'\n","import {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, useUnique} from 'sanity'\n\ninterface DocumentInspectorMenuItemsResolverProps {\n  documentId: string\n  documentType: string\n  inspectors: DocumentInspector[]\n  onMenuItems: (items: DocumentInspectorMenuItem[]) => void\n}\n\n// The menu item in a document inspector are resolved in a React hook (`useMenuItem`).\n// This means that the menu item needs to be resolved in a React component (in accordance with the rules of hooks).\n// In this component, we map over the configured inspectors and render a `InspectorMenuItem` for each.\n// The `InspectorMenuItem` will resolve the menu item in a React hook and call the `setMenuItem` callback\n// with the resolved menu item and the index of the inspector.\n// Finally, we call the `onMenuItems` callback with the resolved menu items.\nexport function DocumentInspectorMenuItemsResolver(props: DocumentInspectorMenuItemsResolverProps) {\n  const {documentId, documentType, inspectors, onMenuItems} = props\n\n  const len = inspectors.length\n  const [menuItems, setMenuItems] = useState<DocumentInspectorMenuItem[]>(() =>\n    Array.from(new Array(len)),\n  )\n\n  useEffect(() => {\n    if (menuItems.length !== len) {\n      const newFieldActions = Array.from(new Array(len))\n\n      for (let i = 0; i < len; i++) {\n        newFieldActions[i] = menuItems[i]\n      }\n\n      setMenuItems(newFieldActions)\n    }\n  }, [len, menuItems])\n\n  const setMenuItem = useCallback((index: number, node: DocumentInspectorMenuItem) => {\n    setMenuItems((prev) => {\n      const next = [...prev]\n      next[index] = node\n      return next\n    })\n  }, [])\n\n  useEffect(() => {\n    onMenuItems(menuItems.filter(Boolean))\n  }, [menuItems, onMenuItems])\n\n  const InspectorMenuItems = useMemo(() => {\n    return inspectors.map((inspector, index) => {\n      return inspector.useMenuItem\n        ? ([\n            defineInspectorMenuItemComponent({\n              documentId,\n              documentType,\n              index,\n              setMenuItem,\n              useMenuItem: inspector.useMenuItem,\n            }),\n            inspector.name,\n          ] as const)\n        : ([() => null, ''] as const)\n    })\n  }, [documentId, documentType, inspectors, setMenuItem])\n\n  return (\n    <>\n      {InspectorMenuItems.map(([InspectorMenuItem, key]) => key && <InspectorMenuItem key={key} />)}\n    </>\n  )\n}\nDocumentInspectorMenuItemsResolver.displayName = 'DocumentInspectorMenuItemsResolver'\n\nfunction defineInspectorMenuItemComponent({\n  documentId,\n  documentType,\n  index,\n  setMenuItem,\n  useMenuItem,\n}: {\n  documentId: string\n  documentType: string\n  index: number\n  setMenuItem: (index: number, node: DocumentInspectorMenuItem) => void\n  useMenuItem: NonNullable<DocumentInspector['useMenuItem']>\n}) {\n  return memo(function InspectorMenuItem() {\n    const menuItem = useMenuItem({\n      documentId,\n      documentType,\n    })\n    const node = useUnique(menuItem)\n\n    useEffect(() => {\n      setMenuItem(index, node)\n    }, [node])\n\n    return null\n  })\n}\n","import {useMemo} from 'react'\nimport {\n  isPublishedPerspective,\n  prepareForPreview,\n  unstable_useValuePreview as useValuePreview,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\n\n/**\n * useDocumentTitle hook return type.\n *\n * @beta\n * @hidden\n */\nexport interface UseDocumentTitle {\n  error?: string\n  title?: string\n}\n\n/**\n * React hook that returns the document title for the current document in the document pane.\n *\n * @beta\n * @hidden\n *\n * @returns The document title or error. See {@link UseDocumentTitle}\n */\nexport function useDocumentTitle(): UseDocumentTitle {\n  const {connectionState, schemaType, editState, isDeleted, lastRevisionDocument} =\n    useDocumentPane()\n  const {selectedPerspectiveName} = usePerspective()\n  const {t} = useTranslation(structureLocaleNamespace)\n  // follows the same logic as the StructureTitle component\n  const documentValue = useMemo(() => {\n    if (isDeleted) {\n      return lastRevisionDocument\n    }\n    // When viewing published perspective, prioritize published document\n    if (selectedPerspectiveName && isPublishedPerspective(selectedPerspectiveName)) {\n      return editState?.published\n    }\n    return editState?.version || editState?.draft || editState?.published\n  }, [isDeleted, lastRevisionDocument, editState, selectedPerspectiveName])\n  const subscribed = Boolean(documentValue)\n\n  // For deleted documents, we need to handle the preview differently since useValuePreview\n  // will return null for deleted documents. Instead, we directly prepare the preview\n  // from the lastRevisionDocument data.\n  const deletedDocumentPreview = useMemo(() => {\n    if (isDeleted && lastRevisionDocument && schemaType) {\n      try {\n        const prepared = prepareForPreview(lastRevisionDocument, schemaType)\n        return prepared\n      } catch (error) {\n        console.warn('Failed to prepare preview for deleted document:', error)\n        return null\n      }\n    }\n    return null\n  }, [isDeleted, lastRevisionDocument, schemaType])\n\n  const {error, value} = useValuePreview({\n    // disable useValuePreview for deleted documents\n    enabled: subscribed && !isDeleted,\n    schemaType,\n    value: documentValue,\n  })\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return {error: undefined, title: undefined}\n  }\n\n  // For deleted documents, use the directly prepared preview\n  if (isDeleted && deletedDocumentPreview) {\n    return {error: undefined, title: deletedDocumentPreview.title}\n  }\n\n  if (!value && !isDeleted) {\n    return {\n      error: undefined,\n      title: t('panes.document-header-title.new.text', {\n        schemaType: schemaType?.title || schemaType?.name,\n      }),\n    }\n  }\n\n  if (error) {\n    return {\n      error: t('panes.document-list-pane.error.text', {error: error.message}),\n      title: undefined,\n    }\n  }\n\n  return {error: undefined, title: value?.title}\n}\n","import {useToast} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useRef} from 'react'\nimport {\n  isDocumentLimitError,\n  Translate,\n  useDocumentLimitsUpsellContext,\n  useDocumentOperationEvent,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentTitle} from './useDocumentTitle'\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType, value: documentPaneValue} = useDocumentPane()\n  const documentTitleInfo = useDocumentTitle()\n  const titleError = documentTitleInfo.error\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n  const paneRouter = usePaneRouter()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {handleOpenDialog} = useDocumentLimitsUpsellContext()\n\n  const title = useMemo(() => {\n    // If title isn't set from document preview, use the title from the document pane value\n    if (\n      !documentTitleInfo.title &&\n      !titleError &&\n      !IGNORE_OPS.includes(event?.op) &&\n      typeof documentPaneValue.title === 'string' &&\n      event?.type === 'success'\n    ) {\n      return documentPaneValue.title\n    }\n    return documentTitleInfo.title\n  }, [documentTitleInfo.title, titleError, event, documentPaneValue.title])\n  //Truncate the document title and add \"...\" if it is over 25 characters\n  const documentTitleBase = title || t('panes.document-operation-results.operation-undefined-title')\n  const documentTitle =\n    documentTitleBase.length > 25 ? `${documentTitleBase.slice(0, 25)}...` : documentTitleBase\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    let cleanupId: number | undefined\n\n    if (event.type === 'error') {\n      if (isDocumentLimitError(event.error)) {\n        handleOpenDialog('document_action')\n        return\n      }\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: t('panes.document-operation-results.operation-error', {context: event.op}),\n        description: (\n          <details>\n            <summary>{t('panes.document-operation-results.error.summary.title')}</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: (\n          <Translate\n            context={event.op}\n            i18nKey=\"panes.document-operation-results.operation-success\"\n            t={t}\n            values={{\n              op: event.op,\n              title: documentTitle,\n            }}\n            components={{\n              Strong: 'strong',\n            }}\n          />\n        ),\n      })\n    }\n\n    /**\n     * If the document was deleted successfully, close the pane.\n     */\n    if (event.type === 'success' && event.op === 'delete') {\n      // Wait until next tick to allow deletion toasts to appear first\n      cleanupId = setTimeout(() => paneRouter.closeCurrentAndAfter(), 0) as any as number\n    }\n\n    prevEvent.current = event\n\n    // eslint-disable-next-line consistent-return\n    return () => clearTimeout(cleanupId)\n  }, [event, paneRouter, pushToast, t, documentTitle, handleOpenDialog])\n\n  return null\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type PreviewValue, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {assignWith} from 'lodash'\nimport {type ReactNode} from 'react'\nimport {combineLatest, type Observable, of} from 'rxjs'\nimport {map, startWith} from 'rxjs/operators'\nimport {type DocumentPreviewStore, getDraftId, getPublishedId} from 'sanity'\n\nimport {type PaneItemPreviewState} from './types'\n\nexport const isLiveEditEnabled = (schemaType: Pick<SchemaType, 'liveEdit'>) =>\n  schemaType.liveEdit === true\n\nexport const getMissingDocumentFallback = (item: SanityDocument) => ({\n  title: <em>{item.title ? String(item.title) : 'Missing document'}</em>,\n  subtitle: <em>{item.title ? `Missing document ID: ${item._id}` : `Document ID: ${item._id}`}</em>,\n  media: () => <WarningOutlineIcon />,\n})\n\nexport const getValueWithFallback = ({\n  value,\n  draft,\n  published,\n}: {\n  value: SanityDocument\n  draft?: Partial<SanityDocument> | PreviewValue | null\n  published?: Partial<SanityDocument> | PreviewValue | null\n}) => {\n  const snapshot = draft || published\n\n  if (!snapshot) {\n    return getMissingDocumentFallback(value)\n  }\n\n  return assignWith({}, snapshot, value, (objValue, srcValue) => {\n    return typeof srcValue === 'undefined' ? objValue : srcValue\n  })\n}\n\nexport function getPreviewStateObservable(\n  documentPreviewStore: DocumentPreviewStore,\n  schemaType: SchemaType,\n  documentId: string,\n  title: ReactNode,\n): Observable<PaneItemPreviewState> {\n  const draft$ = isLiveEditEnabled(schemaType)\n    ? of({snapshot: null})\n    : documentPreviewStore.observeForPreview(\n        {_type: 'reference', _ref: getDraftId(documentId)},\n        schemaType,\n      )\n\n  const published$ = documentPreviewStore.observeForPreview(\n    {_type: 'reference', _ref: getPublishedId(documentId)},\n    schemaType,\n  )\n\n  return combineLatest([draft$, published$]).pipe(\n    map(([draft, published]) => ({\n      draft: draft.snapshot ? {title, ...draft.snapshot} : null,\n      isLoading: false,\n      published: published.snapshot ? {title, ...published.snapshot} : null,\n    })),\n    startWith({draft: null, isLoading: true, published: null}),\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {type EditStateFor, type Workspace} from 'sanity'\n\nimport {isLiveEditEnabled} from './components/paneItem/helpers'\n\nexport interface Context {\n  editState: Pick<EditStateFor, 'ready' | 'draft' | 'published' | 'version'> | null\n  workspace: {\n    document: {\n      drafts: Pick<Workspace['document']['drafts'], 'enabled'>\n    }\n  }\n  schemaType: Pick<SchemaType, 'liveEdit'>\n}\n\n/**\n * Determine whether a document has an obsolete draft. This occurs if a document has a draft while\n * the draft model is inactive, or if a live-edit document has a draft.\n */\nexport function hasObsoleteDraft({editState, workspace, schemaType}: Context):\n  | {\n      result: true\n      reason: 'LIVE_EDIT_ACTIVE' | 'DRAFT_MODEL_INACTIVE'\n    }\n  | {result: false}\n  | {result: undefined} {\n  if (!editState?.ready) {\n    return {\n      result: undefined,\n    }\n  }\n\n  const draftExists = editState.draft !== null\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = workspace\n\n  if (draftExists === false) {\n    return {\n      result: false,\n    }\n  }\n\n  if (!isDraftModelEnabled) {\n    return {\n      result: true,\n      reason: 'DRAFT_MODEL_INACTIVE',\n    }\n  }\n\n  if (isLiveEditEnabled(schemaType)) {\n    return {\n      result: true,\n      reason: 'LIVE_EDIT_ACTIVE',\n    }\n  }\n\n  return {\n    result: false,\n  }\n}\n","import {type EditStateFor, isNewDocument, type isPerspectiveWriteable} from 'sanity'\n\n/**\n * Determine whether the user must choose a new perspective in order to create a document.\n *\n * @returns A boolean reflecting whether the user must choose a new perspective, and `undefined` while indeterminate.\n * @internal\n */\nexport function mustChooseNewDocumentDestination({\n  isSelectedPerspectiveWriteable,\n  editState,\n}: {\n  isSelectedPerspectiveWriteable: ReturnType<typeof isPerspectiveWriteable>\n  editState: Pick<EditStateFor, 'ready' | 'draft' | 'published' | 'version'> | null\n}): boolean | undefined {\n  return isNewDocument(editState) && !isSelectedPerspectiveWriteable.result\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {Box, Card, type CardProps, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport interface DocumentInspectorHeaderProps {\n  as?: CardProps['as']\n  closeButtonLabel: string\n  flex?: CardProps['flex']\n  onClose: () => void\n  title: ReactNode\n}\n\nconst Root = styled(Card)({\n  position: 'relative',\n  zIndex: '1',\n  lineHeight: '0',\n})\n\n/** @internal */\nexport function DocumentInspectorHeader(\n  props: DocumentInspectorHeaderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n) {\n  const {as: forwardedAs, children, closeButtonLabel, onClose, title, ...restProps} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Root {...restProps} as={forwardedAs}>\n      <Flex padding={2}>\n        <Box flex={1} padding={3}>\n          <Text as=\"h1\" size={1} weight=\"medium\">\n            {title}\n          </Text>\n        </Box>\n        <Box flex=\"none\" padding={1}>\n          <Button\n            aria-label={closeButtonLabel}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Box>\n      </Flex>\n      {children}\n    </Root>\n  )\n}\n","import {Box} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Resizable} from 'sanity'\n\nimport {usePane} from '../../../components'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DOCUMENT_INSPECTOR_MAX_WIDTH, DOCUMENT_INSPECTOR_MIN_WIDTH} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentInspectorPanelProps {\n  documentId: string\n  documentType: string\n  flex?: number | number[]\n}\n\nexport function DocumentInspectorPanel(\n  props: DocumentInspectorPanelProps,\n): React.JSX.Element | null {\n  const {documentId, documentType, flex} = props\n  const {collapsed} = usePane()\n  const {closeInspector, inspector} = useDocumentPane()\n  const {features} = useStructureTool()\n\n  const handleClose = useCallback(() => {\n    if (inspector) closeInspector(inspector.name)\n  }, [closeInspector, inspector])\n\n  if (collapsed || !inspector) return null\n\n  const Component = inspector.component\n  const element = (\n    <Component onClose={handleClose} documentId={documentId} documentType={documentType} />\n  )\n\n  if (features.resizablePanes) {\n    return (\n      <Resizable\n        as=\"aside\"\n        data-ui=\"DocumentInspectorPanel\"\n        flex={flex}\n        resizerPosition=\"left\"\n        maxWidth={DOCUMENT_INSPECTOR_MAX_WIDTH}\n        minWidth={DOCUMENT_INSPECTOR_MIN_WIDTH}\n      >\n        {element}\n      </Resizable>\n    )\n  }\n\n  return (\n    <Box as=\"aside\" data-ui=\"DocumentInspectorPanel\" flex={flex}>\n      {element}\n    </Box>\n  )\n}\n","import {useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {map} from 'rxjs/operators'\nimport {useKeyValueStore} from 'sanity'\n\nconst STRUCTURE_TOOL_NAMESPACE = 'studio.structure-tool'\n\n/**\n * @internal\n */\nexport function useStructureToolSetting<ValueType>(\n  namespace: string,\n  key: string | null,\n  defaultValue?: ValueType,\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const keyValueStore = useKeyValueStore()\n\n  const keyValueStoreKey = [STRUCTURE_TOOL_NAMESPACE, namespace, key].filter(Boolean).join('.')\n\n  const value$ = useMemo(() => {\n    return keyValueStore\n      .getKey(keyValueStoreKey)\n      .pipe(map((value) => (value === null ? defaultValue : value)))\n  }, [defaultValue, keyValueStore, keyValueStoreKey])\n\n  const value = useObservable(value$, defaultValue) as ValueType\n  const set = useCallback(\n    (newValue: ValueType) => {\n      if (newValue !== value) {\n        keyValueStore.setKey(keyValueStoreKey, newValue as string)\n      }\n    },\n    [keyValueStore, keyValueStoreKey, value],\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n","export const VIEW_MODE_PARSED = {id: 'parsed', title: 'document-inspector.view-mode.parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'document-inspector.view-mode.raw-json'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n","import {type SanityDocumentLike} from '@sanity/types'\nimport LRU from 'quick-lru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = new LRU({maxSize: 1000})\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport {type ChangeEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange],\n  )\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder={t('document-inspector.search.placeholder')}\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n","import {JsonInspector} from '@rexxars/react-json-inspector'\nimport {type SanityDocument} from '@sanity/types'\nimport {Card, Code, Flex, TabList, TabPanel} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {Dialog, Tab} from '../../../../ui-components'\nimport {DocTitle} from '../../../components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureToolSetting} from '../../../useStructureToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useStructureToolSetting(\n    'inspect-view-mode',\n    null,\n    'parsed',\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Dialog\n      bodyHeight=\"fill\"\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <Translate\n            t={t}\n            i18nKey=\"document-inspector.dialog.title\"\n            components={{\n              DocumentTitle: () => (\n                <em>\n                  <DocTitle document={value} />\n                </em>\n              ),\n            }}\n          />\n        ) : (\n          <em>{t('document-inspector.dialog.title-no-value')}</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      padding={false}\n      width={2}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card\n          padding={3}\n          paddingTop={0}\n          shadow={1}\n          style={{position: 'sticky', bottom: 0, zIndex: 3}}\n        >\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={t(VIEW_MODE_PARSED.title)}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={t(VIEW_MODE_RAW.title)}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JsonInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n                filterOptions={{ignoreCase: true}}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n              size={1}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n","import {Box, type ButtonMode, type ButtonTone, Card, type CardTone, Flex, Text} from '@sanity/ui'\nimport {type ComponentType, type ElementType, type ReactNode} from 'react'\n\nimport {Button} from '../../../../../ui-components'\n\ninterface BannerProps {\n  action?: {\n    as?: ElementType | keyof React.JSX.IntrinsicElements\n    icon?: ComponentType\n    onClick?: () => void\n    text: string\n    tone?: ButtonTone\n    disabled?: boolean\n    mode?: ButtonMode\n  }\n  content: ReactNode\n  icon?: ComponentType\n  tone?: CardTone\n  paddingY?: number\n}\n\nexport function Banner(props: BannerProps) {\n  const {action, content, icon: Icon, tone = 'transparent', paddingY = 2, ...rest} = props\n\n  return (\n    <Box padding={1}>\n      <Card radius={3} paddingX={2} paddingY={paddingY} tone={tone} {...rest}>\n        <Flex align=\"center\" gap={3} paddingX={2}>\n          {Icon && (\n            <Text size={0}>\n              <Icon />\n            </Text>\n          )}\n\n          <Flex align=\"center\" flex={1} gap={2} paddingY={2}>\n            {content}\n          </Flex>\n\n          {action && (\n            <Button {...action} mode={action.mode || 'ghost'} tone={action.tone || 'default'} />\n          )}\n        </Flex>\n      </Card>\n    </Box>\n  )\n}\n","import {DocumentRemoveIcon, ReadOnlyIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  isDraftPerspective,\n  isPublishedPerspective,\n  type ReleaseDocument,\n  Translate,\n  useDocumentOperation,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeletedDocumentBanners() {\n  const {isDeleted, isDeleting, ready} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  if (!ready) return null\n  if (\n    !isPublishedPerspective(selectedPerspective) &&\n    !isDraftPerspective(selectedPerspective) &&\n    selectedPerspective.state === 'archived'\n  ) {\n    return <ArchivedReleaseBanner release={selectedPerspective as ReleaseDocument} />\n  }\n  if (isDeleted && !isDeleting) return <DeletedDocumentBanner />\n}\n\nfunction DeletedDocumentBanner() {\n  const {documentId, documentType} = useDocumentPane()\n  const {restore} = useDocumentOperation(documentId, documentType)\n  const {navigateIntent} = useRouter()\n\n  const handleRestore = useCallback(() => {\n    restore.execute('lastRevision')\n    navigateIntent('edit', {id: documentId, type: documentType})\n  }, [documentId, documentType, navigateIntent, restore])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Banner\n      action={{\n        onClick: handleRestore,\n        text: t('banners.deleted-document-banner.restore-button.text'),\n      }}\n      content={\n        <Text size={1} weight=\"medium\">\n          {t('banners.deleted-document-banner.text')}\n        </Text>\n      }\n      data-testid=\"deleted-document-banner\"\n      icon={ReadOnlyIcon}\n    />\n  )\n}\n\nconst ArchivedReleaseBanner = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate\n            t={t}\n            i18nKey=\"banners.deleted-release-banner.text\"\n            values={{title: release.metadata?.title || t('release.placeholder-untitled-release')}}\n          />\n        </Text>\n      }\n      data-testid=\"deleted-release-banner\"\n      icon={DocumentRemoveIcon}\n    />\n  )\n}\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {isDeprecatedSchemaType, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeprecatedDocumentTypeBanner() {\n  const {schemaType} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!isDeprecatedSchemaType(schemaType)) {\n    return null\n  }\n\n  return (\n    <Banner\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate t={t} i18nKey=\"banners.deprecated-document-type-banner.text\" />{' '}\n          {schemaType.deprecated.reason}\n        </Text>\n      }\n      data-testid=\"deprecated-document-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/** @internal */\nexport const AskToEditDialogOpened = defineEvent({\n  name: 'Ask To Edit Dialog Opened',\n  version: 1,\n  description: 'User clicked the \"Ask to edit\" button in the document permissions banner',\n})\n\n/** @internal */\nexport const AskToEditRequestSent = defineEvent({\n  name: 'Ask To Edit Request Sent',\n  version: 1,\n  description: 'User sent a role change request from the dialog',\n})\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {Box, Card, DialogProvider, Flex, Stack, Text, TextInput, useToast} from '@sanity/ui'\nimport {useId, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {catchError, map, type Observable, of, startWith} from 'rxjs'\nimport {type Role, useClient, useProjectId, useTranslation, useZIndex} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {AskToEditRequestSent} from './__telemetry__/RequestPermissionDialog.telemetry'\nimport {type AccessRequest} from './useRoleRequestsStatus'\n\nconst MAX_NOTE_LENGTH = 150\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface RequestPermissionDialogProps {\n  onClose?: () => void\n  onRequestSubmitted?: () => void\n}\n\n/**\n * A dialog that enables the user to request permission to change their\n * member role from \"Viewer\" to \"Editor\" or \"Admin\" depending on the\n * project's available roles.\n *\n * @internal\n */\nexport function RequestPermissionDialog({\n  onClose,\n  onRequestSubmitted,\n}: RequestPermissionDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemtry = useTelemetry()\n  const dialogId = `request-permissions-${useId()}`\n  const projectId = useProjectId()\n  const client = useClient({apiVersion: '2024-09-26'})\n  const toast = useToast()\n  const zOffset = useZIndex()\n\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const [note, setNote] = useState('')\n\n  const [msgError, setMsgError] = useState<string | undefined>()\n  const [hasTooManyRequests, setHasTooManyRequests] = useState<boolean>(false)\n  const [hasBeenDenied, setHasBeenDenied] = useState<boolean>(false)\n\n  const requestedRole$: Observable<'administrator' | 'editor'> = useMemo(() => {\n    const adminRole = 'administrator' as const\n    if (!projectId || !client) return of(adminRole)\n    return client.observable\n      .request<(Role & {appliesToUsers?: boolean})[]>({url: `/projects/${projectId}/roles`})\n      .pipe(\n        map((roles) => {\n          const hasEditor = roles\n            .filter((role) => role?.appliesToUsers)\n            .find((role) => role.name === 'editor')\n          return hasEditor ? 'editor' : adminRole\n        }),\n        startWith(adminRole),\n        catchError(() => of(adminRole)),\n      )\n  }, [projectId, client])\n\n  const requestedRole = useObservable(requestedRole$)\n\n  const onSubmit = () => {\n    setIsSubmitting(true)\n    client\n      .request<AccessRequest | null>({\n        url: `/access/project/${projectId}/requests`,\n        method: 'post',\n        body: {note, requestUrl: window?.location.href, requestedRole, type: 'role'},\n      })\n      .then((request) => {\n        if (request) {\n          if (onRequestSubmitted) onRequestSubmitted()\n          telemtry.log(AskToEditRequestSent)\n          toast.push({title: 'Edit access requested'})\n        }\n      })\n      .catch((err) => {\n        const statusCode = err?.response?.statusCode\n        const errMessage = err?.response?.body?.message\n        if (statusCode === 429) {\n          // User is over their cross-project request limit\n          setHasTooManyRequests(true)\n          setMsgError(errMessage)\n        }\n        if (statusCode === 409) {\n          // If we get a 409, user has been denied on this project or has a valid pending request\n          // valid pending request should be handled by GET request above\n          setHasBeenDenied(true)\n          setMsgError(errMessage)\n        } else {\n          toast.push({\n            title: 'There was a problem submitting your request.',\n            status: 'error',\n          })\n        }\n      })\n      .finally(() => {\n        setIsSubmitting(false)\n      })\n  }\n\n  return (\n    <DialogProvider position={'fixed'} zOffset={zOffset.fullscreen}>\n      <Dialog\n        width={1}\n        id={dialogId}\n        header={t('request-permission-dialog.header.text')}\n        footer={{\n          cancelButton: {\n            onClick: onClose,\n            text: t('confirm-dialog.cancel-button.fallback-text'),\n          },\n          confirmButton: {\n            onClick: onSubmit,\n            loading: isSubmitting,\n            disabled: hasTooManyRequests || hasBeenDenied,\n            text: t('request-permission-dialog.confirm-button.text'),\n            tone: 'primary',\n            type: 'submit',\n          },\n        }}\n        onClose={onClose}\n        onClickOutside={onClose}\n      >\n        <DialogBody>\n          <Stack space={4}>\n            <Text>{t('request-permission-dialog.description.text')}</Text>\n            {hasTooManyRequests || hasBeenDenied ? (\n              <Card tone={'caution'} padding={3} radius={2} shadow={1}>\n                <Text size={1}>\n                  {hasTooManyRequests && (\n                    <>{msgError ?? t('request-permission-dialog.warning.limit-reached.text')}</>\n                  )}\n                  {hasBeenDenied && (\n                    <>{msgError ?? t('request-permission-dialog.warning.denied.text')}</>\n                  )}\n                </Text>\n              </Card>\n            ) : (\n              <Stack space={3} paddingBottom={0}>\n                <TextInput\n                  placeholder={t('request-permission-dialog.note-input.placeholder.text')}\n                  disabled={isSubmitting}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') onSubmit()\n                  }}\n                  maxLength={MAX_NOTE_LENGTH}\n                  value={note}\n                  onChange={(e) => {\n                    setNote(e.currentTarget.value)\n                  }}\n                />\n\n                <Text align=\"right\" muted size={1}>{`${note.length}/${MAX_NOTE_LENGTH}`}</Text>\n              </Stack>\n            )}\n          </Stack>\n        </DialogBody>\n      </Dialog>\n    </DialogProvider>\n  )\n}\n","import {addWeeks, isAfter, isBefore} from 'date-fns'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {of} from 'rxjs'\nimport {catchError, map, startWith} from 'rxjs/operators'\nimport {type SanityClient, useClient, useProjectId} from 'sanity'\n\n/** @internal */\nexport interface AccessRequest {\n  id: string\n  status: 'pending' | 'accepted' | 'declined'\n  resourceId: string\n  resourceType: 'project'\n  createdAt: string\n  updatedAt: string\n  updatedByUserId: string\n  requestedByUserId: string\n  requestedRole: string\n  type: 'access' | 'role'\n  note: string\n}\n\nconst LOADING_STATE = {loading: true, error: false, status: undefined}\nconst EMPTY_STATE = {loading: false, error: false, status: 'none'}\nconst DECLINED_STATE = {loading: false, error: false, status: 'declined'}\nconst PENDING_STATE = {loading: false, error: false, status: 'pending'}\nconst EXPIRED_STATE = {loading: false, error: false, status: 'expired'}\n\n/** @internal */\nexport const useRoleRequestsStatus = () => {\n  const client = useClient({apiVersion: '2024-07-01'})\n  const projectId = useProjectId()\n\n  const checkRoleRequests$ = useMemo(() => {\n    if (!client || !projectId) {\n      return of(EMPTY_STATE)\n    }\n\n    return checkRoleRequests(client, projectId)\n  }, [client, projectId])\n\n  const {loading, error, status} = useObservable(checkRoleRequests$, LOADING_STATE)\n  return {data: status, loading, error}\n}\n\nfunction checkRoleRequests(client: SanityClient, projectId: string) {\n  return client.observable\n    .request<AccessRequest[] | null>({\n      url: '/access/requests/me',\n      tag: 'use-role-requests-status',\n    })\n    .pipe(\n      map((requests) => {\n        if (!requests || requests.length === 0) {\n          return EMPTY_STATE\n        }\n\n        // Filter requests for the specific project and where type is 'role'\n        const projectRequests = requests.filter(\n          (request) => request.resourceId === projectId && request.type === 'role',\n        )\n\n        const declinedRequest = projectRequests.find((request) => request.status === 'declined')\n        if (\n          declinedRequest &&\n          isAfter(addWeeks(new Date(declinedRequest.createdAt), 2), new Date())\n        ) {\n          return DECLINED_STATE\n        }\n\n        const pendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isAfter(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n        if (pendingRequest) {\n          return PENDING_STATE\n        }\n\n        const oldPendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isBefore(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n\n        return oldPendingRequest ? EXPIRED_STATE : EMPTY_STATE\n      }),\n      catchError((err) => {\n        console.error('Failed to fetch access requests', err)\n        return of({loading: false, error: true, status: undefined})\n      }),\n      startWith(LOADING_STATE), // Start with loading state\n    )\n}\n","import {ReadOnlyIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {Translate, useCurrentUser, useListFormat, useTranslation} from 'sanity'\n\nimport {\n  RequestPermissionDialog,\n  useRoleRequestsStatus,\n} from '../../../../components/requestPermissionDialog'\nimport {AskToEditDialogOpened} from '../../../../components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface InsufficientPermissionBannerProps {\n  requiredPermission: 'update' | 'create'\n}\n\nexport function InsufficientPermissionBanner({\n  requiredPermission,\n}: InsufficientPermissionBannerProps) {\n  const currentUser = useCurrentUser()\n\n  const {\n    data: roleRequestStatus,\n    loading: requestStatusLoading,\n    error: requestStatusError,\n  } = useRoleRequestsStatus()\n  const [requestSent, setRequestSent] = useState(false)\n  const requestPending = useMemo(\n    () => roleRequestStatus === 'pending' || roleRequestStatus === 'declined' || requestSent,\n    [roleRequestStatus, requestSent],\n  )\n  const currentUserRoles = currentUser?.roles || []\n  const isOnlyViewer = currentUserRoles.length === 1 && currentUserRoles[0].name === 'viewer'\n  const [showRequestPermissionDialog, setShowRequestPermissionDialog] = useState(false)\n\n  const listFormat = useListFormat({style: 'short'})\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemetry = useTelemetry()\n\n  const roleTitles = currentUserRoles.map((role) => role.title)\n  const roles = listFormat\n    .formatToParts(roleTitles)\n    .map((part) =>\n      part.type === 'element' ? <code key={part.value}>{part.value}</code> : part.value,\n    )\n\n  return (\n    <>\n      <Banner\n        content={\n          <Text size={1} weight=\"medium\">\n            <Translate\n              t={t}\n              i18nKey=\"banners.permission-check-banner.missing-permission\"\n              components={{Roles: () => <>{roles}</>}}\n              values={{count: roles.length, roles: roleTitles}}\n              context={requiredPermission}\n            />\n          </Text>\n        }\n        action={\n          isOnlyViewer && roleRequestStatus && !requestStatusError && !requestStatusLoading\n            ? {\n                onClick: requestPending\n                  ? undefined\n                  : () => {\n                      setShowRequestPermissionDialog(true)\n                      telemetry.log(AskToEditDialogOpened)\n                    },\n                text: requestPending\n                  ? t('banners.permission-check-banner.request-permission-button.sent')\n                  : t('banners.permission-check-banner.request-permission-button.text'),\n                tone: requestPending ? 'default' : 'primary',\n                disabled: requestPending,\n                mode: requestPending ? 'bleed' : undefined,\n              }\n            : undefined\n        }\n        data-testid=\"permission-check-banner\"\n        icon={ReadOnlyIcon}\n      />\n      {showRequestPermissionDialog && (\n        <RequestPermissionDialog\n          onClose={() => setShowRequestPermissionDialog(false)}\n          onRequestSubmitted={() => {\n            setRequestSent(true)\n            setShowRequestPermissionDialog(false)\n          }}\n        />\n      )}\n    </>\n  )\n}\n","import {CloseIcon, SyncIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {type KeyedSegment, type Reference} from '@sanity/types'\nimport {Text} from '@sanity/ui'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {memo, useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, type Observable, of} from 'rxjs'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {\n  type DocumentAvailability,\n  getPublishedId,\n  useDocumentPreviewStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {type RouterPaneGroup} from '../../../../types'\nimport {Banner} from './Banner'\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {\n      draft: DocumentAvailability\n      published: DocumentAvailability\n      version?: DocumentAvailability\n    }\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {selectedReleaseId} = usePerspective()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfoObservable = useMemo((): Observable<ParentReferenceInfo> => {\n    const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n    // short-circuit: this document pane is not a child reference pane\n    if (!parentId || !parentRefPathSegment || !parentRefPath) {\n      return of({loading: false})\n    }\n\n    const publishedId = getPublishedId(parentId)\n    const path = pathFromString(parentRefPathSegment)\n\n    // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n    const keyedSegmentIndex = path.findIndex(\n      (p): p is KeyedSegment => typeof p == 'object' && '_key' in p,\n    )\n\n    return concat(\n      // emit a loading state instantly\n      of({loading: true}),\n      // then emit the values from watching the published ID's path\n      documentPreviewStore\n        .unstable_observePathsDocumentPair(\n          publishedId,\n          (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][],\n          {\n            version: selectedReleaseId,\n          },\n        )\n        .pipe(\n          // this debounce time is needed to prevent flashing banners due to\n          // the router state updating faster than the content-lake state. we\n          // debounce to wait for more emissions because the value pulled\n          // initially could be stale.\n          debounceTime(750),\n          map(\n            ({draft, published, version}): ParentReferenceInfo => ({\n              loading: false,\n              result: {\n                availability: {\n                  draft: draft.availability,\n                  published: published.availability,\n                  ...(version?.availability\n                    ? {\n                        version: version.availability,\n                      }\n                    : {}),\n                },\n                refValue: pathGet<Reference>(\n                  version?.snapshot || draft.snapshot || published.snapshot,\n                  parentRefPath,\n                )?._ref,\n              },\n            }),\n          ),\n        ),\n    )\n  }, [selectedReleaseId, documentPreviewStore, parentId, parentRefPath])\n  const referenceInfo = useObservable(referenceInfoObservable, {loading: true})\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Banner\n      action={\n        referenceInfo.result?.refValue\n          ? {\n              onClick: handleReloadReference,\n              icon: SyncIcon,\n              text: t('banners.reference-changed-banner.reason-changed.reload-button.text'),\n            }\n          : {\n              as: BackLink,\n              icon: CloseIcon,\n              text: t('banners.reference-changed-banner.reason-removed.close-button.text'),\n            }\n      }\n      data-testid=\"reference-changed-banner\"\n      content={\n        <Text size={1} weight=\"medium\">\n          {referenceInfo.result?.refValue\n            ? t('banners.reference-changed-banner.reason-changed.text')\n            : t('banners.reference-changed-banner.reason-removed.text')}\n        </Text>\n      }\n      icon={WarningOutlineIcon}\n      tone=\"caution\"\n    />\n  )\n})\n\nReferenceChangedBanner.displayName = 'Memo(ReferenceChangedBanner)'\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function ScheduledDraftOverrideBanner(): React.JSX.Element {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Banner\n      tone=\"caution\"\n      icon={WarningOutlineIcon}\n      content={\n        <Text size={1}>\n          <Translate t={t} i18nKey=\"banners.scheduled-draft-override-banner.text\" />\n        </Text>\n      }\n    />\n  )\n}\n","import {useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\n\nimport {type PaneRouterContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n","import {Text} from '@sanity/ui'\nimport {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionInlineBadge,\n  isCardinalityOneRelease,\n  Translate,\n  useArchivedReleases,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function ArchivedReleaseDocumentBanner(): React.JSX.Element {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const {data: archivedReleases} = useArchivedReleases()\n\n  const {params, setParams} = usePaneRouter()\n  const handleGoBack = () => {\n    setParams({\n      ...params,\n      rev: params?.historyEvent || undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  }\n\n  const release = useMemo(() => {\n    return archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n  }, [archivedReleases, params?.historyVersion])\n\n  const description = useMemo(() => {\n    if (release?.state === 'published') {\n      return 'banners.published-release.description'\n    }\n\n    if (release && isCardinalityOneRelease(release)) {\n      return 'banners.archived-scheduled-draft.description'\n    }\n\n    return 'banners.archived-release.description'\n  }, [release])\n\n  const title = release?.metadata.title || tCore('release.placeholder-untitled-release')\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1}>\n          <Translate\n            t={t}\n            i18nKey={description}\n            values={{\n              title,\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(release),\n            }}\n          />\n        </Text>\n      }\n      action={\n        params?.archivedRelease\n          ? undefined\n          : {\n              text: 'Go back to published version',\n              onClick: handleGoBack,\n            }\n      }\n    />\n  )\n}\n","import {ComposeSparklesIcon, InfoOutlineIcon, LaunchIcon} from '@sanity/icons'\nimport {Box, Card, Container, Flex, Heading, Text, useClickOutsideEvent} from '@sanity/ui'\nimport {useCallback, useMemo, useRef, useState} from 'react'\nimport {\n  getDocumentVariantType,\n  useCanvasCompanionDoc,\n  useNavigateToCanvasDoc,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Popover} from '../../../../../ui-components'\nimport {Button} from '../../../../../ui-components/button/Button'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nconst Image = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  height: 180px;\n  display: flex;\n`\nconst CANVAS_IMAGE_URL =\n  'https://cdn.sanity.io/images/pyrmmpch/production/b47224e2f3a7d1747e43b9da1ac31739250e628b-632x376.png'\n\nconst CANVAS_APP_NAME = 'Canvas'\nconst CanvasPopoverContent = ({onClose}: {onClose: () => void}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const ref = useRef<HTMLDivElement | null>(null)\n  useClickOutsideEvent(onClose, () => [ref.current])\n\n  return (\n    <Card radius={3} overflow={'hidden'} width={0} ref={ref}>\n      <Container width={0}>\n        <Image src={CANVAS_IMAGE_URL} alt={'Canvas'} />\n        <Flex paddingX={4} paddingBottom={4} paddingTop={3} direction={'column'}>\n          <Flex paddingY={1} gap={2}>\n            <Text size={1} weight=\"semibold\">\n              {CANVAS_APP_NAME}\n            </Text>\n            <Text size={1} muted>\n              <ComposeSparklesIcon />\n            </Text>\n          </Flex>\n          <Box paddingTop={3}>\n            <Heading size={1}>{t('canvas.banner.popover-heading')}</Heading>\n          </Box>\n          <Box paddingTop={4}>\n            <Text size={1}>{t('canvas.banner.popover-description')}</Text>\n          </Box>\n        </Flex>\n        <Flex width=\"full\" gap={3} justify=\"flex-end\" paddingX={4} paddingBottom={4}>\n          <Button\n            mode=\"bleed\"\n            text={t('canvas.banner.popover-button-text')}\n            autoFocus\n            tone=\"primary\"\n            href=\"https://snty.link/canvas-docs\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            as=\"a\"\n            iconRight={LaunchIcon}\n          />\n        </Flex>\n      </Container>\n    </Card>\n  )\n}\nconst CanvasLinkedBannerContent = ({documentId}: {documentId: string}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [open, setOpen] = useState(false)\n  const documentVariantType = getDocumentVariantType(documentId)\n  const variantText = useMemo(() => {\n    if (documentVariantType === 'published') return t('canvas.banner.linked-text.published')\n    if (documentVariantType === 'draft') return t('canvas.banner.linked-text.draft')\n    return t('canvas.banner.linked-text.version')\n  }, [documentVariantType, t])\n\n  const togglePopover = useCallback(() => setOpen((prev) => !prev), [])\n  const onClose = useCallback(() => setOpen(false), [])\n  return (\n    <Flex align={'center'} gap={2}>\n      <Text size={1} weight=\"medium\">\n        {variantText}\n      </Text>\n      <Popover\n        open={open}\n        size={0}\n        tone=\"default\"\n        portal\n        placement=\"bottom-start\"\n        content={<CanvasPopoverContent onClose={onClose} />}\n      >\n        <Button\n          tooltipProps={null}\n          mode=\"bleed\"\n          tone=\"default\"\n          icon={InfoOutlineIcon}\n          onClick={togglePopover}\n        />\n      </Popover>\n    </Flex>\n  )\n}\n\nexport function CanvasLinkedBanner() {\n  const {documentId, displayed} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = displayed?._id || documentId\n  const {companionDoc} = useCanvasCompanionDoc(id)\n  const navigateToCanvas = useNavigateToCanvasDoc(companionDoc?.canvasDocumentId, 'banner')\n\n  if (!companionDoc) return null\n\n  return (\n    <Banner\n      tone=\"neutral\"\n      data-test-id=\"canvas-linked-banner\"\n      paddingY={0}\n      content={<CanvasLinkedBannerContent documentId={id} />}\n      action={{\n        mode: 'ghost',\n        text: t('canvas.banner.edit-in-canvas-action'),\n        onClick: navigateToCanvas,\n      }}\n    />\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type ObjectSchemaType} from '@sanity/types'\nimport {Flex, Text} from '@sanity/ui'\nimport {type ComponentType, useCallback} from 'react'\nimport {\n  getVersionInlineBadge,\n  isPerspectiveWriteable,\n  isReleaseDocument,\n  type PerspectiveNotWriteableReason,\n  ReleasesNav,\n  type ReleasesNavMenuItemPropsGetter,\n  type TargetPerspective,\n  Translate,\n  useTranslation,\n  useWorkspace,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface Props {\n  schemaType: ObjectSchemaType\n  selectedPerspective: TargetPerspective\n  reason: PerspectiveNotWriteableReason\n}\n\n/**\n * This banner is displayed when a user attempts to create a new document in a perspective that's\n * not writeable. For example:\n *\n * - The published perspective (unless the schema type supports live-editing).\n * - Any release that's locked.\n */\nexport const ChooseNewDocumentDestinationBanner: ComponentType<Props> = ({\n  schemaType,\n  selectedPerspective,\n  reason,\n}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const menuItemProps = useCallback<ReleasesNavMenuItemPropsGetter>(\n    ({perspective}) => ({\n      disabled: !isPerspectiveWriteable({\n        selectedPerspective: perspective,\n        isDraftModelEnabled,\n        schemaType,\n      }).result,\n    }),\n    [isDraftModelEnabled, schemaType],\n  )\n\n  return (\n    <Banner\n      tone=\"caution\"\n      icon={WarningOutlineIcon}\n      content={\n        <Flex align=\"center\" gap={2}>\n          <Text size={1}>\n            {reason === 'PUBLISHED_NOT_WRITEABLE' &&\n              t('banners.choose-new-document-destination.cannot-create-published-document')}\n            {reason === 'DRAFTS_NOT_WRITEABLE' &&\n              t('banners.choose-new-document-destination.cannot-create-draft-document')}\n            {reason === 'RELEASE_NOT_ACTIVE' && isReleaseDocument(selectedPerspective) && (\n              <Translate\n                t={t}\n                i18nKey=\"banners.choose-new-document-destination.release-inactive\"\n                values={{\n                  title: selectedPerspective.metadata.title,\n                }}\n                components={{\n                  VersionBadge: getVersionInlineBadge(selectedPerspective),\n                }}\n              />\n            )}\n            <> {t('banners.choose-new-document-destination.choose-destination')}</>\n          </Text>\n          <ReleasesNav menuItemProps={menuItemProps} />\n        </Flex>\n      }\n    />\n  )\n}\n","import {getSanityCreateLinkMetadata, useSanityCreateConfig} from 'sanity'\n\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function CreateLinkedBanner() {\n  const {value} = useDocumentPane()\n  const {documentLinkedBannerContent: CreateLinkedBannerContent} =\n    useSanityCreateConfig().components ?? {}\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n\n  if (!CreateLinkedBannerContent || !createLinkMetadata) return null\n\n  return (\n    <Banner\n      tone=\"transparent\"\n      data-test-id=\"sanity-create-read-only-banner\"\n      content={<CreateLinkedBannerContent metadata={createLinkMetadata} />}\n    />\n  )\n}\n","import {Text, useToast} from '@sanity/ui'\nimport {useCallback, useEffect, useState} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionInlineBadge,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useConditionalToast,\n  useTranslation,\n  useVersionOperations,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\n// How long to wait after user hit the \"Add to release\"-button before displaying the \"waiting…\" toast\nconst TOAST_DELAY = 1000\n\ntype VersionCreateState = {\n  status: 'creating' | 'created'\n  lastUpdate: Date\n}\n\nexport function DocumentNotInReleaseBanner({\n  documentId,\n  currentRelease,\n  isScheduledRelease,\n}: {\n  documentId: string\n  currentRelease: ReleaseDocument\n  isScheduledRelease?: boolean\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {createVersion} = useVersionOperations()\n\n  const [versionCreateState, setVersionCreateState] = useState<VersionCreateState | undefined>()\n  const toast = useToast()\n  const handleAddToRelease = useCallback(async () => {\n    if (currentRelease._id) {\n      setVersionCreateState({status: 'creating', lastUpdate: new Date()})\n      try {\n        await createVersion(getReleaseIdFromReleaseDocumentId(currentRelease._id), documentId)\n        setVersionCreateState({status: 'created', lastUpdate: new Date()})\n      } catch (err) {\n        toast.push({\n          status: 'error',\n          closable: true,\n          title: t('banners.release.error.title'),\n          description: t('banners.release.error.description', {message: err.message}),\n        })\n        // Note: we only want to reset pending state in case of failure, not unconditionally the request completes (i.e. in a finally clause)\n        // this is because the UI won't reflect that the document was successfully added to the release until we get the result back over the listener\n        // once the listener event that adds the document to the release arrives the UI knows that a version exists,\n        // and this banner will not be rendered anymore\n        setVersionCreateState(undefined)\n      }\n    }\n  }, [createVersion, currentRelease._id, documentId, t, toast])\n\n  const now = useCurrentTime(200)\n\n  useConditionalToast({\n    status: 'info',\n    id: 'add-document-to-release',\n    enabled: Boolean(\n      versionCreateState?.status === 'created' &&\n        now.getTime() - versionCreateState.lastUpdate.getTime() > TOAST_DELAY,\n    ),\n    closable: true,\n    title: t('banners.release.waiting.title'),\n    description: t('banners.release.waiting.description'),\n  })\n\n  return (\n    <Banner\n      tone={tone}\n      content={\n        <Text size={1}>\n          <Translate\n            i18nKey=\"banners.release.not-in-release\"\n            t={t}\n            values={{\n              title:\n                currentRelease?.metadata?.title || tCore('release.placeholder-untitled-release'),\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(currentRelease),\n            }}\n          />\n        </Text>\n      }\n      // Adding to a scheduled release is not allowed\n      action={\n        isScheduledRelease\n          ? undefined\n          : {\n              text: t('banners.release.action.add-to-release'),\n              tone: tone,\n              disabled: Boolean(versionCreateState),\n              onClick: handleAddToRelease,\n              mode: 'default',\n            }\n      }\n    />\n  )\n}\n\nfunction useCurrentTime(updateIntervalMs: number): Date {\n  const [currentTime, setCurrentTime] = useState(new Date())\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date())\n    }, updateIntervalMs)\n    return () => clearInterval(intervalId)\n  }, [updateIntervalMs])\n  return currentTime\n}\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface TypeInfo {\n  liveEditResolveType: 'publish' | 'discard'\n}\n\n/**\n * When a draft in a live edit document is published\n * @internal\n */\nexport const ResolvedLiveEdit = defineEvent<TypeInfo>({\n  name: 'LiveEdit Draft Resolved',\n  version: 1,\n  description: 'User resolved a draft of a live edit document to continue editing',\n})\n","import {type SanityDocument} from '@sanity/client'\nimport {ErrorOutlineIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Flex, Text} from '@sanity/ui'\nimport {type ComponentType, useCallback, useEffect, useState} from 'react'\nimport {\n  getDraftId,\n  getPublishedId,\n  type ObjectSchemaType,\n  Translate,\n  useDocumentOperation,\n  useTranslation,\n} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {useDiffViewRouter} from '../../../../diffView/hooks/useDiffViewRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {ResolvedLiveEdit} from './__telemetry__/DraftLiveEditBanner.telemetry'\nimport {Banner} from './Banner'\n\ninterface ObsoleteDraftBannerProps {\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  schemaType: ObjectSchemaType\n  i18nKey: string\n  /**\n   * Whether the user is blocked from editing the document while an obsolete draft exists.\n   */\n  isEditBlocking?: boolean\n}\n\nexport const ObsoleteDraftBanner: ComponentType<ObsoleteDraftBannerProps> = ({\n  displayed,\n  documentId,\n  schemaType,\n  i18nKey,\n  isEditBlocking,\n}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [isPublishing, setPublishing] = useState(false)\n  const [isDiscarding, setDiscarding] = useState(false)\n  const telemetry = useTelemetry()\n\n  const {publish, discardChanges} = useDocumentOperation(documentId, displayed?._type || '')\n\n  const handlePublish = useCallback(() => {\n    publish.execute()\n    setPublishing(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'publish'})\n  }, [publish, telemetry])\n\n  const handleDiscard = useCallback(() => {\n    discardChanges.execute()\n    setDiscarding(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'discard'})\n  }, [discardChanges, telemetry])\n\n  useEffect(() => {\n    return () => {\n      setPublishing(false)\n      setDiscarding(false)\n    }\n  })\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const compareDraft = useCallback(() => {\n    if (typeof displayed?._id === 'undefined') {\n      return\n    }\n\n    diffViewRouter.navigateDiffView({\n      mode: 'version',\n      previousDocument: {\n        type: schemaType.name,\n        id: getPublishedId(displayed?._id),\n      },\n      nextDocument: {\n        type: schemaType.name,\n        id: getDraftId(displayed?._id),\n      },\n    })\n  }, [diffViewRouter, displayed?._id, schemaType.name])\n\n  return (\n    <Banner\n      content={\n        <Flex align=\"center\" justify=\"space-between\" gap={2}>\n          <Text size={1} weight=\"medium\">\n            <Translate t={t} i18nKey={i18nKey} values={{schemaType: schemaType.title}} />\n          </Text>\n          <Button\n            text={t('banners.obsolete-draft.actions.compare-draft.text')}\n            mode=\"ghost\"\n            onClick={compareDraft}\n          />\n          <Button\n            onClick={handlePublish}\n            text={t('banners.obsolete-draft.actions.publish-draft.text')}\n            tooltipProps={\n              isEditBlocking\n                ? {\n                    content: t('banners.live-edit-draft-banner.publish.tooltip'),\n                  }\n                : {}\n            }\n            loading={isPublishing}\n            tone=\"positive\"\n          />\n          <Button\n            onClick={handleDiscard}\n            text={t('banners.obsolete-draft.actions.discard-draft.text')}\n            tooltipProps={\n              isEditBlocking\n                ? {\n                    content: t('banners.live-edit-draft-banner.discard.tooltip'),\n                  }\n                : {}\n            }\n            loading={isDiscarding}\n            tone=\"caution\"\n          />\n        </Flex>\n      }\n      data-testid=\"live-edit-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {Flex, Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isVersionId,\n  Translate,\n  useActiveReleases,\n  useDocumentVersions,\n  useOnlyHasVersions,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function OpenReleaseToEditBanner({\n  documentId,\n  isPinnedDraftOrPublished,\n}: {\n  documentId: string\n  isPinnedDraftOrPublished: boolean\n}): React.JSX.Element | null {\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n\n  /** this banner should only be rendered in specific cases\n   * 1. when the document is not a draft or published\n   * 2. when the document only has version or versions\n   * 3. when the global perspective is not set (published or draft)\n   */\n\n  if (!isVersionId(documentId)) {\n    return null\n  }\n\n  if (!onlyHasVersions || !isPinnedDraftOrPublished) {\n    return null\n  }\n\n  return <OpenReleaseToEditBannerInner documentId={documentId} />\n}\n\nexport function OpenReleaseToEditBannerInner({\n  documentId,\n}: {\n  documentId: string\n}): React.JSX.Element {\n  const {data: activeReleases} = useActiveReleases()\n  const setPerspective = useSetPerspective()\n  const releaseId = getVersionFromId(documentId) ?? ''\n  const currentVersion = useMemo(\n    () => activeReleases.find((version) => version._id.includes(releaseId)),\n    [activeReleases, releaseId],\n  )\n  const {t: tCore} = useTranslation()\n\n  const {data: documentVersions} = useDocumentVersions({documentId})\n\n  const documentVersionsTitleList = useMemo(\n    () =>\n      activeReleases\n        .filter((version) => {\n          return documentVersions.find((release) => {\n            const r = getVersionFromId(release) ?? ''\n            return getReleaseIdFromReleaseDocumentId(version._id) === r\n          })\n        })\n        .map((version) => version.metadata.title || tCore('release.placeholder-untitled-release')),\n    [activeReleases, documentVersions, tCore],\n  )\n  const tone = currentVersion && getReleaseTone(currentVersion)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleGoToEdit = useCallback(async () => {\n    setPerspective(releaseId)\n  }, [releaseId, setPerspective])\n\n  return (\n    <Banner\n      tone={tone}\n      data-testid=\"open-release-to-edit-banner\"\n      content={\n        <Text size={1}>\n          <Flex direction={'row'} gap={1} wrap=\"wrap\">\n            {documentVersionsTitleList.length > 1 ? (\n              <Translate\n                t={t}\n                i18nKey=\"banners.release.navigate-to-edit-description-multiple\"\n                components={{\n                  VersionBadge: () => (\n                    <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                  ),\n                }}\n                values={{count: documentVersionsTitleList.length - 1}}\n              />\n            ) : (\n              <Translate\n                t={t}\n                i18nKey=\"banners.release.navigate-to-edit-description-single\"\n                components={{\n                  VersionBadge: () => (\n                    <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                  ),\n                }}\n              />\n            )}\n          </Flex>\n        </Text>\n      }\n      action={{\n        text: t('banners.release.action.open-to-edit'),\n        tone: tone,\n        onClick: handleGoToEdit,\n        mode: 'default',\n      }}\n    />\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function RevisionNotFoundBanner() {\n  const {revisionNotFound} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!revisionNotFound) return null\n\n  return (\n    <Banner\n      tone=\"caution\"\n      data-test-id=\"revision-not-found-banner\"\n      icon={WarningOutlineIcon}\n      content={<Text size={1}>{t('banners.revision-not-found.description')}</Text>}\n    />\n  )\n}\n","import {LockIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseTone,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useTranslation,\n} from 'sanity'\n\nimport {Banner} from './Banner'\n\nexport function ScheduledReleaseBanner({\n  currentRelease,\n}: {\n  currentRelease: ReleaseDocument\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n\n  const {t: tCore} = useTranslation()\n\n  return (\n    <Banner\n      tone={tone}\n      icon={LockIcon}\n      content={\n        <Text size={1}>\n          <Translate\n            t={tCore}\n            i18nKey=\"release.banner.scheduled-for-publishing-on\"\n            values={{\n              date: formatRelativeLocalePublishDate(currentRelease),\n            }}\n          />\n        </Text>\n      }\n    />\n  )\n}\n","import {UnpublishIcon} from '@sanity/icons'\nimport {Stack, Text} from '@sanity/ui'\nimport {\n  getVersionInlineBadge,\n  isGoingToUnpublish,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function UnpublishedDocumentBanner() {\n  const {value, editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  const isCurrentVersionGoingToUnpublish =\n    isGoingToUnpublish(value) || (editState?.version && isGoingToUnpublish(editState?.version))\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  if (isReleaseDocument(selectedPerspective) && isCurrentVersionGoingToUnpublish) {\n    const title =\n      selectedPerspective.metadata?.title || tCore('release.placeholder-untitled-release')\n\n    return (\n      <Banner\n        tone=\"critical\"\n        content={\n          <Stack space={2}>\n            <Text size={1}>\n              <Translate\n                t={t}\n                i18nKey=\"banners.unpublished-release-banner.text\"\n                values={{\n                  title,\n                }}\n                components={{\n                  VersionBadge: getVersionInlineBadge(selectedPerspective),\n                }}\n              />\n            </Text>\n            <Text size={1}>\n              <Translate t={t} i18nKey=\"banners.unpublished-release-banner.text-with-published\" />\n            </Text>\n          </Stack>\n        }\n        icon={UnpublishIcon}\n      />\n    )\n  }\n  return null\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {type ObjectSchemaType} from '@sanity/types'\nimport {Heading, Inline, Stack, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\n\ninterface DocumentHeaderProps {\n  documentId: string\n  schemaType: ObjectSchemaType\n  title?: string\n}\n\n/**\n * Use CSS container queries to conditionally render headings at different sizes.\n * We hide this entire container (including the document type) if container queries\n * not supported in the current browser.\n *\n * Note that usage of container queries in `styled-components` is only supported in `6.x`.\n * As such, studios that include `\"styled-components\": \"<6\"` as a dependency will only see\n * the largest heading size here, even if their browser supports it!\n */\n\nexport const TitleContainer = styled(Stack)`\n  ${({theme}) => {\n    return css`\n      @supports not (container-type: inline-size) {\n        display: none !important;\n      }\n\n      container-type: inline-size;\n\n      [data-heading] {\n        font-size: ${theme.sanity.fonts.heading.sizes[4].fontSize}px;\n        line-height: ${theme.sanity.fonts.heading.sizes[4].lineHeight}px;\n        overflow-wrap: break-word;\n        text-wrap: pretty;\n      }\n\n      @container (max-width: 560px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[3].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[3].lineHeight}px;\n        }\n      }\n\n      @container (max-width: 420px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[2].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[2].lineHeight}px;\n        }\n      }\n    `\n  }}\n`\n\n/**\n * Header containing current document title and type.\n * Document type is hidden if the document `_id` matches the current document `_type`.\n * The entire header is hidden if container queries are not supported.\n */\nexport const FormHeader = ({documentId, schemaType, title}: DocumentHeaderProps) => {\n  const isSingleton = documentId === schemaType.name\n  const description = schemaType.description\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (schemaType.__experimental_formPreviewTitle === false) {\n    return null\n  }\n  return (\n    <TitleContainer marginBottom={6} space={4}>\n      {!isSingleton && (\n        <Inline space={1}>\n          <Text muted size={1}>\n            {schemaType.title ?? schemaType.name}\n          </Text>\n          {description && (\n            <Tooltip content={description} placement=\"right\">\n              <InfoOutlineIcon data-testid=\"schema-description-icon\" />\n            </Tooltip>\n          )}\n        </Inline>\n      )}\n      <Heading as=\"h2\" data-heading muted={!title} data-testid=\"document-panel-document-title\">\n        {title ?? t('document-view.form-view.form-title-fallback')}\n      </Heading>\n    </TitleContainer>\n  )\n}\n","import {Box, Container, Flex, focusFirstDescendant, Spinner, Text} from '@sanity/ui'\nimport {type FormEvent, forwardRef, useCallback, useEffect, useMemo, useState} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {\n  createPatchChannel,\n  type DocumentMutationEvent,\n  type DocumentRebaseEvent,\n  FormBuilder,\n  type FormDocumentValue,\n  fromMutationPatches,\n  type PatchMsg,\n  PresenceOverlay,\n  useConditionalToast,\n  useDocumentPresence,\n  useDocumentStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Delay} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\nimport {FormHeader} from './FormHeader'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: FormEvent) => ev.preventDefault()\n\nexport const FormView = forwardRef<HTMLDivElement, FormViewProps>(function FormView(props, ref) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    fieldActions,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    connectionState,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n    openPath,\n    compareValue,\n    hasUpstreamVersion,\n  } = useDocumentPane()\n  const {selectedReleaseId, selectedPerspective} = usePerspective()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n  const {title} = useDocumentTitle()\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const [patchChannel] = useState(() => createPatchChannel())\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const conditionalToastParams = useMemo(\n    () => ({\n      id: `sync-lock`,\n      status: 'warning' as const,\n      enabled: isLocked,\n      title: t('document-view.form-view.sync-lock-toast.title'),\n      description: t('document-view.form-view.sync-lock-toast.description'),\n      closable: true,\n    }),\n    [isLocked, t],\n  )\n\n  useConditionalToast(conditionalToastParams)\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType, selectedReleaseId)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        }),\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel, selectedReleaseId])\n\n  const hasRev = Boolean(value?._rev)\n  const handleInitialValue = useEffectEvent(() => {\n    // this is a workaround for an issue that caused the document pushed to withDocument to get\n    // stuck at the first initial value.\n    // This effect is triggered only when the document goes from not having a revision, to getting one\n    // so it will kick in as soon as the document is received from the backend\n    patchChannel.publish({\n      type: 'mutation',\n      patches: [],\n      snapshot: value,\n    })\n  })\n  useEffect(() => {\n    if (hasRev) {\n      handleInitialValue()\n    }\n    // React to changes in hasRev only\n  }, [hasRev])\n\n  const [formRef, setFormRef] = useState<null | HTMLDivElement>(null)\n\n  // We only want to run it on first mount\n  const [focusedFirstDescendant, setFocusedFirstDescendant] = useState(false)\n  useEffect(() => {\n    // Only focus on the first descendant if there is not already a focus path\n    // This is to avoid stealing focus from intent links\n    if (!focusedFirstDescendant && ready && !formState?.focusPath.length && formRef) {\n      setFocusedFirstDescendant(true)\n      focusFirstDescendant(formRef)\n    }\n  }, [focusedFirstDescendant, formRef, formState?.focusPath.length, ready])\n\n  const setRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      setFormRef(node)\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        ref.current = node\n      }\n    },\n    [ref],\n  )\n\n  const isReadOnly = connectionState === 'reconnecting' || formState?.readOnly || !editState?.ready\n\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box\n          as=\"form\"\n          onSubmit={preventDefault}\n          ref={setRef}\n          data-testid=\"form-view\"\n          data-read-only={isReadOnly ? 'true' : undefined}\n        >\n          {connectionState === 'connecting' && !editState?.draft && !editState?.published ? (\n            <Delay ms={300}>\n              {/* TODO: replace with loading block */}\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    {t('document-view.form-view.loading')}\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          ) : formState === null || hidden ? (\n            <Box padding={2}>\n              <Text>{t('document-view.form-view.form-hidden')}</Text>\n            </Box>\n          ) : (\n            <>\n              <FormHeader documentId={documentId} schemaType={formState.schemaType} title={title} />\n              <FormBuilder\n                __internal_fieldActions={fieldActions}\n                __internal_patchChannel={patchChannel}\n                changed={formState.changed}\n                collapsedFieldSets={collapsedFieldSets}\n                collapsedPaths={collapsedPaths}\n                compareValue={compareValue ?? undefined}\n                focused={formState.focused}\n                focusPath={formState.focusPath}\n                groups={formState.groups}\n                id=\"root\"\n                members={formState.members}\n                onChange={onChange}\n                onFieldGroupSelect={onSetActiveFieldGroup}\n                onPathBlur={onBlur}\n                onPathFocus={onFocus}\n                onPathOpen={onPathOpen}\n                onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                onSetPathCollapsed={onSetCollapsedPath}\n                openPath={openPath}\n                perspective={selectedPerspective}\n                hasUpstreamVersion={hasUpstreamVersion}\n                presence={presence}\n                readOnly={isReadOnly}\n                schemaType={formState.schemaType}\n                validation={validation}\n                value={\n                  // note: the form state doesn't have a typed concept of a \"document\" value\n                  // but these should be compatible\n                  formState.value as FormDocumentValue\n                }\n              />\n            </>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n})\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches),\n    ),\n  }\n}\n","import {TabList} from '@sanity/ui'\nimport {type ComponentType, type ReactNode, useCallback} from 'react'\n\nimport {Tab} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\n\n/**\n * This component will render the tabs for the document pane, following this rules:\n *  if the view tabs are wider than 200px it collapses to a dropdown\n *  if the header is smaller than 480px it collapses to a dropdown\n * For this we need to first measure the pane header width and then the tabs width.\n *\n * Gotcha, if the tabs are wider han 200px it renders a dropdown and if then the tabs change to be smaller than 200px\n * it will not change back to tabs, this is a limitation of the current implementation but an ok tradeoff to avoid mounting\n * ghost elements just to measure the width.\n */\nexport function DocumentHeaderTabs() {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n\n  const tabPanelId = `${paneKey}tabpanel`\n\n  return (\n    <TabList space={1}>\n      {views.map((view, index) => (\n        <DocumentHeaderTab\n          key={view.id}\n          icon={view.icon}\n          id={`${paneKey}tab-${view.id}`}\n          isActive={activeViewId === view.id}\n          label={view.title}\n          tabPanelId={tabPanelId}\n          viewId={index === 0 ? null : (view.id ?? null)}\n        />\n      ))}\n    </TabList>\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: ComponentType | ReactNode\n  id: string\n  isActive: boolean\n  label: string\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {icon, id, isActive, label, tabPanelId, viewId, ...rest} = props\n  const {ready, editState} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      {...rest} // required to enable <TabList> keyboard navigation\n      aria-controls={tabPanelId}\n      disabled={!ready && !editState?.draft && !editState?.published}\n      icon={icon}\n      id={id}\n      label={label}\n      onClick={handleClick}\n      selected={isActive}\n    />\n  )\n}\n","import {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\n\nexport function DocumentHeaderTitle(): React.JSX.Element {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const {title: documentTitle, error} = useDocumentTitle()\n  const subscribed = Boolean(documentValue)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return <></>\n  }\n\n  if (title) {\n    return <>{title}</>\n  }\n\n  if (!documentValue) {\n    return (\n      <>\n        {t('panes.document-header-title.new.text', {\n          schemaType: schemaType?.title || schemaType?.name,\n        })}\n      </>\n    )\n  }\n\n  if (error) {\n    return <>{t('panes.document-header-title.error.text', {error: error})}</>\n  }\n\n  return (\n    <>\n      {documentTitle || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>\n          {t('panes.document-header-title.untitled.text')}\n        </span>\n      )}\n    </>\n  )\n}\n","import {StarFilledIcon, StarIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {type ComponentType} from 'react'\nimport {useManageFavorite, type UseManageFavoriteProps, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components/button/Button'\nimport {structureLocaleNamespace} from '../../../../i18n'\n\nexport const FavoriteToggle: ComponentType<UseManageFavoriteProps & {documentExists: boolean}> = ({\n  documentExists,\n  ...props\n}) => {\n  const {isFavorited, isReady, favorite, unfavorite} = useManageFavorite(props)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const description = t(\n    isFavorited\n      ? 'document.favorites.remove-from-favorites'\n      : 'document.favorites.add-to-favorites',\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      onClick={isFavorited ? unfavorite : favorite}\n      disabled={!isReady || !documentExists}\n      aria-label={description}\n      aria-live=\"assertive\"\n      tooltipProps={{\n        content: <Text size={1}>{description}</Text>,\n        placement: 'right',\n      }}\n    >\n      <Text size={1}>{isFavorited ? <StarFilledIcon /> : <StarIcon />}</Text>\n    </Button>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, useMemo} from 'react'\nimport {CapabilityGate, useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {PaneHeader, usePane, usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {FavoriteToggle} from './FavoriteToggle'\n\n/**\n * When not collapsed this component will render the title and the tabs.\n * This component will render inside the document panel and not with the DocumentPanelHeader\n */\nexport const DocumentPanelSubHeader = memo(function DocumentPanelHeader() {\n  const {editState, connectionState, views, documentId, displayed} = useDocumentPane()\n  const {features} = useStructureTool()\n  const {index, BackLink} = usePaneRouter()\n  const {activeWorkspace} = useActiveWorkspace()\n\n  const showTabs = views.length > 1\n\n  const {collapsed, isLast} = usePane()\n  // Prevent focus if this is the last (non-collapsed) pane.\n  const tabIndex = isLast && !collapsed ? -1 : 0\n\n  // show the back button if both the feature is enabled and the current pane\n  // is not the first\n  const showBackButton = features.backButton && index > 0\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const title = useMemo(() => <DocumentHeaderTitle />, [])\n  const tabs = useMemo(() => showTabs && <DocumentHeaderTabs />, [showTabs])\n\n  const backButton = useMemo(\n    () =>\n      showBackButton && (\n        <Button\n          as={BackLink}\n          data-as=\"a\"\n          icon={ArrowLeftIcon}\n          mode=\"bleed\"\n          tooltipProps={{content: t('pane-header.back-button.text')}}\n        />\n      ),\n    [BackLink, showBackButton, t],\n  )\n\n  const favoriteToggle = (\n    <CapabilityGate capability=\"comlink\" condition=\"available\">\n      <FavoriteToggle\n        resourceType=\"studio\"\n        documentId={displayed?._id ?? documentId}\n        documentType={displayed?._type ?? ''}\n        resourceId={[activeWorkspace.projectId, activeWorkspace.dataset].join('.')}\n        schemaName={activeWorkspace.name}\n        projectId={activeWorkspace.projectId}\n        dataset={activeWorkspace.dataset}\n        documentExists={\n          (editState?.ready &&\n            (editState.version ?? editState.draft ?? editState.published) !== null) ??\n          false\n        }\n      />\n    </CapabilityGate>\n  )\n\n  return (\n    <PaneHeader\n      loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n      title={title}\n      tabs={tabs}\n      tabIndex={tabIndex}\n      backButton={backButton}\n      appendTitle={favoriteToggle}\n    />\n  )\n})\n","import {BoundaryElementProvider, Box, Flex, PortalProvider, usePortal} from '@sanity/ui'\nimport {useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  getSanityCreateLinkMetadata,\n  getVersionFromId,\n  isCardinalityOneRelease,\n  isGoingToUnpublish,\n  isNewDocument,\n  isPerspectiveWriteable,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  isSanityCreateLinked,\n  isSystemBundle,\n  LegacyLayerProvider,\n  type ReleaseDocument,\n  ScrollContainer,\n  useFilteredReleases,\n  usePerspective,\n  useWorkspace,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {PaneContent, usePane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {hasObsoleteDraft} from '../../../hasObsoleteDraft'\nimport {mustChooseNewDocumentDestination} from '../../../mustChooseNewDocumentDestination'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DocumentInspectorPanel} from '../documentInspector'\nimport {InspectDialog} from '../inspectDialog'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {\n  DeletedDocumentBanners,\n  DeprecatedDocumentTypeBanner,\n  InsufficientPermissionBanner,\n  ReferenceChangedBanner,\n  ScheduledDraftOverrideBanner,\n} from './banners'\nimport {ArchivedReleaseDocumentBanner} from './banners/ArchivedReleaseDocumentBanner'\nimport {CanvasLinkedBanner} from './banners/CanvasLinkedBanner'\nimport {ChooseNewDocumentDestinationBanner} from './banners/ChooseNewDocumentDestinationBanner'\nimport {CreateLinkedBanner} from './banners/CreateLinkedBanner'\nimport {DocumentNotInReleaseBanner} from './banners/DocumentNotInReleaseBanner'\nimport {ObsoleteDraftBanner} from './banners/ObsoleteDraftBanner'\nimport {OpenReleaseToEditBanner} from './banners/OpenReleaseToEditBanner'\nimport {RevisionNotFoundBanner} from './banners/RevisionNotFoundBanner'\nimport {ScheduledReleaseBanner} from './banners/ScheduledReleaseBanner'\nimport {UnpublishedDocumentBanner} from './banners/UnpublishedDocumentBanner'\nimport {FormView} from './documentViews'\nimport {DocumentPanelSubHeader} from './header/DocumentPanelSubHeader'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  headerHeight: number | null\n  isInspectOpen: boolean\n  rootElement: HTMLDivElement | null\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n  footer: React.ReactNode\n}\n\nconst DocumentBox = styled(Box)({\n  position: 'relative',\n})\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {\n    footerHeight,\n    headerHeight,\n    isInspectOpen,\n    rootElement,\n    setDocumentPanelPortalElement,\n    footer,\n  } = props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    inspector,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n  } = useDocumentPane()\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  const showCreateBanner = isSanityCreateLinked(createLinkMetadata)\n\n  const {params} = usePaneRouter()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed} = usePane()\n  const parentPortal = usePortal()\n  const {features} = useStructureTool()\n  const [_portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n  const formContainerElement = useRef<HTMLDivElement | null>(null)\n  const workspace = useWorkspace()\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views],\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? _portalElement || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerHeight || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerHeight])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(() => {\n    if (activeView.type === 'component' && activeView.component) {\n      const ActiveViewComponent = activeView.component\n      return (\n        <ActiveViewComponent\n          document={{\n            draft: editState?.draft || null,\n            displayed: displayed || value,\n            historical: displayed,\n            published: editState?.published || null,\n          }}\n          documentId={documentId}\n          options={activeView.options}\n          schemaType={schemaType}\n        />\n      )\n    }\n    return false\n  }, [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value])\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  const showInspector = Boolean(!collapsed && inspector)\n  const {selectedPerspective, selectedReleaseId} = usePerspective()\n\n  const filteredReleases = useFilteredReleases({\n    historyVersion: params?.historyVersion,\n    displayed,\n    documentId,\n  })\n\n  // eslint-disable-next-line complexity\n  const banners = useMemo(() => {\n    if (params?.historyVersion) {\n      return <ArchivedReleaseDocumentBanner />\n    }\n\n    const isScheduledRelease =\n      isReleaseDocument(selectedPerspective) && isReleaseScheduledOrScheduling(selectedPerspective)\n\n    const documentInScheduledRelease = Boolean(\n      isScheduledRelease &&\n        displayed?._id &&\n        getVersionFromId(displayed?._id) === selectedReleaseId,\n    )\n\n    const isSelectedPerspectiveWriteable = isPerspectiveWriteable({\n      selectedPerspective,\n      isDraftModelEnabled: workspace.document.drafts.enabled,\n      schemaType,\n    })\n\n    if (\n      mustChooseNewDocumentDestination({\n        isSelectedPerspectiveWriteable,\n        editState,\n      })\n    ) {\n      return (\n        !isSelectedPerspectiveWriteable.result && (\n          <ChooseNewDocumentDestinationBanner\n            schemaType={schemaType}\n            selectedPerspective={selectedPerspective}\n            reason={isSelectedPerspectiveWriteable.reason}\n          />\n        )\n      )\n    }\n\n    if (documentInScheduledRelease) {\n      return <ScheduledReleaseBanner currentRelease={selectedPerspective as ReleaseDocument} />\n    }\n\n    const hasCardinalityOneReleases = filteredReleases.currentReleases.some(isCardinalityOneRelease)\n    if (selectedPerspective === 'drafts' && hasCardinalityOneReleases) {\n      return <ScheduledDraftOverrideBanner />\n    }\n\n    const isPinnedDraftOrPublish = isSystemBundle(selectedPerspective)\n    const isCurrentVersionGoingToUnpublish =\n      editState?.version && isGoingToUnpublish(editState?.version)\n\n    if (\n      displayed?._id &&\n      getVersionFromId(displayed._id) !== selectedReleaseId &&\n      ready &&\n      !isPinnedDraftOrPublish &&\n      isNewDocument(editState) === false &&\n      !isCurrentVersionGoingToUnpublish\n    ) {\n      return (\n        <DocumentNotInReleaseBanner\n          documentId={value._id}\n          currentRelease={selectedPerspective as ReleaseDocument}\n          isScheduledRelease={isScheduledRelease}\n        />\n      )\n    }\n\n    const displayedHasObsoleteDraft = hasObsoleteDraft({\n      editState,\n      workspace,\n      schemaType,\n    })\n\n    if (activeView.type === 'form' && !selectedReleaseId && displayedHasObsoleteDraft.result) {\n      if (displayedHasObsoleteDraft.reason === 'DRAFT_MODEL_INACTIVE') {\n        return (\n          <ObsoleteDraftBanner\n            displayed={displayed}\n            documentId={documentId}\n            schemaType={schemaType}\n            i18nKey=\"banners.obsolete-draft.draft-model-inactive.text\"\n          />\n        )\n      }\n\n      if (displayedHasObsoleteDraft.reason === 'LIVE_EDIT_ACTIVE') {\n        return (\n          <ObsoleteDraftBanner\n            displayed={displayed}\n            documentId={documentId}\n            schemaType={schemaType}\n            i18nKey=\"banners.live-edit-draft-banner.text\"\n            isEditBlocking\n          />\n        )\n      }\n    }\n\n    if (activeView.type !== 'form' || isPermissionsLoading) return null\n\n    return (\n      <>\n        {showCreateBanner && <CreateLinkedBanner />}\n        {!permissions?.granted && (\n          <InsufficientPermissionBanner requiredPermission={requiredPermission} />\n        )}\n        <RevisionNotFoundBanner />\n        <ReferenceChangedBanner />\n        <DeprecatedDocumentTypeBanner />\n        <CanvasLinkedBanner />\n        <DeletedDocumentBanners />\n        <UnpublishedDocumentBanner />\n        <OpenReleaseToEditBanner\n          documentId={displayed?._id ?? documentId}\n          isPinnedDraftOrPublished={isPinnedDraftOrPublish}\n        />\n      </>\n    )\n  }, [\n    params?.historyVersion,\n    selectedPerspective,\n    displayed,\n    selectedReleaseId,\n    editState,\n    ready,\n    activeView.type,\n    isPermissionsLoading,\n    showCreateBanner,\n    permissions?.granted,\n    requiredPermission,\n    documentId,\n    value._id,\n    schemaType,\n    filteredReleases,\n    workspace,\n  ])\n  const portalElements = useMemo(\n    () => ({documentScrollElement: documentScrollElement}),\n    [documentScrollElement],\n  )\n  const showFormView = features.resizablePanes || !showInspector\n  return (\n    <PaneContent>\n      <Flex height=\"fill\">\n        {showFormView && (\n          <Flex height=\"fill\" direction=\"column\" width=\"fill\" flex={2}>\n            <LegacyLayerProvider zOffset=\"paneHeader\">\n              {banners}\n              <DocumentPanelSubHeader />\n            </LegacyLayerProvider>\n            <DocumentBox flex={2} overflow=\"hidden\">\n              <PortalProvider element={portalElement} __unstable_elements={portalElements}>\n                <BoundaryElementProvider element={documentScrollElement}>\n                  <VirtualizerScrollInstanceProvider\n                    scrollElement={documentScrollElement}\n                    containerElement={formContainerElement}\n                  >\n                    <Scroller\n                      $disabled={layoutCollapsed || false}\n                      data-testid=\"document-panel-scroller\"\n                      ref={setDocumentScrollElement}\n                    >\n                      <FormView\n                        hidden={formViewHidden}\n                        margins={margins}\n                        ref={formContainerElement}\n                      />\n                      {activeViewNode}\n                    </Scroller>\n\n                    {inspectDialog}\n\n                    <div data-testid=\"document-panel-portal\" ref={setPortalElement} />\n                  </VirtualizerScrollInstanceProvider>\n                </BoundaryElementProvider>\n              </PortalProvider>\n            </DocumentBox>\n\n            {footer}\n          </Flex>\n        )}\n        {showInspector && (\n          <BoundaryElementProvider element={rootElement}>\n            <DocumentInspectorPanel\n              documentId={documentId}\n              documentType={schemaType.name}\n              flex={1}\n            />\n          </BoundaryElementProvider>\n        )}\n      </Flex>\n    </PaneContent>\n  )\n}\nDocumentPanel.displayName = 'DocumentPanel'\n","import {negate} from 'lodash'\n\nimport {type _PaneMenuGroup, type _PaneMenuItem, type _PaneMenuNode} from './components/pane/types'\nimport {type DocumentFieldMenuActionNode, type PaneMenuItem, type PaneMenuItemGroup} from './types'\n\nexport function isMenuNodeButton(node: _PaneMenuNode): node is _PaneMenuItem | _PaneMenuGroup {\n  return (node.type === 'item' || node.type === 'group') && node.renderAsButton\n}\n\nexport const isNotMenuNodeButton = negate(isMenuNodeButton)\n\nexport function resolveMenuNodes(params: {\n  actionHandler: (item: PaneMenuItem) => void\n  fieldActions?: DocumentFieldMenuActionNode[]\n  menuItems: PaneMenuItem[]\n  menuItemGroups: PaneMenuItemGroup[]\n}): _PaneMenuNode[] {\n  const {fieldActions = [], menuItems, menuItemGroups} = params\n\n  const nodes: _PaneMenuNode[] = []\n\n  let keyOffset = 0\n\n  for (let i = 0; i < fieldActions.length; i += 1) {\n    const a = fieldActions[i]\n\n    nodes.push(mapFieldActionToPaneMenuNode(a, `${i}-${a.type}`))\n  }\n\n  keyOffset += nodes.length\n\n  const groups: _PaneMenuGroup[] = []\n\n  for (const itemGroup of menuItemGroups) {\n    const group = groups.find((g) => g.key === itemGroup.id)\n\n    if (!group) {\n      groups.push({\n        type: 'group',\n        key: itemGroup.id,\n\n        children: [],\n        expanded: true,\n        renderAsButton: false,\n        title: itemGroup.title,\n        i18n: itemGroup.i18n,\n      })\n    }\n  }\n\n  const ungroupedItems: _PaneMenuItem[] = []\n\n  for (let i = 0; i < menuItems.length; i += 1) {\n    const item = menuItems[i]\n\n    let group = item.group && groups.find((g) => g.key === item.group)\n    const disabled = typeof item.disabled === 'string' ? {reason: item.disabled} : item.disabled\n\n    if (item.group && !group) {\n      group = {\n        type: 'group',\n        key: item.group,\n        disabled,\n        expanded: true,\n        icon: item.icon,\n        title: item.group,\n        children: [],\n        renderAsButton: false,\n      }\n      groups.push(group)\n    }\n\n    if (group) {\n      group.children.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        disabled,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    } else {\n      ungroupedItems.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        disabled,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    }\n  }\n\n  return [...ungroupedItems, ...groups, ...nodes]\n}\n\nfunction mapFieldActionToPaneMenuNode(a: DocumentFieldMenuActionNode, key: string): _PaneMenuNode {\n  if (a.type === 'divider') {\n    return {\n      type: 'divider',\n      key,\n    }\n  }\n\n  if (a.type === 'group') {\n    return {\n      type: 'group',\n      key,\n\n      children: a.children.map((child, childIdx) =>\n        mapFieldActionToPaneMenuNode(child, `${key}-${childIdx}-${child.type}`),\n      ),\n      disabled: a.disabled,\n      expanded: a.expanded ?? true,\n      icon: a.icon,\n      title: a.title,\n      i18n: a.i18n,\n      renderAsButton: a.renderAsButton ?? false,\n    }\n  }\n\n  return {\n    type: 'item',\n    key,\n    intent: a.intent,\n    disabled: a.disabled,\n    icon: a.icon,\n    iconRight: a.iconRight,\n    onAction: a.onAction,\n    renderAsButton: a.renderAsButton ?? false,\n    selected: a.selected,\n    title: a.title,\n    i18n: a.i18n,\n    tone: a.tone,\n  }\n}\n","/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = Object.freeze({})\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n\nexport const DOCUMENT_PANEL_PORTAL_ELEMENT = 'documentPanelPortalElement'\n","import {type Placement} from '@sanity/ui'\n\nimport {type DialogProps} from '../../../../../ui-components'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n","import {type DocumentActionConfirmDialogProps, useTranslation} from 'sanity'\n\nimport {ConfirmPopover} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n\n  return (\n    <ConfirmPopover\n      cancelButtonIcon={cancelButtonIcon}\n      cancelButtonText={cancelButtonText || t('confirm-dialog.cancel-button.fallback-text')}\n      confirmButtonIcon={confirmButtonIcon}\n      confirmButtonText={confirmButtonText || t('confirm-dialog.confirm-button.fallback-text')}\n      message={message}\n      onCancel={onCancel}\n      onConfirm={onConfirm}\n      open\n      referenceElement={referenceElement}\n      tone={tone}\n      placement=\"top\"\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n    />\n  )\n}\n","import {\n  Box,\n  Dialog, // eslint-disable-line no-restricted-imports\n} from '@sanity/ui'\nimport {useId} from 'react'\nimport {type DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\n\n/**\n * Dialog rendered by custom document actions of dialog type `dialog`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        animate\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n","import {\n  Popover, // eslint-disable-line no-restricted-imports\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useRef} from 'react'\nimport {type DocumentActionPopoverDialogProps} from 'sanity'\n\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Popover rendered by custom document actions of dialog type `popover`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onClose, () => [ref.current])\n\n  return <div ref={ref}>{content}</div>\n}\n","import {PortalProvider, Text, usePortal} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {type DocumentActionDialogProps} from 'sanity'\n\nimport {Dialog} from '../../../../ui-components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\n// A portal provider that uses the document panel portal element if it exists\n// as the portal element so that dialogs are scoped to the document panel\nfunction DocumentActionPortalProvider(props: {children: ReactNode}) {\n  const {children} = props\n  const {element, elements} = usePortal()\n  const portalElement = elements?.[DOCUMENT_PANEL_PORTAL_ELEMENT] || element\n\n  return <PortalProvider element={portalElement}>{children}</PortalProvider>\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return (\n      <DocumentActionPortalProvider>\n        <ModalDialog dialog={dialog} />\n      </DocumentActionPortalProvider>\n    )\n  }\n\n  if (dialog.type === 'custom') {\n    return <DocumentActionPortalProvider>{dialog?.component}</DocumentActionPortalProvider>\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={1}\n    >\n      {unknownModal.content || (\n        // eslint-disable-next-line i18next/no-literal-string\n        <Text size={1}>\n          Unexpected modal type (<code>{unknownModal.type}</code>)\n        </Text>\n      )}\n    </Dialog>\n  )\n}\n","import {Menu} from '@sanity/ui'\nimport {memo, type ReactNode, useCallback, useId, useMemo, useState} from 'react'\nimport {\n  ContextMenuButton,\n  type DocumentActionDescription,\n  LegacyLayerProvider,\n  useTranslation,\n} from 'sanity'\n\nimport {MenuButton, MenuItem, type PopoverProps} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {ActionStateDialog} from './ActionStateDialog'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\n/**\n * @internal\n */\nexport const ActionDialogWrapper = memo(function ActionDialogWrapper({\n  actionStates,\n  children,\n  referenceElement,\n}: {\n  actionStates: DocumentActionDescription[]\n  children: ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  referenceElement?: HTMLElement | null\n}) {\n  const [actionIndex, setActionIndex] = useState(-1)\n  const currentAction = useMemo(() => actionStates[actionIndex], [actionIndex, actionStates])\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  const result = useMemo(() => children({handleAction}), [children, handleAction])\n\n  return (\n    <>\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n      {result}\n    </>\n  )\n})\n\n/**\n * @internal\n */\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    [],\n  )\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  >(\n    ({handleAction}) => (\n      <MenuButton\n        id={`${idPrefix}-action-menu`}\n        button={\n          <ContextMenuButton\n            aria-label={t('buttons.action-menu-button.aria-label')}\n            disabled={disabled}\n            data-testid=\"action-menu-button\"\n            tooltipProps={{content: t('buttons.action-menu-button.tooltip')}}\n          />\n        }\n        menu={\n          <Menu padding={1}>\n            {actionStates.map((actionState, idx) => (\n              <ActionMenuListItem\n                // oxlint-disable-next-line no-array-index-key\n                key={idx}\n                actionState={actionState}\n                disabled={disabled}\n                index={idx}\n                onAction={handleAction}\n              />\n            ))}\n          </Menu>\n        }\n        popover={popoverProps}\n        ref={setReferenceElement}\n      />\n    ),\n    [actionStates, disabled, idPrefix, popoverProps, t],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={actionStates} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nexport function ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const hotkeys = useMemo(() => {\n    return actionState.shortcut\n      ? String(actionState.shortcut)\n          .split('+')\n          .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))\n      : undefined\n  }, [actionState.shortcut])\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      hotkeys={hotkeys}\n      icon={actionState.icon}\n      onClick={handleClick}\n      text={actionState.label}\n      tone={actionState.tone}\n      {...(actionState.disabled && {tooltipProps: {content: actionState.title}})}\n    />\n  )\n}\n","import {TrashIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_TITLE_KEY = {\n  NOTHING_TO_DELETE: 'action.delete.disabled.nothing-to-delete',\n  NOT_READY: 'action.delete.disabled.not-ready',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete, release}) => {\n  const {setIsDeleting: paneSetIsDeleting} = useDocumentPane()\n  const {delete: deleteOp} = useDocumentOperation(id, type, release)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    paneSetIsDeleting(true)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete, paneSetIsDeleting])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: TrashIcon,\n        disabled: true,\n        label: t('action.delete.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"delete-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n      title: (deleteOp.disabled && t(DISABLED_REASON_TITLE_KEY[deleteOp.disabled])) || '',\n      label: isDeleting ? t('action.delete.running.label') : t('action.delete.label'),\n      shortcut: 'Ctrl+Alt+D',\n      onHandle: handle,\n      dialog: isConfirmDialogOpen && {\n        type: 'custom',\n        component: (\n          <ConfirmDeleteDialog\n            action=\"delete\"\n            id={draft?._id || id}\n            type={type}\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      },\n    }\n  }, [\n    currentUser,\n    deleteOp.disabled,\n    draft?._id,\n    handle,\n    handleCancel,\n    handleConfirm,\n    id,\n    isConfirmDialogOpen,\n    isDeleting,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n    type,\n  ])\n}\n\nDeleteAction.action = 'delete'\nDeleteAction.displayName = 'DeleteAction'\n","import {ResetIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_KEY = {\n  NO_CHANGES: 'action.discard-changes.disabled.no-change',\n  NOT_PUBLISHED: 'action.discard-changes.disabled.not-published',\n  NOT_READY: 'action.discard-changes.disabled.not-ready',\n} as const\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n  release,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type, release)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n  const {displayed} = useDocumentPane()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isPublished = displayed?._id && isPublishedId(displayed?._id)\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.discard-changes.confirm-dialog.confirm-discard-changes'),\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete, t],\n  )\n\n  return useMemo(() => {\n    if (!published || liveEdit || isPublished) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: ResetIcon,\n        disabled: true,\n        label: t('action.discard-changes.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"discard-changes\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n      title: t((discardChanges.disabled && DISABLED_REASON_KEY[discardChanges.disabled]) || ''),\n      label: t('action.discard-changes.label'),\n      onHandle: handle,\n      dialog,\n    }\n  }, [\n    currentUser,\n    dialog,\n    discardChanges.disabled,\n    handle,\n    isPermissionsLoading,\n    isPublished,\n    liveEdit,\n    permissions?.granted,\n    published,\n    t,\n  ])\n}\n\nDiscardChangesAction.action = 'discardChanges'\nDiscardChangesAction.displayName = 'DiscardChangesAction'\n","import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport {useCallback, useMemo, useState} from 'react'\nimport {filter, firstValueFrom} from 'rxjs'\nimport {\n  type DuplicateDocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useDocumentStore,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOTHING_TO_DUPLICATE: 'action.duplicate.disabled.nothing-to-duplicate',\n  NOT_READY: 'action.duplicate.disabled.not-ready',\n}\n\n/** @internal */\nexport const DuplicateAction: DuplicateDocumentActionComponent = ({\n  id,\n  type,\n  onComplete,\n  release,\n  mapDocument,\n}) => {\n  const documentStore = useDocumentStore()\n  const {duplicate} = useDocumentOperation(id, type, release)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'duplicate',\n  })\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(async () => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n\n    // set up the listener before executing\n    const duplicateSuccess = firstValueFrom(\n      documentStore.pair\n        .operationEvents(id, type)\n        .pipe(filter((e) => e.op === 'duplicate' && e.type === 'success')),\n    )\n    duplicate.execute(dupeId, {mapDocument})\n\n    // only navigate to the duplicated document when the operation is successful\n    await duplicateSuccess\n    navigateIntent('edit', {id: dupeId, type})\n\n    onComplete()\n  }, [documentStore.pair, duplicate, id, mapDocument, navigateIntent, onComplete, type])\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        icon: CopyIcon,\n        disabled: true,\n        label: t('action.duplicate.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"duplicate-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      icon: CopyIcon,\n      disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n      label: isDuplicating ? t('action.duplicate.running.label') : t('action.duplicate.label'),\n      title: duplicate.disabled ? t(DISABLED_REASON_KEY[duplicate.disabled]) : '',\n      onHandle: handle,\n    }\n  }, [\n    currentUser,\n    duplicate.disabled,\n    handle,\n    isDuplicating,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n  ])\n}\n\nDuplicateAction.action = 'duplicate'\nDuplicateAction.displayName = 'DuplicateAction'\n","import {RevertIcon} from '@sanity/icons'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  useDocumentOperation,\n  useDocumentOperationEvent,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({\n  id,\n  type,\n  revision,\n  onComplete,\n  release,\n}) => {\n  const {restore} = useDocumentOperation(id, type, release)\n  const {revisionNotFound} = useDocumentPane()\n  const event = useDocumentOperationEvent(id, type)\n  const {navigateIntent} = useRouter()\n  const prevEvent = useRef(event)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    onComplete()\n  }, [restore, revision, onComplete])\n\n  /**\n   * If the restore operation is successful, navigate to the document edit view\n   */\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    if (event.type === 'success' && event.op === 'restore') {\n      navigateIntent('edit', {id, type})\n    }\n\n    prevEvent.current = event\n  }, [event, id, navigateIntent, type])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.restore.confirm.message'),\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete, t])\n\n  const isRevisionInitial = revision === '@initial'\n  const isRevisionLatest = revision === undefined // undefined means latest revision\n\n  return useMemo(() => {\n    if (isRevisionLatest || revisionNotFound) {\n      return null\n    }\n\n    return {\n      label: t('action.restore.label'),\n      tone: 'caution',\n      onHandle: handle,\n      title: t(\n        isRevisionInitial\n          ? 'action.restore.disabled.cannot-restore-initial'\n          : 'action.restore.tooltip',\n      ),\n      icon: RevertIcon,\n      dialog,\n      disabled: isRevisionInitial,\n    }\n  }, [dialog, handle, isRevisionInitial, isRevisionLatest, revisionNotFound, t])\n}\n\nHistoryRestoreAction.action = 'restore'\nHistoryRestoreAction.displayName = 'HistoryRestoreAction'\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface DocumentPublishedInfo {\n  /**\n   * The document was created and published straight away\n   */\n  publishedImmediately: boolean\n\n  /**\n   * The document had a previously published version when it was published\n   */\n  previouslyPublished: boolean\n}\nexport const DocumentPublished = defineEvent<DocumentPublishedInfo>({\n  name: 'Document Published',\n  version: 1,\n  description: 'User clicked the \"Publish\" button in the document pane',\n})\n","import {PublishIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  type TFunction,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useRelativeTime,\n  useSyncState,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {structureLocaleNamespace, type StructureLocaleResourceKeys} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {DocumentPublished} from './__telemetry__/documentActions.telemetry'\n\nconst DISABLED_REASON_TITLE_KEY: Record<string, StructureLocaleResourceKeys> = {\n  LIVE_EDIT_ENABLED: 'action.publish.live-edit.publish-disabled',\n  ALREADY_PUBLISHED: 'action.publish.already-published.no-time-ago.tooltip',\n  NO_CHANGES: 'action.publish.no-changes.tooltip',\n  NOT_READY: 'action.publish.disabled.not-ready',\n} as const\n\nconst PUBLISHED_STATE = {status: 'published'} as const\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE_KEY,\n  publishedAt: string | undefined,\n  t: TFunction,\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return <AlreadyPublished publishedAt={publishedAt} />\n  }\n  return t(DISABLED_REASON_TITLE_KEY[reason])\n}\n\nfunction AlreadyPublished({publishedAt}: {publishedAt: string}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const timeSincePublished = useRelativeTime(publishedAt, {useTemporalPhrase: true})\n  return <span>{t('action.publish.already-published.tooltip', {timeSincePublished})}</span>\n}\n\n/** @internal */\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published, release} = props\n  const [publishState, setPublishState] = useState<\n    {status: 'publishing'; publishRevision: string | undefined} | {status: 'published'} | null\n  >(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, documentId, documentType, value} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt, t) || ''\n    : hasValidationErrors\n      ? t('action.publish.validation-issues.tooltip')\n      : ''\n\n  const currentPublishRevision = published?._rev\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState({status: 'publishing', publishRevision: currentPublishRevision})\n  }, [publish, currentPublishRevision])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish =\n      // All we need to check here is for the revision of the current published document\n      // to be different from what it was at the time of publish\n      // a successful publish will always lead to a new published revision\n      publishState?.status === 'publishing' &&\n      currentPublishRevision !== publishState.publishRevision\n\n    const nextState = didPublish ? PUBLISHED_STATE : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, currentPublishRevision])\n\n  const telemetry = useTelemetry()\n\n  const handle = useCallback(() => {\n    telemetry.log(DocumentPublished, {\n      publishedImmediately: !draft?._createdAt,\n      previouslyPublished: Boolean(published),\n    })\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    telemetry,\n    draft?._createdAt,\n    published,\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  return useMemo(() => {\n    if (release) {\n      // Version documents are not publishable by this action, they should be published as part of a release\n      return null\n    }\n    if (liveEdit) {\n      // Live edit documents are not publishable by this action, they are published automatically\n      return null\n    }\n\n    /**\n     * When draft is null, if not a published or version document\n     * then it means the draft is yet to be saved - in this case don't disabled\n     * the publish button due to ALREADY_PUBLISHED reason\n     */\n    if (isPublishedId(value._id) && draft !== null) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: getDisabledReason('ALREADY_PUBLISHED', published?._updatedAt, t),\n        disabled: true,\n      }\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"publish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    const disabled = Boolean(\n      publishScheduled ||\n        editState?.transactionSyncLock?.enabled ||\n        publishState?.status === 'publishing' ||\n        publishState?.status === 'published' ||\n        hasValidationErrors ||\n        publish.disabled,\n    )\n\n    return {\n      disabled: disabled || isPermissionsLoading,\n      tone: 'default',\n      label:\n        publishState?.status === 'published'\n          ? t('action.publish.published.label')\n          : publishScheduled || publishState?.status === 'publishing'\n            ? t('action.publish.running.label')\n            : t('action.publish.draft.label'),\n      // @todo: Implement loading state, to show a `<Button loading />` state\n      // loading: publishScheduled || publishState === 'publishing',\n      icon: PublishIcon,\n      title: publishScheduled\n        ? t('action.publish.waiting')\n        : publishState?.status === 'published' || publishState?.status === 'publishing'\n          ? null\n          : title,\n      shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n      onHandle: handle,\n    }\n  }, [\n    release,\n    liveEdit,\n    value._id,\n    draft,\n    isPermissionsLoading,\n    permissions?.granted,\n    publishScheduled,\n    editState?.transactionSyncLock?.enabled,\n    publishState,\n    hasValidationErrors,\n    publish.disabled,\n    t,\n    title,\n    handle,\n    published?._updatedAt,\n    currentUser,\n  ])\n}\n\nPublishAction.action = 'publish'\nPublishAction.displayName = 'PublishAction'\n","import {UnpublishIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionModalDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOT_PUBLISHED: 'action.unpublish.disabled.not-published',\n  NOT_READY: 'action.unpublish.disabled.not-ready',\n  LIVE_EDIT_ENABLED: 'action.unpublish.disabled.live-edit-enabled',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n  release,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {selectedPerspective} = usePerspective()\n\n  const isDraft = selectedPerspective === 'drafts'\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  return useMemo(() => {\n    if (release || isDraft) {\n      // Version documents cannot be unpublished by this action, they should be unpublished as part of a release\n      // Draft documents can't either\n      return null\n    }\n    if (liveEdit) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: UnpublishIcon,\n        label: 'Unpublish',\n        title: (\n          <InsufficientPermissionsMessage context=\"unpublish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n      label: t('action.unpublish.label'),\n      title: unpublish.disabled ? t(DISABLED_REASON_KEY[unpublish.disabled]) : '',\n      onHandle: () => setConfirmDialogOpen(true),\n      dialog,\n    }\n  }, [\n    release,\n    isDraft,\n    liveEdit,\n    isPermissionsLoading,\n    permissions?.granted,\n    unpublish.disabled,\n    t,\n    dialog,\n    currentUser,\n  ])\n}\n\nUnpublishAction.action = 'unpublish'\nUnpublishAction.displayName = 'UnpublishAction'\n","/* eslint-disable camelcase */\nimport {Flex, LayerProvider, Stack, Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  type DocumentActionProps,\n  Hotkeys,\n  isSanityDefinedAction,\n  usePerspective,\n  useSource,\n} from 'sanity'\n\nimport {Button, Tooltip} from '../../../../ui-components'\nimport {RenderActionCollectionState, type ResolvedAction, usePaneRouter} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {toLowerCaseNoSpaces} from '../../../util/toLowerCaseNoSpaces'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  states: ResolvedAction[]\n}\n\nconst DocumentStatusBarActionsInner = memo(function DocumentStatusBarActionsInner(\n  props: DocumentStatusBarActionsInnerProps,\n) {\n  const {disabled, states} = props\n  const {__internal_tasks} = useSource()\n  const {editState} = useDocumentPane()\n  const {params} = usePaneRouter()\n  const showingRevision = Boolean(params?.rev)\n\n  const {selectedReleaseId} = usePerspective()\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  // TODO: This could be refactored to use the tooltip from the button if the firstAction.title was updated to a string.\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex style={{maxWidth: 300}} align=\"center\" gap={3}>\n        {firstActionState.title && <Text size={1}>{firstActionState.title}</Text>}\n        {firstActionState.shortcut && (\n          <Hotkeys\n            data-testid=\"document-status-bar-hotkeys\"\n            fontSize={1}\n            style={{marginTop: -4, marginBottom: -4}}\n            keys={String(firstActionState.shortcut)\n              .split('+')\n              .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n          />\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n\n  const showFirstActionButton = showingRevision\n    ? Boolean(firstActionState)\n    : selectedReleaseId\n      ? // If the first action is a custom action and we are in a version document show it.\n        firstActionState && !isSanityDefinedAction(firstActionState)\n      : firstActionState && !editState?.liveEdit\n\n  const sideMenuItems = useMemo(() => {\n    return showFirstActionButton ? menuActionStates : [firstActionState, ...menuActionStates]\n  }, [showFirstActionButton, firstActionState, menuActionStates])\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      {__internal_tasks && __internal_tasks.footerAction}\n      {showFirstActionButton && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} placement=\"top\">\n            <Stack>\n              <Button\n                data-testid={`action-${toLowerCaseNoSpaces(firstActionState.label)}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n      {sideMenuItems.length > 0 && (\n        <ActionMenuButton actionStates={sideMenuItems} disabled={disabled} />\n      )}\n      {showFirstActionButton && firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n})\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {\n    actions: allActions,\n    connectionState,\n    documentId,\n    editState,\n    isInitialValueLoading,\n  } = useDocumentPane()\n\n  // The restore action has a dedicated place in the UI; it's only visible when the user is viewing\n  // a different document revision. It must be omitted from this collection.\n  const actions = useMemo(\n    () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n    [allActions],\n  )\n  const actionProps: Omit<DocumentActionProps, 'onComplete'> | null = useMemo(\n    () => (editState ? {...editState, initialValueResolved: !isInitialValueLoading} : null),\n    [editState, isInitialValueLoading],\n  )\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: ResolvedAction[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        // Use document ID as key to make sure that the actions state is reset when the document changes\n        key={documentId}\n        disabled={connectionState !== 'connected'}\n        states={states}\n      />\n    ),\n    [connectionState, documentId],\n  )\n\n  if (actions.length === 0 || !actionProps) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState actions={actions} actionProps={actionProps} group=\"default\">\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {\n    actions,\n    connectionState,\n    editState,\n    revisionId: revision,\n    isInitialValueLoading,\n  } = useDocumentPane()\n\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps: Omit<DocumentActionProps, 'onComplete'> | null = useMemo(\n    () =>\n      editState\n        ? {\n            ...editState,\n            revision: revision || undefined,\n            initialValueResolved: !isInitialValueLoading,\n          }\n        : null,\n    [editState, revision, isInitialValueLoading],\n  )\n\n  // If multiple `restore` actions are defined, ensure only the final one is used.\n  const historyActions = useMemo(() => (actions ?? []).filter(isRestoreAction).slice(-1), [actions])\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        disabled={connectionState !== 'connected' || Boolean(disabled)}\n        states={states}\n      />\n    ),\n    [connectionState, disabled],\n  )\n  if (!actionProps) {\n    return null\n  }\n  return (\n    <RenderActionCollectionState actions={historyActions} actionProps={actionProps} group=\"default\">\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport function isRestoreAction(\n  action: DocumentActionComponent,\n): action is DocumentActionComponent & {action: 'restore'} {\n  return action.action === HistoryRestoreAction.action\n}\n","import {useEffect, useState} from 'react'\n\n/**\n * This hook is used to determine if the gradient should be shown on the chip scroll container.\n * It uses an IntersectionObserver to observe the last child of the container and sets the showGradient state based on the intersection.\n * @param containerRef - The ref to the container that contains all the chips\n * @returns showGradient - A boolean that determines if the gradient should be shown\n * @internal\n */\nexport function useChipScrollPosition(containerRef: React.RefObject<HTMLDivElement | null>) {\n  const [showGradient, setShowGradient] = useState(false)\n\n  useEffect(() => {\n    const checkOverflow = () => {\n      // container is the parent that contains all the chips\n      const container = containerRef.current\n      if (!container) return\n      const {scrollWidth, clientWidth} = container\n      const needsScrolling = scrollWidth > clientWidth\n\n      if (!needsScrolling) {\n        setShowGradient(false)\n        return\n      }\n\n      // Check if scrolled to the end\n      // becausee it doesn't need to show the gradient then\n      const {scrollLeft} = container\n      const isAtEnd = scrollLeft + clientWidth >= scrollWidth\n      setShowGradient(!isAtEnd)\n    }\n\n    function setupObservers() {\n      checkOverflow()\n      // container is the parent that contains all the chips\n      const container = containerRef.current\n      if (!container) return {intersectionObserver: null, mutationObserver: null}\n\n      const intersectionObserver = new IntersectionObserver((entries) => {\n        const entry = entries[0]\n\n        if (entry) {\n          setShowGradient(!entry.isIntersecting)\n        }\n      })\n\n      const updateLastChipObserver = () => {\n        // Disconnect previous observation\n        intersectionObserver.disconnect()\n\n        // Get the new last child\n        const lastChip = container.children[container.children.length - 1]\n        intersectionObserver.observe(lastChip)\n      }\n\n      // Set up initial observation\n      updateLastChipObserver()\n\n      // Set up mutation observer to watch for changes to children\n      // this is needed because sometimes the list of releases takes some time to be rendered\n      // otherwise it could accidentally set the last child as the \"drafts\" / \"published\" chip\n      const mutationObserver = new MutationObserver(() => {\n        updateLastChipObserver()\n        checkOverflow()\n      })\n\n      mutationObserver.observe(container, {\n        childList: true,\n        subtree: false,\n      })\n\n      return {intersectionObserver, mutationObserver}\n    }\n\n    const {intersectionObserver, mutationObserver} = setupObservers()\n\n    return () => {\n      intersectionObserver?.disconnect()\n      mutationObserver?.disconnect()\n    }\n  }, [containerRef])\n\n  return showGradient\n}\n","import {Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo} from 'react'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isDraftId,\n  isGoingToUnpublish,\n  isPublishedId,\n  isPublishedPerspective,\n  isReleaseScheduledOrScheduling,\n  isVersionId,\n  type ReleaseDocument,\n  type SanityDocumentLike,\n  Translate,\n  useActiveReleases,\n  useDateTimeFormat,\n  type UseDateTimeFormatOptions,\n  useFilteredReleases,\n  useOnlyHasVersions,\n  usePerspective,\n  useSchema,\n  useSetPerspective,\n  useTranslation,\n  useWorkspace,\n  VersionChip,\n} from 'sanity'\n\nimport {isLiveEditEnabled} from '../../../../../components/paneItem/helpers'\nimport {usePaneRouter} from '../../../../../components/paneRouter/usePaneRouter'\nimport {useDocumentPane} from '../../../useDocumentPane'\n\nconst TooltipContent = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  if (release.state === 'archived') {\n    return <Text size={1}>{t('release.chip.tooltip.archived')}</Text>\n  }\n  if (release.metadata.releaseType === 'asap') {\n    return <Text size={1}>{t('release.type.asap')}</Text>\n  }\n  if (release.metadata.releaseType === 'scheduled') {\n    const isActive = release.state === 'active'\n\n    return (\n      release.metadata.intendedPublishAt && (\n        <Text size={1}>\n          {isActive ? (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.intended-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          ) : (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.scheduled-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          )}\n        </Text>\n      )\n    )\n  }\n\n  if (release.metadata.releaseType === 'undecided') {\n    return <Text size={1}>{t('release.type.undecided')}</Text>\n  }\n  return null\n}\n\nconst DATE_TIME_FORMAT: UseDateTimeFormatOptions = {\n  dateStyle: 'medium',\n  timeStyle: 'short',\n}\n\n// eslint-disable-next-line complexity\nexport const DocumentPerspectiveList = memo(function DocumentPerspectiveList() {\n  const {selectedReleaseId, selectedPerspectiveName} = usePerspective()\n  const {t} = useTranslation()\n  const setPerspective = useSetPerspective()\n  const {params, setParams} = usePaneRouter()\n  const dateTimeFormat = useDateTimeFormat(DATE_TIME_FORMAT)\n  const {loading} = useActiveReleases()\n  const schema = useSchema()\n  const {editState, displayed, documentType, documentId} = useDocumentPane()\n  const isCreatingDocument = displayed && !displayed._createdAt\n\n  const filteredReleases = useFilteredReleases({\n    historyVersion: params?.historyVersion,\n    displayed,\n    documentId,\n  })\n\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n  const workspace = useWorkspace()\n\n  const handlePerspectiveChange = useCallback(\n    (perspective: Parameters<typeof setPerspective>[0]) => () => {\n      if (perspective === 'published' && params?.historyVersion) {\n        setParams({\n          ...params,\n          rev: params?.historyEvent || undefined,\n          since: undefined,\n          historyVersion: undefined,\n        })\n      }\n      setPerspective(perspective)\n    },\n    [setPerspective, setParams, params],\n  )\n\n  const schemaType = schema.get(documentType)\n  const isLiveEdit = schemaType ? isLiveEditEnabled(schemaType) : false\n\n  const isPublishedChipDisabled = useMemo(() => {\n    // If it's a live edit document the only option to edit it is through\n    // the published perspective, users should be able to select it.\n    if (isLiveEdit && !selectedReleaseId) return false\n\n    // If it's not live edit, we want to check for the existence of the published doc.\n    return !editState?.published\n  }, [isLiveEdit, selectedReleaseId, editState?.published])\n\n  const getReleaseChipState = useCallback(\n    (release: ReleaseDocument): {selected: boolean; disabled?: boolean} => {\n      if (!params?.historyVersion) {\n        const isCurrentVersionGoingToUnpublish =\n          editState?.version &&\n          isGoingToUnpublish(editState?.version) &&\n          getReleaseIdFromReleaseDocumentId(release._id) ===\n            getVersionFromId(editState?.version?._id)\n\n        return {\n          selected: Boolean(\n            getReleaseIdFromReleaseDocumentId(release._id) ===\n              getVersionFromId(displayed?._id || '') || isCurrentVersionGoingToUnpublish,\n          ),\n        }\n      }\n\n      const isReleaseHistoryMatch =\n        getReleaseIdFromReleaseDocumentId(release._id) === params.historyVersion\n\n      return {selected: isReleaseHistoryMatch, disabled: isReleaseHistoryMatch}\n    },\n    [displayed?._id, editState?.version, params?.historyVersion],\n  )\n\n  const isPublishSelected: boolean = useMemo(() => {\n    /**\n     * The publish perspective is selected when:\n     *  - the document is live edit and there is no draft\n     *  - the document is published and the selected perspective is published\n     */\n    if (isLiveEdit && !editState?.draft?._id && !selectedReleaseId) return true\n    if (\n      isPublishedId(displayed?._id || '') &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    ) {\n      return true\n    }\n    return false\n  }, [\n    displayed?._id,\n    editState?.draft?._id,\n    isLiveEdit,\n    selectedPerspectiveName,\n    selectedReleaseId,\n  ])\n\n  const isDraftSelected: boolean = useMemo(() => {\n    const displayedId = displayed?._id || ''\n    /** the draft is selected when:\n     * not viewing a historical version,\n     * when the document displayed is a draft,\n     * when the perspective is null,\n     * when the document is not published and the displayed version is draft,\n     * when there is no draft (new document),\n     */\n    if (isPublishSelected) return false\n    if (params?.historyVersion) return false\n    if (selectedPerspectiveName) return false\n    if (isVersionId(displayedId)) return false\n    if (isDraftId(displayedId)) return true\n    if (\n      isPublishedId(displayedId) &&\n      editState?.published &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    )\n      return false\n    return true\n  }, [\n    displayed?._id,\n    editState?.published,\n    isPublishSelected,\n    params?.historyVersion,\n    selectedPerspectiveName,\n  ])\n\n  const isDraftDisabled: boolean = useMemo(() => {\n    // Draft is disabled when the document has no published or draft but has versions\n    if (onlyHasVersions || (isCreatingDocument && selectedReleaseId)) {\n      return true\n    }\n\n    // Draft is disabled when we are creating a new document inside a release\n    // or when the document is live edit and there is no draft\n    if (!editState?.draft && !isLiveEdit) {\n      return false\n    }\n\n    if (isCreatingDocument && selectedReleaseId) return true\n    if (isLiveEdit) return true\n    return false\n  }, [editState?.draft, isCreatingDocument, isLiveEdit, onlyHasVersions, selectedReleaseId])\n\n  const isDraftModelEnabled = workspace.document.drafts?.enabled\n\n  return (\n    <>\n      <VersionChip\n        tooltipContent={\n          <Text size={1}>\n            {editState?.published && editState?.published?._updatedAt ? (\n              <Translate\n                t={t}\n                i18nKey=\"release.chip.tooltip.published-date\"\n                values={{date: dateTimeFormat.format(new Date(editState?.published._updatedAt))}}\n              />\n            ) : (\n              <>{t('release.chip.tooltip.not-published')}</>\n            )}\n          </Text>\n        }\n        disabled={isPublishedChipDisabled}\n        onClick={handlePerspectiveChange('published')}\n        selected={isPublishSelected}\n        text={t('release.chip.published')}\n        tone=\"positive\"\n        contextValues={{\n          documentId: editState?.published?._id || editState?.id || '',\n          menuReleaseId: editState?.published?._id || editState?.id || '',\n          releases: filteredReleases.notCurrentReleases,\n          releasesLoading: loading,\n          documentType,\n          fromRelease: 'published',\n          isVersion: false,\n          disabled: !editState?.published,\n        }}\n      />\n      {isDraftModelEnabled && (\n        <VersionChip\n          tooltipContent={\n            <Text size={1}>\n              {editState?.draft ? (\n                <>\n                  {editState?.draft._updatedAt ? (\n                    <Translate\n                      t={t}\n                      i18nKey=\"release.chip.tooltip.edited-date\"\n                      values={{date: dateTimeFormat.format(new Date(editState?.draft._updatedAt))}}\n                    />\n                  ) : (\n                    <Translate\n                      t={t}\n                      i18nKey=\"release.chip.tooltip.created-date\"\n                      values={{date: dateTimeFormat.format(new Date(editState?.draft._createdAt))}}\n                    />\n                  )}\n                </>\n              ) : (\n                <>\n                  {isLiveEdit\n                    ? t('release.chip.tooltip.draft-disabled.live-edit')\n                    : t('release.chip.tooltip.no-edits')}\n                </>\n              )}\n            </Text>\n          }\n          selected={isDraftSelected}\n          disabled={isDraftDisabled}\n          text={t('release.chip.draft')}\n          tone={editState?.draft ? 'caution' : 'neutral'}\n          onClick={handlePerspectiveChange('drafts')}\n          contextValues={{\n            documentId: editState?.draft?._id || editState?.published?._id || editState?.id || '',\n            menuReleaseId:\n              editState?.draft?._id || editState?.published?._id || editState?.id || '',\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType: documentType,\n            fromRelease: 'draft',\n            isVersion: false,\n          }}\n        />\n      )}\n      {filteredReleases.inCreation && (\n        <VersionChip\n          tooltipContent={<TooltipContent release={filteredReleases.inCreation} />}\n          selected\n          onClick={() => {}}\n          locked={false}\n          tone={getReleaseTone(filteredReleases.inCreation)}\n          text={\n            filteredReleases.inCreation.metadata.title || t('release.placeholder-untitled-release')\n          }\n          contextValues={{\n            disabled: true, // disable the chip context menu, this one is in creation\n            documentId: displayed?._id || '',\n            menuReleaseId: filteredReleases.inCreation._id,\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType,\n            fromRelease: getReleaseIdFromReleaseDocumentId(filteredReleases.inCreation._id),\n            releaseState: filteredReleases.inCreation.state,\n            isVersion: true,\n            release: filteredReleases.inCreation,\n          }}\n        />\n      )}\n\n      {displayed &&\n        filteredReleases.currentReleases?.map((release) => (\n          <VersionChip\n            key={release._id}\n            tooltipContent={<TooltipContent release={release} />}\n            {...getReleaseChipState(release)}\n            onClick={handlePerspectiveChange(getReleaseIdFromReleaseDocumentId(release._id))}\n            text={release.metadata.title || t('release.placeholder-untitled-release')}\n            tone={getReleaseTone(release)}\n            locked={isReleaseScheduledOrScheduling(release)}\n            contextValues={{\n              documentId: displayed?._id || '',\n              menuReleaseId: release._id,\n              releases: filteredReleases.notCurrentReleases,\n              releasesLoading: loading,\n              documentType: documentType,\n              fromRelease: getReleaseIdFromReleaseDocumentId(release._id),\n              releaseState: release.state,\n              isVersion: true,\n              // displayed, in this instance is not going to be the version to compare to\n              // since it's going to be the published version\n              isGoingToUnpublish: editState?.version\n                ? isGoingToUnpublish(editState?.version as SanityDocumentLike)\n                : false,\n              release,\n            }}\n          />\n        ))}\n    </>\n  )\n})\n","import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Box, Card, Flex} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, rgba} from '@sanity/ui/theme'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  memo,\n  useCallback,\n  useDeferredValue,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, useFieldActions, useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../../ui-components'\nimport {\n  PaneContextMenuButton,\n  PaneHeader,\n  PaneHeaderActionButton,\n  RenderActionCollectionState,\n  usePane,\n  usePaneRouter,\n} from '../../../../components'\nimport {type _PaneMenuNode} from '../../../../components/pane/types'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../../../menuNodes'\nimport {type PaneMenuItem} from '../../../../types'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {ActionDialogWrapper, ActionMenuListItem} from '../../statusBar/ActionMenuButton'\nimport {isRestoreAction} from '../../statusBar/DocumentStatusBarActions'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {useChipScrollPosition} from './hook/useChipScrollPosition'\nimport {DocumentPerspectiveList} from './perspective/DocumentPerspectiveList'\n\nexport interface DocumentPanelHeaderProps {\n  menuItems: PaneMenuItem[]\n}\n\nconst HorizontalScroller = styled(Card)<{$showGradient: boolean}>((props) => {\n  const theme = getTheme_v2(props.theme)\n\n  return css`\n    scrollbar-width: none;\n    z-index: 1;\n    flex: 1;\n    position: relative;\n    > div {\n      &::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }\n    }\n\n    ${props.$showGradient &&\n    css`\n      &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        width: 150px;\n        background: linear-gradient(to right, ${rgba(theme.color.bg, 0)}, var(--card-bg-color));\n        transition: 'opacity 300ms ease-out';\n        pointer-events: none;\n      }\n    `}\n  `\n})\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(function DocumentPanelHeader(\n    _props: DocumentPanelHeaderProps,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) {\n    const {menuItems} = _props\n    const {\n      actions: allActions,\n      editState,\n      onMenuAction,\n      isInitialValueLoading,\n      onPaneClose,\n      onPaneSplit,\n      menuItemGroups,\n      schemaType,\n      connectionState,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {features} = useStructureTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const {actions: fieldActions} = useFieldActions()\n    const [referenceElement, setReferenceElement] = useState<HTMLElement | null>(null)\n    const scrollContainerRef = useRef<HTMLDivElement>(null)\n    const showGradient = useChipScrollPosition(scrollContainerRef)\n\n    // The restore action has a dedicated place in the UI; it's only visible when the user is\n    // viewing a different document revision. It must be omitted from this collection.\n    const actions = useMemo(\n      () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n      [allActions],\n    )\n\n    const menuNodes = useMemo(\n      () =>\n        resolveMenuNodes({actionHandler: onMenuAction, fieldActions, menuItems, menuItemGroups}),\n      [onMenuAction, fieldActions, menuItemGroups, menuItems],\n    )\n\n    const menuButtonNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n    const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n    const showTabs = views.length > 1\n\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the back button if both the feature is enabled and the current pane\n    // is not the first\n    const showBackButton = features.backButton && index > 0\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button do the same thing and shouldn't be shown at the same time)\n    // and if a BackLink component was provided\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !showBackButton && !!BackLink\n\n    const {t} = useTranslation(structureLocaleNamespace)\n\n    const renderPaneActions = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <DocumentPanelHeaderActionDialogDeferred\n          contextMenuNodes={contextMenuNodes}\n          setReferenceElement={setReferenceElement}\n          referenceElement={referenceElement}\n          states={states}\n        />\n      ),\n      [contextMenuNodes, referenceElement],\n    )\n\n    const title = useMemo(() => <DocumentHeaderTitle />, [])\n    const backButton = useMemo(\n      () =>\n        showBackButton && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: t('pane-header.back-button.text')}}\n          />\n        ),\n      [BackLink, showBackButton, t],\n    )\n    const renderedActions = useMemo(\n      () => (\n        <Flex align=\"center\" gap={1}>\n          {unstable_languageFilter.length > 0 && (\n            <>\n              {unstable_languageFilter.map((LanguageFilterComponent, idx) => {\n                return (\n                  <LanguageFilterComponent key={`language-filter-${idx}`} schemaType={schemaType} />\n                )\n              })}\n            </>\n          )}\n\n          {menuButtonNodes.map((item) => (\n            <PaneHeaderActionButton key={item.key} node={item} />\n          ))}\n          {editState && (\n            <RenderActionCollectionState\n              actions={actions}\n              actionProps={{...editState, initialValueResolved: !isInitialValueLoading}}\n              group=\"paneActions\"\n            >\n              {renderPaneActions}\n            </RenderActionCollectionState>\n          )}\n\n          {showSplitPaneButton && (\n            <Button\n              key=\"split-pane-button\"\n              aria-label={t('buttons.split-pane-button.aria-label')}\n              icon={SplitVerticalIcon}\n              mode=\"bleed\"\n              onClick={onPaneSplit}\n              tooltipProps={{content: t('buttons.split-pane-button.tooltip')}}\n            />\n          )}\n\n          {showSplitPaneCloseButton && (\n            <Button\n              key=\"close-view-button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              onClick={onPaneClose}\n              tooltipProps={{content: t('buttons.split-pane-close-button.title')}}\n            />\n          )}\n\n          {showPaneGroupCloseButton && (\n            <Button\n              key=\"close-view-button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              tooltipProps={{content: t('buttons.split-pane-close-group-button.title')}}\n              as={BackLink}\n            />\n          )}\n        </Flex>\n      ),\n      [\n        BackLink,\n        actions,\n        editState,\n        isInitialValueLoading,\n        menuButtonNodes,\n        onPaneClose,\n        onPaneSplit,\n        renderPaneActions,\n        schemaType,\n        showPaneGroupCloseButton,\n        showSplitPaneButton,\n        showSplitPaneCloseButton,\n        t,\n        unstable_languageFilter,\n      ],\n    )\n\n    return (\n      <TooltipDelayGroupProvider>\n        {collapsed ? (\n          <PaneHeader\n            border\n            ref={ref}\n            loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n            title={title}\n            tabIndex={tabIndex}\n            backButton={backButton}\n          />\n        ) : (\n          <Card hidden={collapsed} style={{lineHeight: 0}} borderBottom>\n            <Flex gap={3} paddingY={3}>\n              <HorizontalScroller $showGradient={showGradient}>\n                <Flex\n                  flex={1}\n                  gap={1}\n                  overflow=\"auto\"\n                  paddingX={3}\n                  data-testid=\"document-perspective-list\"\n                  ref={scrollContainerRef}\n                >\n                  <DocumentPerspectiveList />\n                </Flex>\n              </HorizontalScroller>\n\n              <Box flex=\"none\" paddingRight={3}>\n                {renderedActions}\n              </Box>\n            </Flex>\n          </Card>\n        )}\n      </TooltipDelayGroupProvider>\n    )\n  }),\n)\n\nconst DocumentPanelHeaderActionDialogDeferred = memo(\n  function DocumentPanelHeaderActionDialogDeferred(props: {\n    states: DocumentActionDescription[]\n    setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n    referenceElement: HTMLElement | null\n    contextMenuNodes: _PaneMenuNode[]\n  }) {\n    const {setReferenceElement, referenceElement, contextMenuNodes} = props\n    /**\n     * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n     * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n     */\n    const states = useDeferredValue(props.states)\n\n    return (\n      <DocumentPanelHeaderActionDialog\n        setReferenceElement={setReferenceElement}\n        referenceElement={referenceElement}\n        contextMenuNodes={contextMenuNodes}\n        states={states}\n      />\n    )\n  },\n)\n\nconst DocumentPanelHeaderActionDialog = memo(function DocumentPanelHeaderActionDialog(props: {\n  states: DocumentActionDescription[]\n  setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n  referenceElement: HTMLElement | null\n  contextMenuNodes: _PaneMenuNode[]\n}) {\n  const {states, setReferenceElement, contextMenuNodes, referenceElement} = props\n\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => React.ReactNode\n  >(\n    ({handleAction}) => (\n      <div ref={setReferenceElement}>\n        <PaneContextMenuButton\n          key=\"context-menu\"\n          nodes={contextMenuNodes}\n          actionsNodes={\n            states.length > 0\n              ? states.map((actionState, actionIndex) => (\n                  <ActionMenuListItem\n                    key={actionState.label}\n                    actionState={actionState}\n                    disabled={Boolean(actionState.disabled)}\n                    index={actionIndex}\n                    onAction={handleAction}\n                  />\n                ))\n              : undefined\n          }\n        />\n      </div>\n    ),\n    [contextMenuNodes, setReferenceElement, states],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={states} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n})\n","import {Button, type ButtonProps} from '../../../ui-components'\n\ninterface SpacerButtonProps {\n  size?: ButtonProps['size']\n}\n\n/**\n * This renders a visually hidden <Button> component that is still contributes\n * to document layout.\n *\n * It's used to simplify padding in Sanity UI components that contain buttons which\n * may not always be rendered.\n *\n * TODO: let's find a more elegant solve to this layout shift problem\n *\n * @internal\n */\nexport function SpacerButton({size}: SpacerButtonProps) {\n  return (\n    <Button\n      aria-hidden\n      disabled\n      size={size}\n      style={{\n        pointerEvents: 'none',\n        visibility: 'hidden',\n        width: 0,\n      }}\n      text=\"-\"\n    />\n  )\n}\n","import {Badge, type BadgeTone, Inline} from '@sanity/ui'\nimport {memo, useCallback, useDeferredValue} from 'react'\nimport {type DocumentBadgeDescription} from 'sanity'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {RenderBadgeCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nconst DocumentBadgesInner = memo(function DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  if (states.length === 0) {\n    return null\n  }\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          key={`${badge.label}-${index}`}\n          content={badge.title}\n          disabled={!badge.title}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n})\n\nconst DocumentBadgesDeferred = memo(function DocumentBadgesDeferred(\n  props: DocumentBadgesInnerProps,\n) {\n  /**\n   * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n   * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n   */\n  const states = useDeferredValue(props.states)\n  return <DocumentBadgesInner states={states} />\n})\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  const renderDocumentBadges = useCallback<\n    (props: {states: DocumentBadgeDescription[]}) => React.ReactNode\n  >(({states}) => <DocumentBadgesDeferred states={states} />, [])\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState}>\n      {renderDocumentBadges}\n    </RenderBadgeCollectionState>\n  )\n}\n","import {\n  AddIcon,\n  CloseIcon,\n  EditIcon,\n  type IconComponent,\n  PublishIcon,\n  TrashIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n","import {type IconComponent} from '@sanity/icons'\nimport {type ChunkType} from 'sanity'\n\nimport {TIMELINE_ICON_COMPONENTS} from './constants'\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n","import {ChevronLeftIcon} from '@sanity/icons'\nimport {type MouseEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {TIMELINE_LIST_WRAPPER_ID} from './timeline'\n\n/**\n * This is a hack to force the scrollbar to not appear when the list is expanding,\n * if we don't do this the scrollbar will appear for a brief moment when the list is expanding and then disappear\n * when the list is fully expanded.\n */\nfunction hideScrollbarOnExpand(isExpanded: boolean) {\n  // Do nothing if the list is already expanded\n  if (isExpanded) return\n\n  const listWrapper = document.getElementById(TIMELINE_LIST_WRAPPER_ID)\n\n  if (listWrapper) {\n    const firstChildren = listWrapper.children[0] as HTMLElement\n    const hasScrollbar = firstChildren.scrollHeight > firstChildren.clientHeight\n    if (!hasScrollbar) {\n      //\n      const currentStyle = getComputedStyle(firstChildren).overflowY\n      // Add overflow hidden to the listWrapper to avoid the scrollbar to appear when expanding\n      firstChildren.style.overflowY = 'hidden'\n      setTimeout(() => {\n        // Reset the overflow style after the list is expanded\n        firstChildren.style.overflowY = currentStyle\n      }, 0)\n    }\n  }\n}\n\nconst FlipIcon = styled(ChevronLeftIcon)`\n  transition: transform 200ms;\n  &[data-expanded='true'] {\n    transform: rotate(-90deg);\n  }\n`\n\nexport function ExpandableTimelineItemButton({\n  isExpanded,\n  onExpand,\n}: {\n  isExpanded: boolean\n  onExpand: () => void\n}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleExpandClick = useCallback(\n    (e: MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation()\n      hideScrollbarOnExpand(isExpanded)\n      onExpand()\n    },\n    [onExpand, isExpanded],\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      icon={<FlipIcon data-expanded={isExpanded} />}\n      tooltipProps={{\n        content: isExpanded\n          ? t('timeline-item.menu.action-collapse')\n          : t('timeline-item.menu.action-expand'),\n      }}\n      onClick={handleExpandClick}\n    />\n  )\n}\n","import {Box, Flex, Stack} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)<{$maxHeight: string}>`\n  max-height: ${(props) => props.$maxHeight};\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)<{$visible?: boolean}>(({$visible}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.2s;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n","import {type ChunkType, type StudioLocaleResourceKeys} from 'sanity'\n\n/**\n * Maps from a chunk type to an i18n key for the operation\n *\n * @internal\n */\nexport const TIMELINE_ITEM_I18N_KEY_MAPPING: Record<ChunkType, StudioLocaleResourceKeys> = {\n  initial: 'timeline.operation.created-initial',\n  create: 'timeline.operation.created',\n  publish: 'timeline.operation.published',\n  editLive: 'timeline.operation.edited-live',\n  editDraft: 'timeline.operation.edited-draft',\n  unpublish: 'timeline.operation.unpublished',\n  discardDraft: 'timeline.operation.draft-discarded',\n  delete: 'timeline.operation.deleted',\n}\n","import {type AvatarSize, AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n  size?: AvatarSize\n  withTooltip?: boolean\n}\n\nexport function UserAvatarStack({\n  maxLength,\n  userIds,\n  size,\n  withTooltip = true,\n}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength} size={size}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip={withTooltip} />\n      ))}\n    </AvatarStack>\n  )\n}\n","import {Box, Card, Flex, Skeleton, Stack, Text} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, type ThemeColorAvatarColorKey} from '@sanity/ui/theme'\nimport {type MouseEvent, useCallback, useMemo} from 'react'\nimport {\n  AvatarSkeleton,\n  type ChunkType,\n  type RelativeTimeOptions,\n  useDateTimeFormat,\n  UserAvatar,\n  useRelativeTime,\n  useTranslation,\n  useUser,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {getTimelineEventIconComponent} from './helpers'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\nimport {UserAvatarStack} from './userAvatarStack'\nimport {type ChunksWithCollapsedDrafts} from './utils'\n\nexport const IconBox = styled(Flex)<{$color: ThemeColorAvatarColorKey}>((props) => {\n  const theme = getTheme_v2(props.theme)\n  const color = props.$color\n\n  return css`\n    --card-icon-color: ${theme.color.avatar[color].fg};\n    background-color: ${theme.color.avatar[color].bg};\n    box-shadow: 0 0 0 1px var(--card-bg-color);\n\n    position: absolute;\n    width: ${theme.avatar.sizes[0].size}px;\n    height: ${theme.avatar.sizes[0].size}px;\n    right: -3px;\n    bottom: -3px;\n    border-radius: 50%;\n  `\n})\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ThemeColorAvatarColorKey> = {\n  initial: 'blue',\n  create: 'blue',\n  publish: 'green',\n  editLive: 'green',\n  editDraft: 'yellow',\n  unpublish: 'orange',\n  discardDraft: 'orange',\n  delete: 'red',\n  withinSelection: 'magenta',\n}\n\nexport interface TimelineItemProps {\n  chunk: ChunksWithCollapsedDrafts\n  isSelected: boolean\n  onSelect: (chunk: ChunksWithCollapsedDrafts) => void\n  collaborators?: Set<string>\n  optionsMenu?: React.ReactNode\n}\n\nconst RELATIVE_TIME_OPTIONS: RelativeTimeOptions = {\n  minimal: true,\n  useTemporalPhrase: true,\n}\n\nconst NameSkeleton = styled(Skeleton)((props) => {\n  const theme = getTheme_v2(props.theme)\n  return css`\n    width: 6ch;\n    height: ${theme.font.text.sizes[0].lineHeight}px;\n  `\n})\n\nconst UserLine = ({userId}: {userId: string}) => {\n  const [user, loading] = useUser(userId)\n\n  return (\n    <Flex key={userId} align=\"center\" gap={2} padding={1}>\n      <Box>{loading || !user ? <AvatarSkeleton animated /> : <UserAvatar user={user} />}</Box>\n      <Box>\n        {loading || !user?.displayName ? (\n          <Text size={1}>\n            <NameSkeleton animated />\n          </Text>\n        ) : (\n          <Text muted size={1}>\n            {user.displayName}\n          </Text>\n        )}\n      </Box>\n    </Flex>\n  )\n}\nconst TooltipContent = ({collaborators}: {collaborators: string[]}) => {\n  const {t} = useTranslation('studio')\n  return (\n    <Stack paddingBottom={1}>\n      <Box padding={1} paddingBottom={2}>\n        <Text size={1} weight=\"medium\">\n          {t('timeline.changes.title')}\n        </Text>\n      </Box>\n      {collaborators.map((userId) => (\n        <UserLine key={userId} userId={userId} />\n      ))}\n    </Stack>\n  )\n}\nexport function TimelineItem({\n  chunk,\n  isSelected,\n  onSelect,\n  collaborators,\n  optionsMenu,\n}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const {type, endTimestamp: timestamp} = chunk\n  const IconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const collaboratorsUsersIds = collaborators ? Array.from(collaborators) : []\n  const isSelectable = type !== 'delete'\n  const dateFormat = useDateTimeFormat({dateStyle: 'medium', timeStyle: 'short'})\n  const date = new Date(timestamp)\n\n  const updatedTimeAgo = useRelativeTime(date || '', RELATIVE_TIME_OPTIONS)\n\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = dateFormat.format(parsedDate)\n\n    return formattedDate\n  }, [timestamp, dateFormat])\n\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(chunk)\n      }\n    },\n    [onSelect, chunk, isSelectable],\n  )\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      <Card\n        as=\"button\"\n        onClick={handleClick}\n        padding={2}\n        pressed={isSelected}\n        radius={2}\n        data-ui=\"timelineItem\"\n        data-testid=\"timeline-item-button\"\n        data-chunk-id={chunk.id}\n      >\n        <Flex align=\"center\" gap={3}>\n          <div style={{position: 'relative'}}>\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} size={2} />\n            <IconBox align=\"center\" justify=\"center\" $color={TIMELINE_ITEM_EVENT_TONE[type]}>\n              <Text size={0}>{IconComponent && <IconComponent />}</Text>\n            </IconBox>\n          </div>\n          <Stack space={2}>\n            <Text size={1} weight=\"medium\">\n              {t(TIMELINE_ITEM_I18N_KEY_MAPPING[type]) || <code>{type}</code>}\n            </Text>\n\n            <Text as=\"time\" size={1} muted dateTime={timestamp} title={formattedTimestamp}>\n              {updatedTimeAgo}\n            </Text>\n          </Stack>\n\n          {collaboratorsUsersIds.length > 0 && (\n            <Flex flex={1} justify=\"flex-end\" align=\"center\">\n              <Tooltip\n                placement=\"top\"\n                content={<TooltipContent collaborators={collaboratorsUsersIds} />}\n                portal\n              >\n                <Box paddingLeft={2} paddingY={2}>\n                  <UserAvatarStack\n                    maxLength={3}\n                    userIds={collaboratorsUsersIds}\n                    size={0}\n                    withTooltip={false}\n                  />\n                </Box>\n              </Tooltip>\n            </Flex>\n          )}\n        </Flex>\n      </Card>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {type Chunk, type ChunkType} from 'sanity'\n\nexport type NonPublishChunk = Omit<Chunk, 'type'> & {\n  type: Exclude<ChunkType, 'publish'>\n  parentId?: string\n}\n\nexport type PublishChunk = Omit<Chunk, 'type'> & {\n  type: 'publish'\n  children: string[]\n  collaborators: Set<string>\n}\n\nexport const isNonPublishChunk = (chunk: Chunk): chunk is NonPublishChunk =>\n  chunk.type !== 'publish'\n\nexport const isPublishChunk = (chunk: Chunk): chunk is PublishChunk => chunk.type === 'publish'\n\n/**\n * searches for the previous publish action in the list of chunks\n * e.g. chunks = [publish, edit, publish, edit, edit] it needs to return the second publish action\n * e.g. chunks = [publish, edit, delete, edit, edit] it returns undefined\n */\n\nfunction getPreviousPublishAction(chunks: Chunk[]) {\n  let previousPublish: PublishChunk | null = null\n  // We need to iterate from the end to the start of the list\n  for (let index = chunks.length - 1; index >= 0; index--) {\n    const chunk = chunks[index]\n    if (isPublishChunk(chunk)) {\n      previousPublish = chunk\n      break\n    }\n    if (chunk.type === 'editDraft') {\n      continue\n    } else break\n  }\n\n  return previousPublish\n}\nexport type ChunksWithCollapsedDrafts = NonPublishChunk | PublishChunk\n\n/**\n * Takes an array of chunks and adds them metadata necessary for the timeline view.\n * for draft chunks, it will add the parentId of the published chunk if this draft action is now published\n * for published, it will add the children array and the collaborators array\n */\nexport function addChunksMetadata(chunks: Chunk[]): ChunksWithCollapsedDrafts[] {\n  const result: ChunksWithCollapsedDrafts[] = []\n\n  for (const chunk of chunks) {\n    if (isPublishChunk(chunk)) {\n      result.push({\n        ...chunk,\n        type: 'publish',\n        children: [],\n        collaborators: new Set(), // Initialize the collaborators array\n      })\n      continue\n    }\n    if (isNonPublishChunk(chunk)) {\n      const previousPublish = getPreviousPublishAction(result)\n      if (chunk.type === 'editDraft' && previousPublish?.type === 'publish') {\n        Array.from(chunk.authors).forEach((id) => {\n          previousPublish.collaborators.add(id)\n        })\n        previousPublish.children.push(chunk.id)\n        result.push({\n          ...chunk,\n          parentId: previousPublish.id,\n        })\n        continue\n      }\n    }\n    if (isNonPublishChunk(chunk)) {\n      result.push(chunk)\n    }\n  }\n\n  return result\n}\n","import {Box, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type Chunk,\n  CommandList,\n  type CommandListRenderItemCallback,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from './expandableTimelineItemButton'\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {TimelineItem} from './timelineItem'\nimport {\n  addChunksMetadata,\n  type ChunksWithCollapsedDrafts,\n  isNonPublishChunk,\n  isPublishChunk,\n} from './utils'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  hasMoreChunks: boolean | null\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const Timeline = ({\n  chunks,\n  hasMoreChunks,\n  lastChunk: selectedChunk,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const selectedChunkId = selectedChunk?.id\n  const chunksWithMetadata = useMemo(() => addChunksMetadata(chunks), [chunks])\n\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedChunkId) {\n      // If the selected chunk is a draft, we need to expand its parent\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        return new Set([selected.parentId])\n      }\n    }\n    return new Set()\n  })\n\n  useEffect(() => {\n    // This effect ensures that when we reload the timeline with a selected draft, we expand its parent.\n    if (selectedChunkId) {\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        const parentId = selected.parentId\n        setExpandedParents((prev) => {\n          if (prev.has(parentId)) return prev\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n      }\n    }\n  }, [chunksWithMetadata, selectedChunkId])\n\n  const filteredChunks = useMemo(() => {\n    return chunksWithMetadata.filter((chunk) => {\n      if (isPublishChunk(chunk) || !chunk.parentId) return true\n      // If the chunk has a parent id keep it hidden until the parent is expanded.\n      return expandedParents.has(chunk.parentId)\n    })\n  }, [chunksWithMetadata, expandedParents])\n\n  useEffect(() => {\n    // This effect ensures that we load more chunks if the list is not long enough.\n    // This could happen if a parent chunk has multiple drafts, so you could end with a list of 50 transactions but only\n    // 1 parent chunk, the publish, which squashed all the changes.\n    // In that case, users will see the loading block at the bottom, but nothing will really be happening. Because they haven't reach the end of the list.\n    if (filteredChunks.length < 16 && hasMoreChunks) {\n      onLoadMore()\n    }\n  }, [filteredChunks, hasMoreChunks, onLoadMore])\n\n  const handleExpandParent = useCallback(\n    (parentId: string) => () =>\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else next.add(parentId)\n\n        return next\n      }),\n    [],\n  )\n\n  const selectedIndex = useMemo(\n    () =>\n      selectedChunkId ? filteredChunks.findIndex((chunk) => chunk.id === selectedChunkId) : -1,\n    [selectedChunkId, filteredChunks],\n  )\n  const handleSelectChunk = useCallback(\n    (chunk: ChunksWithCollapsedDrafts) => {\n      const timelineChunk = chunks.find((c) => c.id === chunk.id)\n      if (timelineChunk) onSelect(timelineChunk)\n      else {\n        console.error('TimelineItem: chunk not found')\n        onSelect(chunk)\n      }\n    },\n    [chunks, onSelect],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<(typeof filteredChunks)[number]>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n\n      return (\n        <Box\n          paddingBottom={1}\n          paddingTop={isFirst ? 1 : 0}\n          paddingRight={1}\n          paddingLeft={isNonPublishChunk(chunk) && chunk.parentId ? 4 : 1}\n        >\n          <TimelineItem\n            chunk={chunk}\n            isSelected={selectedChunkId === chunk.id}\n            onSelect={handleSelectChunk}\n            collaborators={isPublishChunk(chunk) ? chunk.collaborators : undefined}\n            optionsMenu={\n              isPublishChunk(chunk) && chunk.children.length > 0 ? (\n                <ExpandableTimelineItemButton\n                  isExpanded={expandedParents.has(chunk.id)}\n                  onExpand={handleExpandParent(chunk.id)}\n                />\n              ) : null\n            }\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && <LoadingBlock />}\n        </Box>\n      )\n    },\n    [\n      expandedParents,\n      filteredChunks.length,\n      handleExpandParent,\n      handleSelectChunk,\n      hasMoreChunks,\n      selectedChunkId,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={57}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nexport function TimelineError({versionError}: {versionError?: boolean}) {\n  const {t} = useTranslation('studio')\n\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"medium\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-title')\n            : t('timeline.error.load-document-changes-title')}\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-description')\n            : t('timeline.error.load-document-changes-description')}\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {type Chunk, useTimelineSelector, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../ui-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {Timeline} from './timeline'\nimport {TimelineError} from './TimelineError'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForSince(sinceChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = useMemo(() => {\n    if (timelineError) return <TimelineError />\n\n    if (mode === 'rev') {\n      return (\n        <Timeline\n          chunks={chunks}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )\n    }\n\n    const filteredChunks = realRevChunk\n      ? chunks.filter((c) => c.index < realRevChunk.index)\n      : chunks\n    return (\n      <Timeline\n        chunks={filteredChunks}\n        hasMoreChunks={hasMoreChunks}\n        lastChunk={sinceTime}\n        onLoadMore={handleLoadMore}\n        onSelect={selectSince}\n      />\n    )\n  }, [\n    chunks,\n    handleLoadMore,\n    hasMoreChunks,\n    mode,\n    realRevChunk,\n    selectRev,\n    selectSince,\n    sinceTime,\n    timelineError,\n  ])\n\n  const formatParams = {\n    timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n  }\n\n  const revLabel = chunk\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[chunk.type], {\n        context: 'timestamp',\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = chunk\n    ? t('timeline.since', {\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.since-version-missing')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n  const portalElements = useMemo(() => ({[TIMELINE_MENU_PORTAL]: popoverRef}), [popoverRef])\n\n  return (\n    <PortalProvider __unstable_elements={portalElements}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={!ready}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={ready ? buttonLabel : t('timeline.loading-history')}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {motion} from 'framer-motion'\nimport {type ComponentProps} from 'react'\nimport {keyframes, styled} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd' | 'ref'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"animated-status-icon\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n","import {type ButtonTone, Flex, Text} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\n\ntype StatusType = 'saved' | 'syncing'\ninterface ReviewChangesButtonProps {\n  status?: StatusType\n}\n\nconst STATUS_DICTIONARY: Record<StatusType, {i18nKey: string; tone: ButtonTone}> = {\n  saved: {\n    i18nKey: 'status-bar.document-status-pulse.status.saved.text',\n    tone: 'positive',\n  },\n  syncing: {\n    i18nKey: 'status-bar.document-status-pulse.status.syncing.text',\n    tone: 'default',\n  },\n}\n\nexport const DocumentStatusPulse = (props: ReviewChangesButtonProps) => {\n  const {status} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (status !== 'saved' && status !== 'syncing') {\n    return null\n  }\n\n  const currentStatus = STATUS_DICTIONARY[status]\n\n  return (\n    <Flex align=\"center\" gap={2} data-testid=\"pane-footer-document-status-pulse\">\n      <TextWithTone size={1} tone={currentStatus.tone}>\n        <AnimatedStatusIcon status={status} />\n      </TextWithTone>\n\n      <Text muted size={1}>\n        {t(currentStatus.i18nKey)}\n      </Text>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  // eslint-disable-next-line no-restricted-imports\n  Button,\n  Flex,\n  Skeleton,\n  Text,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {useEffect, useLayoutEffect, useMemo, useState} from 'react'\nimport {\n  AvatarSkeleton,\n  isPublishedPerspective,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  usePerspective,\n  UserAvatar,\n  useRelativeTime,\n  useSource,\n  useSyncState,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\n\nimport {HISTORY_INSPECTOR_NAME} from '../constants'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING as TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY} from '../timeline'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusPulse} from './DocumentStatusPulse'\n\nconst RELATIVE_TIME_OPTIONS = {\n  minimal: true,\n  useTemporalPhrase: true,\n} as const\n\nconst MotionButton = motion.create(Button)\nconst MotionBox = motion.create(Box)\n\nconst ButtonSkeleton = () => {\n  return (\n    <Flex align=\"center\" gap={3} paddingLeft={1} paddingRight={2} paddingY={2}>\n      <div style={{margin: -5}}>\n        <AvatarSkeleton $size={0} animated />\n      </div>\n      <Skeleton animated style={{width: '80px', height: '15px'}} radius={2} />\n    </Flex>\n  )\n}\n\nconst DocumentStatusButton = ({\n  author,\n  translationKey,\n  timestamp = '',\n}: {\n  author: string\n  translationKey: string\n  timestamp?: string\n}) => {\n  const {onHistoryOpen, inspector, onHistoryClose} = useDocumentPane()\n  const {t} = useTranslation()\n  const relativeTime = useRelativeTime(timestamp, RELATIVE_TIME_OPTIONS)\n\n  return (\n    <MotionButton\n      data-testid=\"pane-footer-document-status\"\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      exit={{opacity: 0}}\n      mode=\"bleed\"\n      onClick={inspector?.name === HISTORY_INSPECTOR_NAME ? onHistoryClose : onHistoryOpen}\n      padding={2}\n      muted\n    >\n      <Flex align=\"center\" flex=\"none\" gap={3}>\n        {author && (\n          <div style={{margin: -5}}>\n            <UserAvatar user={author} size={0} />\n          </div>\n        )}\n        <Text muted size={1}>\n          {t(translationKey)} {relativeTime}\n        </Text>\n      </Flex>\n    </MotionButton>\n  )\n}\n\nconst FallbackStatus = () => {\n  const {editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n\n  const status = useMemo(() => {\n    if (isPublishedPerspective(selectedPerspective) && editState?.published?._updatedAt) {\n      return {\n        translationKey: TIMELINE_ITEM_I18N_KEY_MAPPING.published.createDocumentVersion,\n        timestamp: editState.published._updatedAt,\n      }\n    }\n    if (editState?.version?._updatedAt) {\n      return {\n        translationKey:\n          editState?.version?._updatedAt === editState?.version?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.version.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.version.editDocumentVersion,\n        timestamp: editState.version._updatedAt,\n      }\n    }\n    if (editState?.draft?._updatedAt) {\n      return {\n        translationKey:\n          editState?.draft?._updatedAt === editState?.draft?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.draft.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.draft.editDocumentVersion,\n        timestamp: editState.draft._updatedAt,\n      }\n    }\n    return null\n  }, [\n    selectedPerspective,\n    editState?.published?._updatedAt,\n    editState?.version?._updatedAt,\n    editState?.version?._createdAt,\n    editState?.draft?._updatedAt,\n    editState?.draft?._createdAt,\n  ])\n  if (!status) {\n    return null\n  }\n  return (\n    <DocumentStatusButton\n      author=\"\"\n      translationKey={status.translationKey}\n      timestamp={status.timestamp}\n    />\n  )\n}\n\nconst EventsStatus = () => {\n  const {events, loading} = useEvents()\n  const event = events?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  return (\n    <DocumentStatusButton\n      author={event.author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type]}\n      timestamp={event.timestamp}\n    />\n  )\n}\n\nconst TimelineStatus = () => {\n  const {timelineStore} = useDocumentPane()\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const event = chunks?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  const author = Array.from(event.authors)[0]\n  return (\n    <DocumentStatusButton\n      author={author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY[event.type]}\n      timestamp={event.endTimestamp}\n    />\n  )\n}\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\nexport function DocumentStatusLine() {\n  const {documentId, documentType, editState, value} = useDocumentPane()\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n  const source = useSource()\n  const eventsEnabled = source.beta?.eventsAPI?.documents\n\n  const syncState = useSyncState(documentId, documentType, editState?.release)\n\n  const lastUpdated = value?._updatedAt\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  return (\n    <AnimatePresence>\n      {status ? (\n        <MotionBox\n          paddingLeft={2}\n          animate={{opacity: 1}}\n          initial={{opacity: 0}}\n          exit={{opacity: 0}}\n        >\n          <DocumentStatusPulse status={status || undefined} />\n        </MotionBox>\n      ) : (\n        <>{eventsEnabled ? <EventsStatus /> : <TimelineStatus />}</>\n      )}\n    </AnimatePresence>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {Translate, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport const StatusText = styled(Text)`\n  color: var(--card-muted-fg-color);\n\n  em {\n    color: var(--card-fg-color);\n    font-weight: 500;\n    font-style: normal;\n  }\n`\n\nexport function RevisionStatusLine(): React.JSX.Element {\n  const {displayed, revisionNotFound} = useDocumentPane()\n  const {t} = useTranslation()\n  const date = displayed?._updatedAt || displayed?._createdAt\n\n  const message = {\n    name: 'revision',\n    text: date ? (\n      <Translate\n        t={t}\n        i18nKey=\"document-status.revision-from\"\n        values={{\n          date: format(new Date(date), `MMM d, yyyy '@' pp`),\n        }}\n      />\n    ) : null,\n    tone: 'caution',\n  }\n\n  return (\n    <>\n      <Flex flex={1} gap={3} padding={2}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <RestoreIcon />\n          </Text>\n        </Box>\n        <Box flex={1}>\n          <StatusText size={1} textOverflow=\"ellipsis\">\n            {revisionNotFound ? (\n              <Translate t={t} i18nKey=\"document-status.revision-not-found\" />\n            ) : (\n              message.text\n            )}\n          </StatusText>\n        </Box>\n      </Flex>\n    </>\n  )\n}\n","import {useLayoutEffect} from 'react'\nimport {resizeObserver} from 'sanity'\n\nexport function useResizeObserver({\n  element,\n  onResize,\n}: {\n  element?: HTMLDivElement | null\n  onResize: (event: ResizeObserverEntry) => void\n}): void {\n  useLayoutEffect(() => {\n    if (element) {\n      resizeObserver.observe(element, onResize)\n    }\n\n    return () => {\n      if (element) {\n        resizeObserver.unobserve(element)\n      }\n    }\n  }, [element, onResize])\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type Ref, useCallback, useMemo, useState} from 'react'\nimport {\n  type CreateLinkMetadata,\n  isPublishedPerspective,\n  isReleaseDocument,\n  isSanityCreateLinked,\n  usePerspective,\n  useSanityCreateConfig,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../components'\nimport {SpacerButton} from '../../../components/spacerButton'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {EMPTY_PARAMS} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {useDocumentTitle} from '../useDocumentTitle'\nimport {DocumentBadges} from './DocumentBadges'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentStatusLine} from './DocumentStatusLine'\nimport {RevisionStatusLine} from './RevisionStatusLine'\nimport {useResizeObserver} from './useResizeObserver'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: Ref<HTMLDivElement>\n  createLinkMetadata?: CreateLinkMetadata\n}\n\nconst CONTAINER_BREAKPOINT = 480 // px\n\nconst AnimatedCard = motion.create(Card)\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef, createLinkMetadata} = props\n  const {editState, onChange: onDocumentChange, revisionNotFound} = useDocumentPane()\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const {selectedPerspective} = usePerspective()\n  const {title} = useDocumentTitle()\n\n  const CreateLinkedActions = useSanityCreateConfig().components?.documentLinkedActions\n\n  const showingRevision = Boolean(params.rev)\n  const [collapsed, setCollapsed] = useState<boolean | null>(null)\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n\n  const handleResize = useCallback((event: ResizeObserverEntry) => {\n    setCollapsed(event.contentRect.width < CONTAINER_BREAKPOINT)\n  }, [])\n\n  useResizeObserver({element: rootElement, onResize: handleResize})\n\n  const shouldRender = useMemo(() => {\n    const isReady = Boolean(editState?.ready && typeof collapsed === 'boolean')\n    if (selectedPerspective) {\n      if (isPublishedPerspective(selectedPerspective)) {\n        return isReady && Boolean(editState?.published)\n      }\n      if (isReleaseDocument(selectedPerspective)) {\n        return isReady && Boolean(editState?.version)\n      }\n    }\n    return isReady\n  }, [collapsed, editState?.published, editState?.ready, editState?.version, selectedPerspective])\n\n  let actions: React.JSX.Element | null = null\n  if (createLinkMetadata && isSanityCreateLinked(createLinkMetadata) && CreateLinkedActions) {\n    actions = (\n      <CreateLinkedActions\n        metadata={createLinkMetadata}\n        panelPortalElementId={DOCUMENT_PANEL_PORTAL_ELEMENT}\n        onDocumentChange={onDocumentChange}\n        documentTitle={title}\n      />\n    )\n  } else if (showingRevision) {\n    actions = <HistoryStatusBarActions />\n  } else {\n    actions = <DocumentStatusBarActions />\n  }\n\n  if (showingRevision && revisionNotFound) {\n    return null\n  }\n\n  return (\n    <AnimatedCard\n      key={showingRevision ? 'revision' : 'published'}\n      initial={{opacity: 0.2}}\n      animate={{opacity: 1, transition: {duration: 0.3}}}\n      tone={showingRevision ? 'caution' : undefined}\n      radius={3}\n      ref={setRootElement}\n      sizing=\"border\"\n      padding={2}\n    >\n      {shouldRender && (\n        <Flex\n          align=\"stretch\"\n          gap={1}\n          justify=\"space-between\"\n          paddingLeft={showingRevision ? 0 : 1}\n          paddingRight={showingRevision ? 0 : 1}\n        >\n          <Flex align=\"center\" flex={1} gap={collapsed ? 2 : 3} wrap=\"wrap\" paddingRight={3}>\n            <Flex align=\"center\">\n              {showingRevision ? <RevisionStatusLine /> : <DocumentStatusLine />}\n              <SpacerButton />\n            </Flex>\n            <DocumentBadges />\n          </Flex>\n\n          <Flex\n            align=\"flex-start\"\n            justify=\"flex-end\"\n            ref={actionsBoxRef}\n            style={{flexShrink: 0, marginLeft: 'auto'}}\n          >\n            <SpacerButton />\n            {actions}\n          </Flex>\n        </Flex>\n      )}\n    </AnimatedCard>\n  )\n}\n","import {isHotkey} from 'is-hotkey-esm'\nimport {\n  type ElementType,\n  type HTMLProps,\n  memo,\n  type Ref,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, type DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nimport {RenderActionCollectionState} from '../../../components'\nimport {ActionStateDialog} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  as?: ElementType\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nconst KeyboardShortcutResponder = memo(function KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height'>,\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    as: As = 'div',\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event),\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`,\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states],\n  )\n\n  return (\n    <As id={id} onKeyDown={handleKeyDown} tabIndex={-1} {...rest} ref={rootRef}>\n      {children}\n      {activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      )}\n    </As>\n  )\n})\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  as?: ElementType\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = memo(\n  (props: DocumentActionShortcutsProps & Omit<HTMLProps<HTMLDivElement>, 'as'>) => {\n    const {actionsBoxElement, as = 'div', children, ...rest} = props\n    const {actions, editState, isInitialValueLoading, revisionId} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          revision: revisionId || undefined,\n          initialValueResolved: !isInitialValueLoading,\n        },\n      [editState, isInitialValueLoading, revisionId],\n    )\n\n    const renderDocumentActionShortcuts = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <KeyboardShortcutResponder\n          {...rest}\n          activeIndex={activeIndex}\n          actionsBoxElement={actionsBoxElement}\n          as={as}\n          onActionStart={onActionStart}\n          states={states}\n        >\n          {children}\n        </KeyboardShortcutResponder>\n      ),\n      [actionsBoxElement, activeIndex, as, children, onActionStart, rest],\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {renderDocumentActionShortcuts}\n      </RenderActionCollectionState>\n    )\n  },\n)\n\nDocumentActionShortcuts.displayName = 'Memo(DocumentActionShortcuts)'\n","import {CheckmarkIcon} from '@sanity/icons'\nimport {type ComponentType} from 'react'\n\nexport const HiddenCheckmarkIcon: ComponentType = () => (\n  <CheckmarkIcon style={{visibility: 'hidden'}} />\n)\n","import {CheckmarkIcon, EarthAmericasIcon, JsonIcon, LinkIcon, TransferIcon} from '@sanity/icons'\nimport {\n  type DocumentIdStack,\n  type DocumentInspector,\n  type DocumentInspectorMenuItem,\n  type TFunction,\n} from 'sanity'\n\nimport {type PaneMenuItem, type StructureToolFeatures} from '../../types'\nimport {HiddenCheckmarkIcon} from './components/HiddenCheckmarkIcon'\nimport {INSPECT_ACTION_PREFIX} from './constants'\n\ninterface GetMenuItemsParams {\n  currentInspector?: DocumentInspector\n  features: StructureToolFeatures\n  hasValue: boolean\n  inspectors: DocumentInspector[]\n  previewUrl?: string | null\n  documentIdStack?: DocumentIdStack\n  inspectorMenuItems: DocumentInspectorMenuItem[]\n  t: TFunction\n  displayInlineChanges: boolean\n}\n\nfunction getInspectorItems({\n  currentInspector,\n  hasValue,\n  inspectors,\n  inspectorMenuItems,\n}: GetMenuItemsParams): PaneMenuItem[] {\n  return inspectors\n    .map((inspector, index) => {\n      const menuItem = inspectorMenuItems[index]\n\n      if (!menuItem || menuItem.hidden) return null\n\n      return {\n        action: `${INSPECT_ACTION_PREFIX}${inspector.name}`,\n        group: menuItem.showAsAction ? undefined : 'inspectors',\n        icon: menuItem.icon,\n        disabled: !hasValue,\n        selected: currentInspector?.name === inspector.name,\n        shortcut: menuItem.hotkeys?.join('+'),\n        showAsAction: menuItem.showAsAction,\n        title: menuItem.title,\n        tone: menuItem.tone,\n      }\n    })\n    .filter(Boolean) as PaneMenuItem[]\n}\n\nfunction getInspectItem({hasValue, t}: GetMenuItemsParams): PaneMenuItem {\n  return {\n    action: 'inspect',\n    group: 'inspectors',\n    title: t('document-inspector.menu-item.title'),\n    icon: JsonIcon,\n    disabled: !hasValue,\n    shortcut: 'Ctrl+Alt+I',\n  }\n}\n\nfunction getCompareVersionsItem({documentIdStack, t}: GetMenuItemsParams): PaneMenuItem | null {\n  const disabled = typeof documentIdStack?.previousId === 'undefined' && {\n    reason: t('compare-versions.menu-item.disabled-reason'),\n  }\n\n  return {\n    action: 'compareVersions',\n    group: 'inspectors',\n    title: t('compare-versions.menu-item.title'),\n    icon: TransferIcon,\n    disabled,\n  }\n}\n\nfunction getInlineChangesItem({displayInlineChanges, t}: GetMenuItemsParams): PaneMenuItem {\n  return {\n    action: 'toggleInlineChanges',\n    group: 'inspectors',\n    title: t('toggle-inline-changes.menu-item.title'),\n    // The simplest way to render no icon, while preserving an icon-sized space, is to render a\n    // hidden icon.\n    icon: displayInlineChanges ? CheckmarkIcon : HiddenCheckmarkIcon,\n  }\n}\n\nexport function getProductionPreviewItem({previewUrl, t}: GetMenuItemsParams): PaneMenuItem | null {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    group: 'links',\n    title: t('production-preview.menu-item.title'),\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport function getMenuItems(params: GetMenuItemsParams): PaneMenuItem[] {\n  const inspectorItems = getInspectorItems(params)\n  const items = [\n    // Get production preview item\n    getProductionPreviewItem(params),\n    getCompareVersionsItem(params),\n    getInlineChangesItem(params),\n  ].filter(Boolean) as PaneMenuItem[]\n\n  return [\n    // Always present document menu item to copy current url to clipboard\n    {\n      action: 'copy-document-url',\n      showAsAction: true,\n      title: params.t('action.copy-document-url.label'),\n      icon: LinkIcon,\n    },\n    ...inspectorItems,\n\n    // TODO: convert to inspector or document view?\n    getInspectItem(params),\n\n    ...items,\n  ]\n}\n","import {Card, Code, Stack, Text} from '@sanity/ui'\nimport {isDev, Translate, useTranslation} from 'sanity'\n\nimport {ErrorPane} from '../../error'\n\ninterface DocumentLayoutErrorProps {\n  currentMinWidth?: number\n  documentType?: string\n  minWidth?: number\n  paneKey: string\n  value?: Record<string, unknown>\n}\n\nexport function DocumentLayoutError(props: DocumentLayoutErrorProps) {\n  const {documentType, value, currentMinWidth, paneKey, minWidth} = props\n  const {t} = useTranslation()\n\n  return (\n    <ErrorPane\n      currentMinWidth={currentMinWidth}\n      flex={2.5}\n      minWidth={minWidth}\n      paneKey={paneKey}\n      title={\n        <Translate\n          t={t}\n          i18nKey=\"panes.document-pane.document-unknown-type.title\"\n          values={{documentType}}\n        />\n      }\n      tone=\"caution\"\n    >\n      <Stack space={4}>\n        {documentType && (\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-unknown-type.text\"\n              values={{documentType}}\n            />\n          </Text>\n        )}\n\n        {!documentType && (\n          <Text as=\"p\">{t('panes.document-pane.document-unknown-type.without-schema.text')}</Text>\n        )}\n\n        {isDev && value && (\n          /* eslint-disable i18next/no-literal-string */\n          <>\n            <Text as=\"p\">Here is the JSON representation of the document:</Text>\n\n            <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n              <Code language=\"json\" size={[1, 1, 2]}>\n                {JSON.stringify(value, null, 2)}\n              </Code>\n            </Card>\n          </>\n          /* eslint-enable i18next/no-literal-string */\n        )}\n      </Stack>\n    </ErrorPane>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, PortalProvider} from '@sanity/ui'\nimport {type Dispatch, type SetStateAction, useMemo} from 'react'\nimport {getSanityCreateLinkMetadata, useZIndex} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../../ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider'\nimport {PaneFooter} from '../../../components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {DocumentStatusBar} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nexport function DocumentLayoutFooter({\n  documentPanelPortalElement,\n  setFooterElement,\n  setActionsBoxElement,\n}: {\n  documentPanelPortalElement: HTMLElement | null\n  setFooterElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n  setActionsBoxElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n}) {\n  const zOffsets = useZIndex()\n\n  const {value} = useDocumentPane()\n  const portalElements = useMemo(\n    () => ({[DOCUMENT_PANEL_PORTAL_ELEMENT]: documentPanelPortalElement}),\n    [documentPanelPortalElement],\n  )\n\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  return (\n    // These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane\n    // The portal element comes from `DocumentPanel`.\n    <PortalProvider __unstable_elements={portalElements}>\n      <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n        <PaneFooter ref={setFooterElement} padding={1}>\n          <TooltipDelayGroupProvider>\n            <DocumentStatusBar\n              actionsBoxRef={setActionsBoxElement}\n              createLinkMetadata={createLinkMetadata}\n            />\n          </TooltipDelayGroupProvider>\n        </PaneFooter>\n      </DialogProvider>\n    </PortalProvider>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, Flex, useElementRect} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  ChangeConnectorRoot,\n  type DocumentFieldActionNode,\n  type DocumentInspectorMenuItem,\n  FieldActionsProvider,\n  FieldActionsResolver,\n  GetFormValueProvider,\n  type Path,\n  useDocumentIdStack,\n  useGlobalCopyPasteElementHandler,\n  useTranslation,\n  useZIndex,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\nimport {styled} from 'styled-components'\n\nimport {Pane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {\n  DOCUMENT_INSPECTOR_MIN_WIDTH,\n  DOCUMENT_PANEL_INITIAL_MIN_WIDTH,\n  DOCUMENT_PANEL_MIN_WIDTH,\n} from '../constants'\nimport {DocumentInspectorMenuItemsResolver} from '../DocumentInspectorMenuItemsResolver'\nimport {DocumentOperationResults} from '../DocumentOperationResults'\nimport {DocumentPanel} from '../documentPanel'\nimport {DocumentPanelHeader} from '../documentPanel/header'\nimport {DocumentActionShortcuts} from '../keyboardShortcuts'\nimport {getMenuItems} from '../menuItems'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentLayoutError} from './DocumentLayoutError'\nimport {DocumentLayoutFooter} from './DocumentLayoutFooter'\n\nconst EMPTY_ARRAY: [] = []\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport function DocumentLayout() {\n  const {\n    changesOpen,\n    displayed,\n    documentId,\n    documentType,\n    editState,\n    fieldActions,\n    focusPath,\n    inspectOpen,\n    inspector,\n    inspectors,\n    onFocus,\n    onHistoryOpen,\n    onMenuAction,\n    onPathOpen,\n    paneKey,\n    schemaType,\n    value,\n    isInitialValueLoading,\n    ready,\n    previewUrl,\n  } = useDocumentPane()\n  const {stickyParams} = useRouter()\n  const {params: paneParams} = usePaneRouter()\n  const {features} = useStructureTool()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  const zOffsets = useZIndex()\n\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null,\n  )\n\n  useGlobalCopyPasteElementHandler({\n    element: rootElement,\n    focusPath,\n    value,\n  })\n\n  const [inspectorMenuItems, setInspectorMenuItems] = useState<DocumentInspectorMenuItem[]>([])\n  const [rootFieldActionNodes, setRootFieldActionNodes] = useState<DocumentFieldActionNode[]>([])\n\n  const footerRect = useElementRect(footerElement)\n  const headerRect = useElementRect(headerElement)\n  const footerHeight = footerRect?.height\n  const headerHeight = headerRect?.height\n  const currentMinWidth =\n    DOCUMENT_PANEL_INITIAL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n  const minWidth = DOCUMENT_PANEL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspector?.name),\n    [inspectors, inspector?.name],\n  )\n\n  const documentIdStack = useDocumentIdStack({displayed, documentId, editState})\n\n  const hasValue = Boolean(value)\n\n  const menuItems = useMemo(\n    () =>\n      getMenuItems({\n        currentInspector,\n        features,\n        hasValue,\n        inspectorMenuItems,\n        inspectors,\n        previewUrl,\n        documentIdStack,\n        t,\n        displayInlineChanges: stickyParams.displayInlineChanges === 'true',\n      }),\n    [\n      currentInspector,\n      documentIdStack,\n      features,\n      hasValue,\n      inspectorMenuItems,\n      inspectors,\n      previewUrl,\n      t,\n      stickyParams.displayInlineChanges,\n    ],\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            onMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [onMenuAction, menuItems],\n  )\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus],\n  )\n\n  if (!schemaType) {\n    return (\n      <DocumentLayoutError\n        currentMinWidth={currentMinWidth}\n        documentType={documentType}\n        minWidth={minWidth}\n        paneKey={paneKey}\n        value={value}\n      />\n    )\n  }\n\n  return (\n    <GetFormValueProvider value={value}>\n      {inspectors.length > 0 && (\n        <DocumentInspectorMenuItemsResolver\n          documentId={documentId}\n          documentType={documentType}\n          inspectors={inspectors}\n          onMenuItems={setInspectorMenuItems}\n        />\n      )}\n\n      {fieldActions.length > 0 && schemaType && (\n        <FieldActionsResolver\n          actions={fieldActions}\n          documentId={documentId}\n          documentType={documentType}\n          onActions={setRootFieldActionNodes}\n          path={EMPTY_ARRAY}\n          schemaType={schemaType}\n        />\n      )}\n\n      <FieldActionsProvider actions={rootFieldActionNodes} path={EMPTY_ARRAY}>\n        <DocumentActionShortcuts\n          actionsBoxElement={actionsBoxElement}\n          as={Pane}\n          currentMinWidth={currentMinWidth}\n          data-testid=\"document-pane\"\n          flex={2.5}\n          id={paneKey}\n          minWidth={minWidth}\n          onKeyUp={handleKeyUp}\n          rootRef={setRootElement}\n        >\n          <DocumentPanelHeader ref={setHeaderElement} menuItems={menuItems} />\n          <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.paneDialog}>\n            <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n              <StyledChangeConnectorRoot\n                data-testid=\"change-connector-root\"\n                isReviewChangesOpen={changesOpen && paneParams?.changesInspectorTab === 'review'}\n                onOpenReviewChanges={onHistoryOpen}\n                onSetFocus={onConnectorSetFocus}\n              >\n                <DocumentPanel\n                  footerHeight={footerHeight || null}\n                  headerHeight={headerHeight || null}\n                  isInspectOpen={inspectOpen}\n                  rootElement={rootElement}\n                  setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n                  footer={\n                    <DocumentLayoutFooter\n                      documentPanelPortalElement={documentPanelPortalElement}\n                      setFooterElement={setFooterElement}\n                      setActionsBoxElement={setActionsBoxElement}\n                    />\n                  }\n                />\n              </StyledChangeConnectorRoot>\n            </Flex>\n          </DialogProvider>\n          <DocumentOperationResults />\n        </DocumentActionShortcuts>\n      </FieldActionsProvider>\n    </GetFormValueProvider>\n  )\n}\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, useMiddlewareComponents} from 'sanity'\n\nimport {DocumentLayout} from './DocumentLayout'\nimport {pickDocumentLayoutComponent} from './pickDocumentLayoutComponent'\n\n/**\n * A hook that returns the document layout composed\n * by the Components API (`document.components.layout`).\n */\nexport function useDocumentLayoutComponent(): ComponentType<\n  Omit<DocumentLayoutProps, 'renderDefault'>\n> {\n  return useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: DocumentLayout,\n  })\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {useHistoryStore, useTimelineSelector, useTimelineStore} from 'sanity'\n\nexport const useDocumentLastRev = (documentId: string, documentType: string) => {\n  const historyStore = useHistoryStore()\n  const [lastRevisionDocument, setLastRevisionDocument] = useState<SanityDocument | null>(null)\n  const [loading, setLoading] = useState(false)\n\n  // Get the timeline store to access lastNonDeletedRevId\n  // needs to be done this way because otherwise the revision id will not be the most updated\n  // in case if you edit the document in between deletes, for example\n  const timelineStore = useTimelineStore({\n    documentId,\n    documentType,\n  })\n\n  // Get the lastNonDeletedRevId from the timeline store\n  const lastNonDeletedRevId = useTimelineSelector(\n    timelineStore,\n    (state) => state.lastNonDeletedRevId,\n  )\n\n  useEffect(() => {\n    if (lastNonDeletedRevId && documentId) {\n      setLoading(true)\n      historyStore\n        .getDocumentAtRevision(documentId, lastNonDeletedRevId)\n        .then((document) => {\n          setLastRevisionDocument(document || null)\n          setLoading(false)\n        })\n        .catch(() => {\n          setLastRevisionDocument(null)\n          setLoading(false)\n        })\n    } else {\n      setLastRevisionDocument(null)\n      setLoading(false)\n    }\n  }, [documentId, lastNonDeletedRevId, historyStore])\n\n  return {lastRevisionDocument, loading}\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/**\n * @internal\n */\nexport const DocumentURLCopied = defineEvent({\n  name: 'DocumentURLCopied',\n  version: 1,\n  description: 'User copied document URL to clipboard',\n})\n\n/**\n * @internal\n */\nexport const InlineChangesSwitchedOn = defineEvent({\n  name: 'InlineChangesSwitchedOn',\n  version: 1,\n  description: 'User switched on display of inline changes',\n})\n\n/**\n * @internal\n */\nexport const InlineChangesSwitchedOff = defineEvent({\n  name: 'InlineChangesSwitchedOff',\n  version: 1,\n  description: 'User switched off display of inline changes',\n})\n","import {type Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions,\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`,\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n","import {useMemo} from 'react'\nimport {useInitialValue, useTemplates, useUnique} from 'sanity'\n\nimport {type PaneRouterContextValue, usePaneRouter} from '../../components'\nimport {type DocumentPaneNode} from '../../types'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\n\nexport const useDocumentPaneInitialValue = ({\n  paneOptions,\n  documentType,\n  documentId,\n  params,\n}: {\n  paneOptions: DocumentPaneNode['options']\n  documentType: string\n  documentId: string\n  params: NonNullable<PaneRouterContextValue['params']>\n}) => {\n  const templates = useTemplates()\n  const paneRouter = usePaneRouter()\n  const panePayload = useUnique(paneRouter.payload)\n\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: params.template,\n      }),\n    [documentType, paneOptions, params.template, panePayload, templates],\n  )\n\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n    version: params.version,\n  })\n\n  const initialValue = useUnique(initialValueRaw)\n  return initialValue\n}\n","import {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {type DocumentInspector, useSource} from 'sanity'\n\nimport {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME, INSPECT_ACTION_PREFIX} from './constants'\n\nexport function useDocumentPaneInspector({\n  documentId,\n  documentType,\n  params,\n  setParams,\n}: {\n  params: NonNullable<PaneRouterContextValue['params']>\n  documentId: string\n  documentType: string\n  setParams: (params: Record<string, string | undefined>) => void\n}) {\n  const {features} = useStructureTool()\n  const source = useSource()\n  const inspectorsResolver = source.document.inspectors\n\n  const inspectors: DocumentInspector[] = useMemo(\n    () => inspectorsResolver({documentId, documentType}),\n    [documentId, documentType, inspectorsResolver],\n  )\n\n  const [inspectorName, setInspectorName] = useState<string | null>(() => params.inspect || null)\n\n  // Handle inspector name changes from URL\n  const inspectParamRef = useRef<string | undefined>(params.inspect)\n  useEffect(() => {\n    if (inspectParamRef.current !== params.inspect) {\n      inspectParamRef.current = params.inspect\n      setInspectorName(params.inspect || null)\n    }\n  }, [params.inspect])\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspectorName),\n    [inspectors, inspectorName],\n  )\n  const historyInspector = useMemo(\n    () => inspectors.find((i) => i.name === HISTORY_INSPECTOR_NAME),\n    [inspectors],\n  )\n\n  const changesOpen = currentInspector?.name === HISTORY_INSPECTOR_NAME\n\n  const closeInspector = useCallback(\n    (closeInspectorName?: string) => {\n      const inspector = closeInspectorName && inspectors.find((i) => i.name === closeInspectorName)\n\n      if (closeInspectorName && !inspector) {\n        console.warn(`No inspector named \"${closeInspectorName}\"`)\n        return\n      }\n\n      if (!currentInspector) {\n        return\n      }\n\n      if (inspector) {\n        const result = inspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n\n        return\n      }\n\n      if (currentInspector) {\n        const result = currentInspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n      }\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n\n  const openInspector = useCallback(\n    (nextInspectorName: string, paneParams?: Record<string, string>) => {\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (!nextInspector) {\n        console.warn(`No inspector named \"${nextInspectorName}\"`)\n        return\n      }\n\n      // if the inspector is already open, only update params\n      if (currentInspector?.name === nextInspector.name) {\n        setParams({...params, ...paneParams, inspect: nextInspector.name})\n        return\n      }\n\n      let currentParams = params\n\n      if (currentInspector) {\n        const closeResult = nextInspector.onClose?.({params: currentParams}) ?? {\n          params: currentParams,\n        }\n\n        currentParams = closeResult.params\n      }\n\n      const result = nextInspector.onOpen?.({params: currentParams}) ?? {params: currentParams}\n\n      setInspectorName(nextInspector.name)\n      inspectParamRef.current = nextInspector.name\n\n      setParams({...result.params, ...paneParams, inspect: nextInspector.name})\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n  const handleHistoryClose = useCallback(() => {\n    if (historyInspector) {\n      closeInspector(historyInspector.name)\n    }\n  }, [closeInspector, historyInspector])\n\n  const handleHistoryOpen = useCallback(() => {\n    if (!features.reviewChanges) {\n      return\n    }\n\n    if (historyInspector) {\n      openInspector(historyInspector.name, {changesInspectorTab: 'review'})\n    }\n  }, [features.reviewChanges, openInspector, historyInspector])\n\n  const inspectOpen = params.inspect === 'on'\n\n  const toggleLegacyInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        setParams({...params, inspect: 'on'})\n      } else {\n        setParams({...params, inspect: undefined})\n      }\n    },\n    [inspectOpen, params, setParams],\n  )\n\n  const handleLegacyInspectClose = useCallback(\n    () => toggleLegacyInspect(false),\n    [toggleLegacyInspect],\n  )\n\n  const handleInspectorAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'inspect') {\n        toggleLegacyInspect(true)\n        return true\n      }\n\n      if (typeof item.action !== 'string') return false\n      const nextInspectorName = item.action.slice(INSPECT_ACTION_PREFIX.length)\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (nextInspector) {\n        if (nextInspector.name === inspectorName) {\n          closeInspector(nextInspector.name)\n        } else {\n          openInspector(nextInspector.name)\n        }\n        return true\n      }\n      return false\n    },\n    [closeInspector, inspectorName, inspectors, openInspector, toggleLegacyInspect],\n  )\n\n  return {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    // TODO: Deprecate this legacy inspect toggle it's used to render the <InspectDialog /> component\n    handleLegacyInspectClose,\n    inspectOpen,\n  }\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {BehaviorSubject, from, of} from 'rxjs'\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators'\nimport {isRecord, useSource} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const {resolveProductionUrl} = useSource().document\n  const subject = useMemo(\n    () => new BehaviorSubject<Partial<SanityDocument> | undefined>(undefined),\n    [],\n  )\n\n  useEffect(() => {\n    subject.next(value)\n  }, [subject, value])\n\n  const resolvedUrlObservable = useMemo(() => {\n    return subject.asObservable().pipe(\n      // this so that the preview URL isn't fetched on every keystroke\n      distinctUntilChanged(),\n      debounceTime(500),\n      switchMap((document) =>\n        isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined),\n      ),\n      distinctUntilChanged(),\n      catchError((err) => {\n        const message =\n          isRecord(err) && typeof err.message === 'string' ? err.message : 'Unknown error'\n        throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n      }),\n    )\n  }, [resolveProductionUrl, subject])\n\n  return useObservable(resolvedUrlObservable)\n}\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {type ObjectSchemaType, type SanityDocument, type SanityDocumentLike} from '@sanity/types'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionsContext,\n  type DocumentActionsVersionType,\n  type DocumentFieldAction,\n  type EditStateFor,\n  EMPTY_ARRAY,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  isCardinalityOneRelease,\n  isGoingToUnpublish,\n  isPerspectiveWriteable,\n  isVersionId,\n  type PartialContext,\n  selectUpstreamVersion,\n  useActiveReleases,\n  useCopyPaste,\n  useDocumentForm,\n  useDocumentIdStack,\n  usePerspective,\n  useSchema,\n  useSource,\n  useStudioUrl,\n  useTranslation,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {DocumentPaneContext} from 'sanity/_singletons'\nimport {useRouter} from 'sanity/router'\n\nimport {usePaneRouter} from '../../components'\nimport {useDiffViewRouter} from '../../diffView/hooks/useDiffViewRouter'\nimport {useDocumentLastRev} from '../../hooks/useDocumentLastRev'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type PaneMenuItem} from '../../types'\nimport {DocumentURLCopied, InlineChangesSwitchedOff, InlineChangesSwitchedOn} from './__telemetry__'\nimport {DEFAULT_MENU_ITEM_GROUPS, EMPTY_PARAMS, INSPECT_ACTION_PREFIX} from './constants'\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\nimport {\n  type DocumentPaneProviderProps as DocumentPaneProviderWrapperProps,\n  type HistoryStoreProps,\n} from './types'\nimport {useDocumentPaneInitialValue} from './useDocumentPaneInitialValue'\nimport {useDocumentPaneInspector} from './useDocumentPaneInspector'\nimport {usePreviewUrl} from './usePreviewUrl'\n\ninterface DocumentPaneProviderProps extends DocumentPaneProviderWrapperProps {\n  historyStore: HistoryStoreProps\n}\n\n/**\n * @internal\n */\n// eslint-disable-next-line max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey, onFocusPath, forcedVersion, historyStore} = props\n  const {\n    store: timelineStore,\n    error: timelineError,\n    ready: timelineReady,\n    revisionDocument,\n    onOlderRevision,\n    sinceDocument,\n    isPristine,\n    revisionId,\n    lastNonDeletedRevId,\n  } = historyStore\n\n  const schema = useSchema()\n  const {setDocumentMeta} = useCopyPaste()\n  const {\n    document: {\n      actions: documentActions,\n      badges: documentBadges,\n      unstable_fieldActions: fieldActionsResolver,\n      unstable_languageFilter: languageFilterResolver,\n      drafts: {enabled: draftsEnabled},\n    },\n  } = useSource()\n  const telemetry = useTelemetry()\n  const router = useRouter()\n  const paneRouter = usePaneRouter()\n  const setPaneParams = paneRouter.setParams\n  const {push: pushToast} = useToast()\n  const {\n    options,\n    menuItemGroups = DEFAULT_MENU_ITEM_GROUPS,\n    title = null,\n    views: viewsProp = [],\n  } = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const params = useUnique(paneRouter.params) || EMPTY_PARAMS\n  const {buildStudioUrl} = useStudioUrl()\n\n  const perspective = usePerspective()\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const {selectedReleaseId, selectedPerspectiveName} = useMemo(() => {\n    // TODO: COREL - Remove this after updating sanity-assist to use <PerspectiveProvider>\n    if (forcedVersion) {\n      return forcedVersion\n    }\n\n    return {\n      selectedPerspectiveName: perspective.selectedPerspectiveName,\n      selectedReleaseId: perspective.selectedReleaseId,\n    }\n  }, [forcedVersion, perspective.selectedPerspectiveName, perspective.selectedReleaseId])\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const initialValue = useDocumentPaneInitialValue({\n    paneOptions,\n    documentId,\n    documentType,\n    params,\n  })\n\n  const isInitialValueLoading = initialValue.loading\n  const {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    inspectOpen,\n    handleLegacyInspectClose,\n  } = useDocumentPaneInspector({documentId, documentType, params, setParams: setPaneParams})\n\n  const [isDeleting, setIsDeleting] = useState(false)\n  const {lastRevisionDocument} = useDocumentLastRev(documentId, documentType)\n\n  /**\n   * Determine if the current document is deleted.\n   *\n   * When the timeline is available – we check for the absence of an editable document pair\n   * (both draft + published versions) as well as a non 'pristine' timeline (i.e. a timeline that consists\n   * of at least one chunk).\n   *\n   * In the _very rare_ case where the timeline cannot be loaded – we skip this check and always assume\n   * the document is NOT deleted. Since we can't accurately determine document deleted status without history,\n   * skipping this check means that in these cases, users will at least be able to create new documents\n   * without them being incorrectly marked as deleted.\n   */\n  const getIsDeleted = useCallback(\n    (editState: EditStateFor) => {\n      if (!timelineReady) return false\n      return (\n        Boolean(!editState?.draft && !editState?.published && !editState?.version) && !isPristine\n      )\n    },\n    [timelineReady, isPristine],\n  )\n\n  const getComparisonValue = useCallback(\n    (upstreamEditState: EditStateFor) => {\n      const upstream = selectUpstreamVersion(upstreamEditState)\n      if (changesOpen) {\n        return sinceDocument || upstream\n      }\n      return upstream || null\n    },\n    [changesOpen, sinceDocument],\n  )\n\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n\n  const getIsReadOnly = useCallback(\n    (editState: EditStateFor): boolean => {\n      const isDeleted = getIsDeleted(editState)\n      const seeingHistoryDocument = Boolean(params.rev)\n      return (\n        seeingHistoryDocument ||\n        isDeleting ||\n        isDeleted ||\n        !isPerspectiveWriteable({\n          selectedPerspective: perspective.selectedPerspective,\n          isDraftModelEnabled,\n          schemaType,\n        }).result\n      )\n    },\n    [\n      getIsDeleted,\n      isDeleting,\n      isDraftModelEnabled,\n      params.rev,\n      perspective.selectedPerspective,\n      schemaType,\n    ],\n  )\n\n  const getDisplayed = useCallback(\n    (value: SanityDocumentLike) => {\n      if (onOlderRevision) {\n        return revisionDocument || {_id: value._id, _type: value._type}\n      }\n\n      // If the document is deleted (no draft, published, or version), return the last revision\n      const isDeleted = !value._createdAt && !value._updatedAt\n      if (isDeleted && lastNonDeletedRevId) {\n        // Return the fetched last revision document if available\n        if (lastRevisionDocument) {\n          return lastRevisionDocument\n        }\n      }\n\n      return value\n    },\n    [onOlderRevision, revisionDocument, lastNonDeletedRevId, lastRevisionDocument],\n  )\n\n  const {\n    editState,\n    upstreamEditState,\n    hasUpstreamVersion,\n    connectionState,\n    focusPath,\n    onChange,\n    validation,\n    ready: formReady,\n    value,\n    formState,\n    permissions,\n    onPathOpen,\n    isPermissionsLoading,\n    formStateRef,\n    onProgrammaticFocus,\n\n    collapsedFieldSets,\n    collapsedPaths,\n    onBlur,\n    onFocus,\n    onSetActiveFieldGroup,\n    onSetCollapsedPath,\n    onSetCollapsedFieldSet,\n    openPath,\n  } = useDocumentForm({\n    changesOpen,\n    documentType,\n    documentId,\n    initialValue: initialValue,\n    comparisonValue: getComparisonValue,\n    releaseId: selectedReleaseId,\n    selectedPerspectiveName,\n    initialFocusPath: params.path ? pathFromString(params.path) : EMPTY_ARRAY,\n    readOnly: getIsReadOnly,\n    onFocusPath,\n    getFormDocumentValue: getDisplayed,\n    displayInlineChanges: router.stickyParams.displayInlineChanges === 'true',\n  })\n\n  const {data: releases = []} = useActiveReleases()\n\n  const getDocumentVersionType = useCallback(() => {\n    let version: DocumentActionsVersionType\n    switch (true) {\n      case Boolean(params.rev):\n        version = 'revision'\n        break\n      case selectedReleaseId && isVersionId(value._id): {\n        // Check if this is a scheduled draft (cardinality one release)\n        const releaseDocument = releases.find(\n          (r) => getReleaseIdFromReleaseDocumentId(r._id) === selectedReleaseId,\n        )\n\n        if (releaseDocument && isCardinalityOneRelease(releaseDocument)) {\n          version = 'scheduled-draft'\n        } else {\n          version = 'version'\n        }\n        break\n      }\n      case selectedPerspectiveName === 'published':\n        version = 'published'\n        break\n      case draftsEnabled:\n        version = 'draft'\n        break\n      default:\n        version = 'published'\n    }\n\n    return version\n  }, [params.rev, selectedReleaseId, value._id, selectedPerspectiveName, draftsEnabled, releases])\n\n  const actionsPerspective = useMemo(() => getDocumentVersionType(), [getDocumentVersionType])\n\n  const documentActionsProps: PartialContext<DocumentActionsContext> = useMemo(\n    () => ({\n      schemaType: documentType,\n      documentId,\n      versionType: actionsPerspective,\n      releaseId: selectedReleaseId,\n    }),\n    [documentType, documentId, actionsPerspective, selectedReleaseId],\n  )\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions(documentActionsProps),\n    [documentActions, documentActionsProps],\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType],\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver],\n  )\n\n  const views = useUnique(viewsProp)\n\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const fieldActions: DocumentFieldAction[] = useMemo(\n    () => (schemaType ? fieldActionsResolver({documentId, documentType, schemaType}) : []),\n    [documentId, documentType, fieldActionsResolver, schemaType],\n  )\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready = formReady && (!params.rev || timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => getDisplayed(value),\n    [getDisplayed, value],\n  )\n\n  const {previousId} = useDocumentIdStack({\n    strict: true,\n    displayed,\n    documentId,\n    editState,\n  })\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      setPaneParams({\n        ...params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [params, setPaneParams],\n  )\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const toggleInlineChanges = useCallback(() => {\n    const nextState = router.stickyParams.displayInlineChanges !== 'true'\n    telemetry.log(nextState ? InlineChangesSwitchedOn : InlineChangesSwitchedOff)\n\n    router.navigate({\n      stickyParams: {\n        displayInlineChanges: String(nextState),\n      },\n    })\n  }, [router, telemetry])\n\n  const handleMenuAction = useCallback(\n    async (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'copy-document-url' && navigator) {\n        telemetry.log(DocumentURLCopied)\n        // Chose to copy the user's current URL instead of\n        // the document's edit intent link because\n        // of bugs when resolving a document that has\n        // multiple access paths within Structure\n        const copyUrl = buildStudioUrl({\n          coreUi: (url) => `${url}/intent/edit/id=${documentId};type=${documentType}`,\n        })\n        await navigator.clipboard.writeText(copyUrl)\n        pushToast({\n          id: 'copy-document-url',\n          status: 'info',\n          title: t('panes.document-operation-results.operation-success_copy-url'),\n        })\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      if (\n        item.action === 'inspect' ||\n        (typeof item.action === 'string' && item.action.startsWith(INSPECT_ACTION_PREFIX))\n      ) {\n        handleInspectorAction(item)\n      }\n\n      if (item.action === 'compareVersions' && typeof previousId !== 'undefined') {\n        diffViewRouter.navigateDiffView({\n          mode: 'version',\n          previousDocument: {\n            type: documentType,\n            id: previousId,\n          },\n          nextDocument: {\n            type: documentType,\n            id: value._id,\n          },\n        })\n        return true\n      }\n\n      if (item.action === 'toggleInlineChanges') {\n        toggleInlineChanges()\n        return true\n      }\n\n      return false\n    },\n    [\n      previewUrl,\n      previousId,\n      telemetry,\n      buildStudioUrl,\n      pushToast,\n      t,\n      documentId,\n      documentType,\n      handleHistoryOpen,\n      handleInspectorAction,\n      diffViewRouter,\n      value._id,\n      toggleInlineChanges,\n    ],\n  )\n\n  useEffect(() => {\n    setDocumentMeta({\n      documentId,\n      documentType,\n      schemaType: schemaType!,\n      onChange,\n    })\n  }, [documentId, documentType, schemaType, onChange, setDocumentMeta])\n\n  const compareValue = useMemo(\n    () => getComparisonValue(upstreamEditState),\n    [upstreamEditState, getComparisonValue],\n  )\n\n  const isDeleted = useMemo(() => getIsDeleted(editState), [editState, getIsDeleted])\n  const revisionNotFound = onOlderRevision && !revisionDocument\n\n  const currentDisplayed = useMemo(() => {\n    if (editState.version && isGoingToUnpublish(editState.version)) {\n      return editState.published\n    }\n    return displayed\n  }, [editState.version, editState.published, displayed])\n\n  const documentPane: DocumentPaneContextValue = useMemo(\n    () =>\n      ({\n        actions,\n        activeViewId,\n        badges,\n        changesOpen,\n        closeInspector,\n        collapsedFieldSets,\n        collapsedPaths,\n        compareValue,\n        connectionState,\n        displayed: currentDisplayed,\n        documentId,\n        documentIdRaw,\n        documentType,\n        editState,\n        fieldActions,\n        focusPath,\n        inspector: currentInspector || null,\n        inspectors,\n        onBlur,\n        onChange,\n        onFocus,\n        onPathOpen,\n        onHistoryClose: handleHistoryClose,\n        onHistoryOpen: handleHistoryOpen,\n        onInspectClose: handleLegacyInspectClose,\n        onMenuAction: handleMenuAction,\n        onPaneClose: handlePaneClose,\n        onPaneSplit: handlePaneSplit,\n        onSetActiveFieldGroup,\n        onSetCollapsedPath,\n        onSetCollapsedFieldSet,\n        openInspector,\n        openPath,\n        index,\n        inspectOpen,\n        validation,\n        menuItemGroups: menuItemGroups || [],\n        paneKey,\n        previewUrl,\n        ready,\n        schemaType: schemaType!,\n        hasUpstreamVersion,\n        isPermissionsLoading,\n        isInitialValueLoading,\n        permissions,\n        setTimelineRange,\n        setIsDeleting,\n        isDeleting,\n        isDeleted,\n        timelineError,\n        timelineStore,\n        title,\n        value,\n        selectedReleaseId,\n        views,\n        formState,\n        unstable_languageFilter: languageFilter,\n        revisionId,\n        revisionNotFound,\n        lastNonDeletedRevId,\n        lastRevisionDocument,\n      }) satisfies DocumentPaneContextValue,\n    [\n      actions,\n      activeViewId,\n      badges,\n      changesOpen,\n      closeInspector,\n      collapsedFieldSets,\n      collapsedPaths,\n      compareValue,\n      connectionState,\n      currentDisplayed,\n      documentId,\n      documentIdRaw,\n      documentType,\n      editState,\n      fieldActions,\n      focusPath,\n      currentInspector,\n      inspectors,\n      onBlur,\n      onChange,\n      onFocus,\n      onPathOpen,\n      handleHistoryClose,\n      handleHistoryOpen,\n      handleLegacyInspectClose,\n      handleMenuAction,\n      handlePaneClose,\n      handlePaneSplit,\n      onSetActiveFieldGroup,\n      onSetCollapsedPath,\n      onSetCollapsedFieldSet,\n      openInspector,\n      openPath,\n      index,\n      inspectOpen,\n      validation,\n      menuItemGroups,\n      paneKey,\n      previewUrl,\n      ready,\n      schemaType,\n      hasUpstreamVersion,\n      isPermissionsLoading,\n      isInitialValueLoading,\n      permissions,\n      setTimelineRange,\n      isDeleting,\n      isDeleted,\n      timelineError,\n      timelineStore,\n      title,\n      value,\n      selectedReleaseId,\n      views,\n      formState,\n      languageFilter,\n      revisionId,\n      revisionNotFound,\n      lastNonDeletedRevId,\n      lastRevisionDocument,\n    ],\n  )\n\n  const pathRef = useRef<string | undefined>(undefined)\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n\n      // trigger a focus when `params.path` changes\n      if (path !== pathRef.current) {\n        const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n        onProgrammaticFocus(pathFromUrl)\n      }\n\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n    }\n    pathRef.current = params.path\n\n    return undefined\n  }, [formStateRef, onProgrammaticFocus, paneRouter, params, ready])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>{children}</DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'Memo(DocumentPaneProvider)'\n","import {type ObjectSchemaType} from '@sanity/types'\nimport {useMemo} from 'react'\nimport {\n  EMPTY_ARRAY,\n  EventsProvider,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getVersionId,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  PerspectiveProvider,\n  useArchivedReleases,\n  useEditState,\n  useEventsStore,\n  usePerspective,\n  useSchema,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentEventsPane = (props: DocumentPaneProviderProps) => {\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const options = usePaneOptions(props.pane.options, params)\n  const schema = useSchema()\n  const documentType = options.type\n  const schemaType = schema.get(options.type) as ObjectSchemaType | undefined\n  const liveEdit = Boolean(schemaType?.liveEdit)\n\n  const {selectedPerspectiveName, selectedReleaseId, selectedPerspective} = usePerspective()\n  const {data: archivedReleases} = useArchivedReleases()\n  const editState = useEditState(\n    getPublishedId(options.id),\n    documentType,\n    'default',\n    selectedReleaseId,\n  )\n\n  const showingPublishedOnDraft = liveEdit && selectedPerspective === 'drafts' && !editState?.draft\n  const {rev, since} = params\n  const historyVersion = params.historyVersion\n\n  const documentId = useMemo(() => {\n    if (showingPublishedOnDraft) {\n      return getPublishedId(options.id)\n    }\n    if (\n      historyVersion &&\n      archivedReleases.some(\n        (release) => getReleaseIdFromReleaseDocumentId(release._id) === historyVersion,\n      )\n    ) {\n      // Check if we have a release that matches with this historyVersion\n      return getVersionId(options.id, historyVersion)\n    }\n    if (typeof selectedPerspectiveName === 'undefined') {\n      return getDraftId(options.id)\n    }\n    if (selectedPerspectiveName === 'published') {\n      return getPublishedId(options.id)\n    }\n    if (selectedReleaseId) {\n      return getVersionId(options.id, selectedPerspectiveName)\n    }\n    return options.id\n  }, [\n    archivedReleases,\n    historyVersion,\n    selectedPerspectiveName,\n    options.id,\n    showingPublishedOnDraft,\n    selectedReleaseId,\n  ])\n\n  const eventsStore = useEventsStore({documentId, documentType: options.type, rev, since})\n\n  const historyStoreProps = useMemo(\n    () => ({\n      error: eventsStore.error,\n      revisionId: eventsStore.revision?.revisionId || null,\n      onOlderRevision: Boolean(rev && !eventsStore.revision?.loading),\n      revisionDocument: eventsStore.revision?.document || null,\n      sinceDocument: eventsStore.sinceRevision?.document || null,\n      ready: !eventsStore.loading,\n      isPristine: Boolean(eventsStore.events.length === 0),\n      lastNonDeletedRevId:\n        eventsStore.events.find(\n          (e) => !isDeleteDocumentGroupEvent(e) && !isDeleteDocumentVersionEvent(e),\n        )?.id || null,\n    }),\n    [eventsStore, rev],\n  )\n\n  const value = useMemo(() => eventsStore, [eventsStore])\n\n  return (\n    <EventsProvider value={value}>\n      {historyVersion ? (\n        <PerspectiveProvider\n          selectedPerspectiveName={historyVersion}\n          excludedPerspectives={EMPTY_ARRAY}\n        >\n          <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n        </PerspectiveProvider>\n      ) : (\n        <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n      )}\n    </EventsProvider>\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useMemo, useState} from 'react'\nimport {getPublishedId, useTimelineSelector, useTimelineStore} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentPaneWithLegacyTimelineStore = (props: DocumentPaneProviderProps) => {\n  const {pane} = props\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n\n  const params = paneRouter.params || EMPTY_PARAMS\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n\n  const store = useTimelineStore({\n    documentId: getPublishedId(options.id),\n    documentType: options.type,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  const onOlderRevision = useTimelineSelector(store, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(store, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(store, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(store, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(store, (state) => state.timelineReady)\n  const isPristine = useTimelineSelector(store, (state) => state.isPristine)\n  const lastNonDeletedRevId = useTimelineSelector(store, (state) => state.lastNonDeletedRevId)\n\n  const historyStoreProps = useMemo(\n    () => ({\n      store,\n      error: timelineError,\n      revisionId: revTime?.id || null,\n      onOlderRevision: onOlderRevision,\n      revisionDocument: timelineDisplayed as SanityDocument | null,\n      sinceDocument: sinceAttributes as SanityDocument | null,\n      ready: timelineReady,\n      isPristine: Boolean(isPristine),\n      lastNonDeletedRevId,\n    }),\n    [\n      store,\n      timelineError,\n      revTime?.id,\n      onOlderRevision,\n      timelineDisplayed,\n      sinceAttributes,\n      timelineReady,\n      isPristine,\n      lastNonDeletedRevId,\n    ],\n  )\n  return <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n}\n","import {type ReactNode, useContext, useEffect, useMemo} from 'react'\nimport {\n  getVersionFromId,\n  isCardinalityOnePerspective,\n  LATEST,\n  type PerspectiveContextValue,\n  PUBLISHED,\n  useDocumentVersions,\n  useSetPerspective,\n  useWorkspace,\n} from 'sanity'\nimport {PerspectiveContext, RawPerspectiveContext} from 'sanity/_singletons'\n\n// Clears URL for cardinality one releases when document doesn't exist in selected release\nconst DocumentPerspectiveResetHandler = ({documentId}: {documentId: string}) => {\n  const rawContext = useContext(RawPerspectiveContext)\n  const {data: documentVersions, loading: documentVersionsLoading} = useDocumentVersions({\n    documentId,\n  })\n  const setPerspective = useSetPerspective()\n\n  useEffect(() => {\n    if (documentVersionsLoading || !rawContext) {\n      return\n    }\n\n    if (!isCardinalityOnePerspective(rawContext.selectedPerspective)) {\n      return\n    }\n\n    if (!documentVersions?.length) {\n      setPerspective(undefined)\n      return\n    }\n\n    const releasesIds = documentVersions.map((id) => getVersionFromId(id))\n    const documentExistsInRelease = releasesIds.includes(rawContext.selectedReleaseId!)\n\n    if (!documentExistsInRelease) {\n      setPerspective(undefined)\n    }\n  }, [documentId, rawContext, documentVersions, documentVersionsLoading, setPerspective])\n\n  return null\n}\n\n/**\n * @internal\n * Exposes cardinality one releases as selectedPerspective through PerspectiveContext\n */\nexport function DocumentPerspectiveProvider({\n  children,\n  documentId,\n}: {\n  children: ReactNode\n  documentId: string\n}) {\n  const rawContext = useContext(RawPerspectiveContext)\n  const mappedContext = useContext(PerspectiveContext)\n  const {data: documentVersions, loading: documentVersionsLoading} = useDocumentVersions({\n    documentId,\n  })\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n  const defaultPerspective = isDraftModelEnabled ? LATEST : PUBLISHED\n\n  const value = useMemo<PerspectiveContextValue | null>(() => {\n    if (!rawContext || !mappedContext) return mappedContext\n\n    if (!isCardinalityOnePerspective(rawContext.selectedPerspective)) {\n      return mappedContext\n    }\n\n    // Default to drafts while loading or if no versions exist\n    if (documentVersionsLoading || !documentVersions?.length) {\n      return {\n        ...mappedContext,\n        selectedPerspective: defaultPerspective,\n        selectedPerspectiveName: undefined,\n        selectedReleaseId: undefined,\n      }\n    }\n\n    const releasesIds = documentVersions.map((id) => getVersionFromId(id))\n    const documentExistsInRelease = releasesIds.includes(rawContext.selectedReleaseId!)\n\n    // use drafts if document doesn't exist in the selected cardinality one release\n    if (!documentExistsInRelease) {\n      return {\n        ...mappedContext,\n        selectedPerspective: defaultPerspective,\n        selectedPerspectiveName: undefined,\n        selectedReleaseId: undefined,\n      }\n    }\n\n    // Use raw unmapped values when document exists in cardinality one release\n    return {\n      ...mappedContext,\n      selectedPerspective: rawContext.selectedPerspective,\n      selectedPerspectiveName: rawContext.selectedPerspectiveName,\n      selectedReleaseId: rawContext.selectedReleaseId,\n    }\n  }, [rawContext, mappedContext, documentVersionsLoading, documentVersions, defaultPerspective])\n\n  if (!value) {\n    return <>{children}</>\n  }\n\n  return (\n    <PerspectiveContext.Provider value={value}>\n      {children}\n      <DocumentPerspectiveResetHandler documentId={documentId} />\n    </PerspectiveContext.Provider>\n  )\n}\n","import {memo} from 'react'\nimport {getPublishedId, useSource} from 'sanity'\n\nimport {DocumentEventsPane} from './DocumentEventsPane'\nimport {DocumentPaneWithLegacyTimelineStore} from './DocumentPaneLegacyTimeline'\nimport {DocumentPerspectiveProvider} from './DocumentPerspectiveProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\n/**\n * @internal\n */\nexport const DocumentPaneProviderWrapper = memo((props: DocumentPaneProviderProps) => {\n  const source = useSource()\n  const documentId = getPublishedId(props.itemId)\n\n  return (\n    <DocumentPerspectiveProvider documentId={documentId}>\n      {source.beta?.eventsAPI?.documents ? (\n        <DocumentEventsPane {...props} />\n      ) : (\n        <DocumentPaneWithLegacyTimelineStore {...props} />\n      )}\n    </DocumentPerspectiveProvider>\n  )\n})\nDocumentPaneProviderWrapper.displayName = 'Memo(DocumentPaneProviderWrapper)'\n","import {useEffect, useRef} from 'react'\nimport {usePerspective} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\n\n/**\n * This hooks takes care of resetting the history related params when the perspective changes.\n * It needs to be placed in a stable component, like the `DocumentPane`, which won't be unmounted when the perspective changes.\n */\nexport function useResetHistoryParams() {\n  const {params = EMPTY_PARAMS, setParams} = usePaneRouter()\n\n  const {selectedPerspectiveName} = usePerspective()\n  const isMounted = useRef(false)\n\n  const updateHistoryParams = useEffectEvent((_perspective?: string) => {\n    // Check if any of the history related params are set, and reset them, don't unnecessarily update the params\n    const PARAMS_TO_UPDATE = ['since', 'historyVersion', 'rev', 'preserveRev']\n    const shouldUpdateParams = PARAMS_TO_UPDATE.some((param) => params[param])\n    if (!shouldUpdateParams) return\n\n    setParams({\n      ...params,\n      // Reset the history related params when the perspective changes, as they don't make sense\n      // in the context of the new perspective - preserveRev is used when setting draft revision.\n      rev: params.preserveRev === 'true' ? params.rev : undefined,\n      preserveRev: undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  })\n  useEffect(() => {\n    // Skip the first run to avoid resetting the params on initial load\n    if (isMounted.current) {\n      updateHistoryParams(selectedPerspectiveName)\n    }\n  }, [selectedPerspectiveName])\n\n  useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n}\n","import {type Path} from '@sanity/types'\nimport {Stack, Text} from '@sanity/ui'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {memo, useMemo} from 'react'\nimport {\n  CopyPasteProvider,\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  Translate,\n  useDocumentType,\n  usePerspective,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {DiffViewDocumentLayout} from '../../diffView/plugin/DiffViewDocumentLayout'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type DocumentPaneNode} from '../../types'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {CommentsWrapper} from './comments'\nimport {useDocumentLayoutComponent} from './document-layout'\nimport {DocumentPaneProviderWrapper} from './DocumentPaneProviderWrapper'\nimport {type DocumentPaneProviderProps} from './types'\nimport {useResetHistoryParams} from './useResetHistoryParams'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\n/**\n * @internal\n */\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <CopyPasteProvider>\n        <DocumentPaneInner {...props} />\n      </CopyPasteProvider>\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const {selectedPerspectiveName} = usePerspective()\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n  useResetHistoryParams()\n  const DocumentLayout = useDocumentLayoutComponent()\n\n  // The templates that should be creatable from inside this document pane.\n  // For example, from the \"Create new\" menu in reference inputs.\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'document',\n      documentId: options.id,\n      schemaType: options.type,\n    })\n  }, [options.id, options.type, resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n                ? 'selected'\n                : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (options.type === '*' && !isLoaded) {\n    return (\n      <LoadingPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.loading')}\n      />\n    )\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.title')}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-not-found.text\"\n              values={{id: options.id}}\n              components={{Code: ({children}) => <code>{children}</code>}}\n            />\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProviderWrapper\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={`${documentType}-${options.id}-${selectedPerspectiveName || ''}`}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink}\n        onEditReference={handleEditReference}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <DiffViewDocumentLayout documentId={options.id} documentType={options.type}>\n          <CommentsWrapper documentId={options.id} documentType={options.type}>\n            <DocumentLayout documentId={options.id} documentType={options.type} />\n          </CommentsWrapper>\n        </DiffViewDocumentLayout>\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProviderWrapper>\n  )\n}\n\n/**\n * @internal\n */\nexport function usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {},\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string,\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n","import {type ComponentType, type ForwardedRef, forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type BackLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as ComponentType<BackLinkProps>\n","import {type ForwardedRef, forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type ChildLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n","import {type ForwardedRef, forwardRef, type ReactNode, useContext, useMemo} from 'react'\nimport {useUnique} from 'sanity'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {type ForwardedRef, forwardRef} from 'react'\n\nimport {ChildLink} from './ChildLink'\nimport {type ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {omit} from 'lodash'\nimport {type ReactNode, useCallback, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {useRouter, useRouterState} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from '../../types'\nimport {usePaneLayout} from '../pane/usePaneLayout'\nimport {BackLink} from './BackLink'\nimport {ChildLink} from './ChildLink'\nimport {ParameterizedLink} from './ParameterizedLink'\nimport {ReferenceChildLink} from './ReferenceChildLink'\nimport {type PaneRouterContextValue} from './types'\n\nconst emptyArray: never[] = []\n\n/**\n * @internal\n */\nexport function PaneRouterProvider(props: {\n  children: ReactNode\n  flatIndex: number\n  index: number\n  params: Record<string, string | undefined>\n  payload: unknown\n  siblingIndex: number\n}) {\n  const {children, flatIndex, index, params, payload, siblingIndex} = props\n  const {navigate, navigateIntent, resolvePathFromState} = useRouter()\n  const routerState = useRouterState()\n  const {panes, expand} = usePaneLayout()\n  const routerPaneGroups: RouterPaneGroup[] = useMemo(\n    () => (routerState?.panes || emptyArray) as RouterPanes,\n    [routerState?.panes],\n  )\n  const lastPane = useMemo(() => panes?.[panes.length - 2], [panes])\n\n  const groupIndex = index - 1\n\n  const createNextRouterState = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const currentGroup = routerPaneGroups[groupIndex] || []\n      const currentItem = currentGroup[siblingIndex]\n      const nextGroup = modifier(currentGroup, currentItem)\n      const nextPanes = [\n        ...routerPaneGroups.slice(0, groupIndex),\n        nextGroup,\n        ...routerPaneGroups.slice(groupIndex + 1),\n      ]\n      const nextRouterState = {...routerState, panes: nextPanes}\n\n      return nextRouterState\n    },\n    [groupIndex, routerPaneGroups, routerState, siblingIndex],\n  )\n\n  const modifyCurrentGroup = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const nextRouterState = createNextRouterState(modifier)\n      setTimeout(() => navigate(nextRouterState), 0)\n      return nextRouterState\n    },\n    [createNextRouterState, navigate],\n  )\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const nextRouterState = createNextRouterState((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n\n      return resolvePathFromState(nextRouterState)\n    },\n    [createNextRouterState, resolvePathFromState, siblingIndex],\n  )\n\n  const setPayload: PaneRouterContextValue['setPayload'] = useCallback(\n    (nextPayload) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, payload: nextPayload},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex],\n  )\n\n  const setParams: PaneRouterContextValue['setParams'] = useCallback(\n    (nextParams) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex],\n  )\n\n  const handleEditReference: PaneRouterContextValue['handleEditReference'] = useCallback(\n    ({id, parentRefPath, type, template, version}) => {\n      navigate({\n        panes: [\n          ...routerPaneGroups.slice(0, groupIndex + 1),\n          [\n            {\n              id,\n              params: {\n                template: template.id,\n                parentRefPath: pathToString(parentRefPath),\n                type,\n                version,\n              },\n              payload: template.params,\n            },\n          ],\n        ],\n      })\n    },\n    [groupIndex, navigate, routerPaneGroups],\n  )\n\n  const ctx: PaneRouterContextValue = useMemo(\n    () => ({\n      // Zero-based index (position) of pane, visually\n      index: flatIndex,\n\n      // Zero-based index of pane group (within URL structure)\n      groupIndex,\n\n      // Zero-based index of pane within sibling group\n      siblingIndex,\n\n      // Payload of the current pane\n      payload,\n\n      // Params of the current pane\n      params,\n\n      // Whether or not the pane has any siblings (within the same group)\n      hasGroupSiblings: routerPaneGroups[groupIndex]\n        ? routerPaneGroups[groupIndex].length > 1\n        : false,\n\n      // The length of the current group\n      groupLength: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length : 0,\n\n      // Current router state for the \"panes\" property\n      routerPanesState: routerPaneGroups,\n\n      // Curried StateLink that passes the correct state automatically\n      ChildLink,\n\n      // Curried StateLink that pops off the last pane group\n      // Only pass if this is not the first pane\n      BackLink: flatIndex ? BackLink : undefined,\n\n      // A specialized `ChildLink` that takes in the needed props to open a\n      // referenced document to the right\n      ReferenceChildLink,\n\n      // Similar to `ReferenceChildLink` expect without the wrapping component\n      handleEditReference,\n\n      // Curried StateLink that passed the correct state, but merges params/payload\n      ParameterizedLink,\n\n      // Replaces the current pane with a new one\n      replaceCurrent: (opts = {}): void => {\n        modifyCurrentGroup(() => [\n          {id: opts.id || '', payload: opts.payload, params: opts.params || {}},\n        ])\n      },\n\n      // Removes the current pane from the group\n      closeCurrent: (): void => {\n        modifyCurrentGroup((siblings, item) =>\n          siblings.length > 1 ? siblings.filter((sibling) => sibling !== item) : siblings,\n        )\n      },\n\n      // Removes all panes to the right including current\n      closeCurrentAndAfter: (expandLast = true): void => {\n        if (expandLast && lastPane) {\n          expand(lastPane.element)\n        }\n        navigate({\n          panes: routerPaneGroups.slice(0, groupIndex),\n        })\n      },\n\n      // Duplicate the current pane, with optional overrides for payload, parameters\n      duplicateCurrent: (options): void => {\n        modifyCurrentGroup((siblings, item) => {\n          const duplicatedItem = {\n            ...item,\n            payload: options?.payload || item.payload,\n            params: options?.params || item.params,\n          }\n\n          return [\n            ...siblings.slice(0, siblingIndex),\n            duplicatedItem,\n            ...siblings.slice(siblingIndex),\n          ]\n        })\n      },\n\n      // Set the view for the current pane\n      setView: (viewId) => {\n        const restParams = omit(params, 'view')\n        return setParams(viewId ? {...restParams, view: viewId} : restParams)\n      },\n\n      // Set the parameters for the current pane\n      setParams,\n\n      // Set the payload for the current pane\n      setPayload,\n\n      // A function that returns a path with the given parameters\n      createPathWithParams,\n\n      // Proxied navigation to a given intent. Consider just exposing `router` instead?\n      navigateIntent,\n    }),\n    [\n      flatIndex,\n      groupIndex,\n      siblingIndex,\n      payload,\n      params,\n      routerPaneGroups,\n      handleEditReference,\n      setParams,\n      setPayload,\n      createPathWithParams,\n      navigateIntent,\n      modifyCurrentGroup,\n      lastPane,\n      navigate,\n      expand,\n    ],\n  )\n\n  return <PaneRouterContext.Provider value={ctx}>{children}</PaneRouterContext.Provider>\n}\n","import {Box, Text} from '@sanity/ui'\nimport {isRecord, Translate, useTranslation} from 'sanity'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface UnknownPaneProps {\n  isSelected: boolean\n  pane: unknown\n  paneKey: string\n}\n\n/**\n * @internal\n */\nexport function UnknownPane(props: UnknownPaneProps) {\n  const {isSelected, pane, paneKey} = props\n  const type = (isRecord(pane) && pane.type) || null\n  const {t} = useTranslation(structureLocaleNamespace)\n  return (\n    <Pane id={paneKey} selected={isSelected}>\n      <PaneHeader title={t('panes.unknown-pane-type.title')} />\n      <PaneContent>\n        <Box padding={4}>\n          {typeof type === 'string' ? (\n            <Text as=\"p\" muted>\n              <Translate\n                t={t}\n                i18nKey=\"panes.unknown-pane-type.unknown-type.text\"\n                values={{type}}\n              />\n            </Text>\n          ) : (\n            <Text as=\"p\" muted>\n              <Translate t={t} i18nKey=\"panes.unknown-pane-type.missing-type.text\" />\n            </Text>\n          )}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {isEqual} from 'lodash'\nimport {lazy, memo, Suspense} from 'react'\n\nimport {PaneRouterProvider} from '../components/paneRouter'\nimport {type PaneNode} from '../types'\nimport {LoadingPane} from './loading'\nimport {UnknownPane} from './unknown'\n\ninterface StructureToolPaneProps {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  pane: PaneNode\n  paneKey: string\n  params: Record<string, string | undefined> & {perspective?: string}\n  payload: unknown\n  path: string\n  selected: boolean\n  siblingIndex: number\n}\n\n// TODO: audit this creates separate chunks\nconst paneMap = {\n  component: lazy(() => import('./userComponent')),\n  document: lazy(() => import('./document/pane')),\n  documentList: lazy(() => import('./documentList/pane')),\n  list: lazy(() => import('./list')),\n}\n\n/**\n * NOTE: The same pane might appear multiple times (split pane), so use index as tiebreaker\n *\n * @internal\n */\nexport const StructureToolPane = memo(\n  function StructureToolPane(props: StructureToolPaneProps) {\n    const {\n      active,\n      childItemId,\n      groupIndex,\n      index,\n      itemId,\n      pane,\n      paneKey,\n      params,\n      payload,\n      path,\n      selected,\n      siblingIndex,\n    } = props\n\n    const PaneComponent = paneMap[pane.type] || UnknownPane\n\n    return (\n      <PaneRouterProvider\n        flatIndex={index}\n        index={groupIndex}\n        params={params}\n        payload={payload}\n        siblingIndex={siblingIndex}\n      >\n        <Suspense fallback={<LoadingPane paneKey={paneKey} path={path} selected={selected} />}>\n          <PaneComponent\n            childItemId={childItemId || ''}\n            index={index}\n            itemId={itemId}\n            isActive={active}\n            isSelected={selected}\n            paneKey={paneKey}\n            // @ts-expect-error TS doesn't know how to handle this intersection\n            pane={pane}\n          />\n        </Suspense>\n      </PaneRouterProvider>\n    )\n  },\n  (\n    {params: prevParams = {}, payload: prevPayload = null, ...prev},\n    {params: nextParams = {}, payload: nextPayload = null, ...next},\n  ) => {\n    // deeply compare these objects (it's okay, they're small)\n    if (!isEqual(prevParams, nextParams)) return false\n    if (!isEqual(prevPayload, nextPayload)) return false\n\n    const keys = new Set([...Object.keys(prev), ...Object.keys(next)]) as Set<\n      keyof typeof next | keyof typeof prev\n    >\n\n    // then shallow equal the rest\n    for (const key of keys) {\n      if (prev[key] !== next[key]) return false\n    }\n\n    return true\n  },\n)\n","import {type SanityDocumentLike} from '@sanity/types'\nimport {useSchema, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentTitle} from '../panes'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useDocumentTitle()\n\n  if (!schemaType) {\n    return <code>{t('doc-title.unknown-schema-type.text', {schemaType: documentValue._type})}</code>\n  }\n\n  return (\n    <>\n      {title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>{t('doc-title.fallback.text')}</span>\n      )}\n    </>\n  )\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Flex, Inline, rem, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 33px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Box padding={2}>\n      <Inline space={2}>\n        <Text size={1} muted>\n          {t('confirm-delete-dialog.other-reference-count.title', {count: difference})}\n        </Text>\n\n        <Tooltip\n          portal\n          placement=\"top\"\n          content={t('confirm-delete-dialog.other-reference-count.tooltip')}\n        >\n          <Text size={1} muted>\n            <InfoOutlineIcon />\n          </Text>\n        </Tooltip>\n      </Inline>\n    </Box>\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {Flex} from '@sanity/ui'\nimport {type ComponentType, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPresence,\n  DocumentPreviewPresence,\n  type DocumentPreviewStore,\n  DocumentStatus,\n  DocumentStatusIndicator,\n  type GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  useDocumentVersionInfo,\n  usePerspective,\n} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../ui-components'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\n/**\n * Preview component for _documents_ rendered in structure panes.\n *\n * Note that non-document previews are not handled by this component,\n * despite being pane items! Non-document previews bypass this entirely\n * and are rendered by `<SanityDefaultPreview>`.\n */\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n\n  const versionsInfo = useDocumentVersionInfo(value._id)\n\n  const {perspectiveStack} = usePerspective()\n  const previewStateObservable = useMemo(() => {\n    return getPreviewStateObservable(\n      props.documentPreviewStore,\n      schemaType,\n      value._id,\n      perspectiveStack,\n    )\n  }, [props.documentPreviewStore, schemaType, value._id, perspectiveStack])\n\n  const {\n    snapshot,\n    original,\n    isLoading: previewIsLoading,\n  } = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n    original: null,\n  })\n\n  const isLoading = previewIsLoading\n\n  const status = isLoading ? null : (\n    <TooltipDelayGroupProvider>\n      <Flex align=\"center\" gap={3}>\n        {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n        <DocumentStatusIndicator\n          draft={versionsInfo.draft}\n          published={versionsInfo.published}\n          versions={versionsInfo.versions}\n        />\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n\n  const tooltip = (\n    <DocumentStatus\n      draft={versionsInfo.draft}\n      published={versionsInfo.published}\n      versions={versionsInfo.versions}\n    />\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({snapshot, original, fallback: value})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n      tooltip={tooltip}\n    />\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {type ReactNode, useCallback} from 'react'\nimport {\n  type FIXME,\n  getPublishedId,\n  PreviewCard,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id],\n  )\n\n  return (\n    <PreviewCard __unstable_focusRing as={Link as FIXME} data-as=\"a\" onClick={onClick} radius={2}>\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"compact\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n","import {\n  ChevronDownIcon,\n  CopyIcon,\n  DocumentsIcon,\n  UnknownIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Stack, Text, useToast} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {SanityDefaultPreview, Translate, useSchema, useTranslation} from 'sanity'\n\nimport {Button} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {\n  ChevronWrapper,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  DocumentIdFlex,\n  OtherReferenceCount,\n  Table,\n} from './ConfirmDeleteDialogBody.styles'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {type ReferringDocuments} from './useReferringDocuments'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: 'unpublish' | 'delete'\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title={t('confirm-delete-dialog.preview-item.preview-unavailable.title')}\n            subtitle={t('confirm-delete-dialog.preview-item.preview-unavailable.subtitle', {\n              documentId: item._id,\n            })}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, t, onReferenceLinkClick],\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\" size={1}>\n        <Translate\n          t={t}\n          i18nKey=\"confirm-delete-dialog.confirmation.text\"\n          context={action}\n          components={{DocumentTitle: () => <strong>{documentTitle}</strong>}}\n        />\n      </Text>\n    )\n  }\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n\n  const datasetSubtitle = t('confirm-delete-dialog.cdr-summary.subtitle', {\n    count: normalizedDatasetNames.length,\n    datasets: normalizedDatasetNames.join(', '),\n    context: hasUnknownDatasetNames && normalizedDatasetNames.length ? 'unavailable' : '',\n  })\n\n  return (\n    <Flex direction=\"column\" gap={4}>\n      <Card padding={3} radius={2} tone=\"caution\" flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              <Translate\n                i18nKey=\"confirm-delete-dialog.referring-document-count.text\"\n                components={{DocumentTitle: () => documentTitle}}\n                t={t}\n                values={{count: totalCount}}\n              />\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referring-documents-descriptor.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n      <Card radius={2} shadow={1} flex=\"auto\" padding={2}>\n        <Flex direction=\"column\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" marginBottom={2} space={2} data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box key={item._id} as=\"li\">\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Card\n                  as=\"a\"\n                  marginTop={internalReferences.totalCount > 0 ? 2 : 0}\n                  radius={2}\n                  shadow={1}\n                  paddingY={1}\n                >\n                  <Flex align=\"center\" gap={3} paddingX={3} paddingY={1}>\n                    <Text size={1}>\n                      <DocumentsIcon />\n                    </Text>\n                    <Stack space={2}>\n                      <Text textOverflow=\"ellipsis\" size={1}>\n                        {t('confirm-delete-dialog.cdr-summary.title', {\n                          count: normalizedDatasetNames.length,\n                          documentCount: t('confirm-delete-dialog.cdr-summary.document-count', {\n                            count: crossDatasetReferences.totalCount,\n                          }),\n                        })}\n                      </Text>\n                      <Text title={datasetSubtitle} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetSubtitle}\n                      </Text>\n                    </Stack>\n                    <ChevronWrapper>\n                      <Text muted size={1}>\n                        <ChevronDownIcon />\n                      </Text>\n                    </ChevronWrapper>\n                  </Flex>\n                </Card>\n              </CrossDatasetReferencesSummary>\n\n              <Box overflow=\"auto\" paddingTop={2}>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Text muted size={1} style={{minWidth: '5rem'}} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.project-id.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.dataset.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.document-id.label')}\n                        </Text>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <Button\n                                  mode=\"bleed\"\n                                  icon={CopyIcon}\n                                  tooltipProps={{\n                                    content: t(\n                                      'confirm-delete-dialog.cdr-table.copy-id-button.tooltip',\n                                    ),\n                                  }}\n                                  onClick={() => {\n                                    navigator.clipboard.writeText(documentId).catch(() => {\n                                      toast.push({\n                                        status: 'error',\n                                        title: t(\n                                          'confirm-delete-dialog.cdr-table.id-copied-toast.title-failed',\n                                        ),\n                                      })\n                                    })\n                                  }}\n                                />\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n\n                <OtherReferenceCount {...crossDatasetReferences} />\n              </Box>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referential-integrity-disclaimer.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n    </Flex>\n  )\n}\n","import {type ClientError, type SanityClient} from '@sanity/client'\nimport {useMemo} from 'react'\nimport {EMPTY, fromEvent, type Observable, of, timer} from 'rxjs'\nimport {\n  catchError,\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n} from 'rxjs/operators'\nimport {\n  type AvailabilityResponse,\n  createHookFromObservableFactory,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  type DocumentStore,\n  getDraftId,\n  getPublishedId,\n  useClient,\n  useDocumentStore,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY,\n      ),\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient},\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    }),\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient},\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          }),\n        )\n    }),\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000},\n    ) as Observable<ReferringDocuments['internalReferences']>\n  },\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        }),\n      ),\n    )\n  },\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId]),\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient]),\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== ''),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string',\n      ),\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n","import {Box, Flex} from '@sanity/ui'\nimport {useId, useMemo} from 'react'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DocTitle} from '../DocTitle'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\nimport {useReferringDocuments} from './useReferringDocuments'\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: 'delete' | 'unpublish'\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={t('confirm-delete-dialog.header.text', {context: action})}\n      footer={{\n        cancelButton: {\n          onClick: onCancel,\n          text: t('confirm-delete-dialog.cancel-button.text'),\n        },\n        confirmButton: showConfirmButton\n          ? {\n              text:\n                totalCount > 0\n                  ? t('confirm-delete-dialog.confirm-anyway-button.text', {context: action})\n                  : t('confirm-delete-dialog.confirm-button.text', {context: action}),\n              onClick: onConfirm,\n            }\n          : undefined,\n      }}\n      onClose={onCancel}\n      onClickOutside={onCancel}\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <LoadingBlock showText title={t('confirm-delete-dialog.loading.text')} />\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n","import {Box, Text} from '@sanity/ui'\nimport {type ComponentProps, useCallback, useId, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Dialog, ErrorBoundary} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {ConfirmDeleteDialog, type ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header={t('confirm-delete-dialog.error.title.text')}\n      footer={{\n        confirmButton: {\n          text: t('confirm-delete-dialog.error.retry-button.text'),\n          onClick: handleRetry,\n          tone: 'default',\n        },\n      }}\n      onClose={props.onCancel}\n    >\n      <Box padding={4}>\n        <Text size={1}>{t('confirm-delete-dialog.error.message.text')}</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n","import {type ComponentProps, type ForwardedRef, forwardRef, type ReactNode, useMemo} from 'react'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, type ButtonProps} from '../../ui-components'\nimport {type PaneMenuItem} from '../types'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {\n    intent: RouterIntent\n  } & ButtonProps &\n    Omit<ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: ReactNode},\n        linkRef: ForwardedRef<HTMLAnchorElement>,\n      ) {\n        return (\n          <IntentLink\n            {...linkProps}\n            intent={intent.type}\n            params={intent.params}\n            ref={linkRef}\n            searchParams={intent.searchParams}\n          />\n        )\n      }),\n    [intent],\n  )\n\n  return props.disabled ? (\n    <Button {...restProps} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button {...restProps} as={Link} data-as=\"a\" ref={ref as ForwardedRef<HTMLButtonElement>} />\n  )\n})\n","import {type ComponentProps, type ReactNode} from 'react'\nimport {InsufficientPermissionsMessage, useCurrentUser, useTranslation} from 'sanity'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  /**\n   * delegates to `InsufficientPermissionsMessage`'s `context` prop\n   * @see InsufficientPermissionsMessage\n   */\n  context: ComponentProps<typeof InsufficientPermissionsMessage>['context']\n  loading: boolean\n  children: ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  context,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          t('insufficient-permissions-message-tooltip.loading-text')\n        ) : (\n          <InsufficientPermissionsMessage context={context} currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n","import {AddIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type ComponentProps, type ForwardedRef, forwardRef, useMemo} from 'react'\nimport {\n  type InitialValueTemplateItem,\n  type ReleaseId,\n  type Template,\n  type TemplatePermissionsResult,\n  useGetI18nText,\n  usePerspective,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, MenuButton, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\n\nexport type PaneHeaderIntentProps = ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  templates: Template[],\n  item: InitialValueTemplateItem,\n  version?: ReleaseId,\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    version,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n    searchParams: version ? [['perspective', version]] : undefined,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const templates = useTemplates()\n  const {selectedReleaseId} = usePerspective()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const getI18nText = useGetI18nText([...templateItems, ...templates])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.length !== 0 &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {},\n    )\n  }, [templatePermissions])\n\n  if (templateItems.length === 0) return null\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip\n        context=\"create-document-type\"\n        reveal\n        loading={isTemplatePermissionsLoading}\n      >\n        <Button\n          aria-label={t('pane-header.disabled-created-button.aria-label')}\n          icon={AddIcon}\n          data-testid=\"action-intent-button\"\n          disabled\n          mode=\"bleed\"\n          // This button handles the tooltip in a special way, won't reuse the forced tooltip.\n          tooltipProps={null}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted\n    const intent = getIntent(templates, firstItem, selectedReleaseId)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n        context=\"create-document-type\"\n      >\n        <IntentButton\n          aria-label={getI18nText(firstItem).title}\n          icon={firstItem.icon || AddIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n          tooltipProps={{content: t('pane-header.create-new-button.tooltip')}}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          icon={AddIcon}\n          mode=\"bleed\"\n          data-testid=\"multi-action-intent-button\"\n          tooltipProps={{content: t('pane-header.create-new-button.tooltip')}}\n        />\n      }\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(templates, item, selectedReleaseId)\n            const template = templates.find((i) => i.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  searchParams={intent.searchParams}\n                  ref={linkRef}\n                />\n              ),\n            )\n\n            Link.displayName = 'Link'\n\n            const {title} = getI18nText({\n              ...item,\n              // replace the title with the template title\n              title: item.title || getI18nText(template).title,\n            })\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                key={item.id}\n                context=\"create-document-type\"\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={title}\n                  aria-label={\n                    disabled ? t('pane-header.disabled-created-button.aria-label') : title\n                  }\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {uniqBy} from 'lodash'\nimport {memo, useCallback, useMemo} from 'react'\nimport {EMPTY_ARRAY, EMPTY_OBJECT, type InitialValueTemplateItem, useTemplates} from 'sanity'\n\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../menuNodes'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderActionButton} from '../pane/PaneHeaderActionButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(function PaneHeaderActions(props: PaneHeaderActionsProps) {\n  const {\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = EMPTY_ARRAY,\n    menuItems = EMPTY_ARRAY,\n    menuItemGroups = EMPTY_ARRAY,\n    actionHandlers = EMPTY_OBJECT as Record<string, StructureToolPaneActionHandler>,\n  } = props\n\n  const templates = useTemplates()\n\n  const handleAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n        console.warn('No handler for action:', item.action)\n        return false\n      }\n\n      const handler =\n        typeof item.action === 'function'\n          ? item.action\n          : typeof item.action === 'string'\n            ? actionHandlers[item.action]\n            : null\n\n      if (handler) {\n        handler(item.params as Record<string, string>)\n        return true\n      }\n\n      return false\n    },\n    [actionHandlers],\n  )\n\n  const menuNodes = useMemo(\n    () =>\n      resolveMenuNodes({\n        actionHandler: handleAction,\n        menuItemGroups,\n        menuItems: menuItems\n          // remove items with `create` intents because those will get combined\n          // into one action button (see `initialValueTemplateItemFromMenuItems`)\n          .filter((item) => item.intent?.type !== 'create'),\n      }),\n    [handleAction, menuItemGroups, menuItems],\n  )\n\n  const actionNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n  const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n\n  const initialValueTemplateItemFromMenuItems = useMemo(() => {\n    return menuItems\n      .map((item, menuItemIndex) => {\n        if (item.intent?.type !== 'create') return null\n\n        const {params} = item.intent\n        if (!params) return null\n\n        const intentParams = Array.isArray(params) ? params[0] : params\n        const templateParams = Array.isArray(params) ? params[1] : undefined\n\n        // fallback to the schema type name as the template ID.\n        // by default, the initial template values are populated from every\n        // document type in the schema\n        const templateId = intentParams.template || intentParams.type\n        if (!templateId) return null\n\n        // eslint-disable-next-line max-nested-callbacks\n        const template = templates.find((t) => t.id === templateId)\n        // the template doesn't exist then the action might be disabled\n        if (!template) return null\n\n        const initialDocumentId = intentParams.id\n\n        return {\n          item,\n          template,\n          templateParams,\n          menuItemIndex,\n          initialDocumentId,\n        }\n      })\n      .filter(isNonNullable)\n      .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n        const initialValueTemplateItem: InitialValueTemplateItem = {\n          id: `menuItem${menuItemIndex}`,\n          initialDocumentId,\n          templateId: template.id,\n          type: 'initialValueTemplateItem',\n          title: item.title || template.title,\n          i18n: item.i18n || template.i18n,\n          icon: item.icon as InitialValueTemplateItem['icon'],\n          description: template.description,\n          parameters: templateParams,\n          schemaType: template.schemaType,\n        }\n\n        return initialValueTemplateItem\n      })\n  }, [menuItems, templates])\n\n  const combinedInitialValueTemplates = useMemo(() => {\n    // this de-dupes create actions\n    return uniqBy(\n      [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n      (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters]),\n    )\n  }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n  return (\n    <Flex gap={1}>\n      <PaneHeaderCreateButton templateItems={combinedInitialValueTemplates} />\n\n      {actionNodes.map((node) => (\n        <PaneHeaderActionButton key={node.key} node={node} />\n      ))}\n\n      {contextMenuNodes.length > 0 && <PaneContextMenuButton nodes={contextMenuNodes} />}\n    </Flex>\n  )\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {type GeneralPreviewLayoutKey, SanityDefaultPreview, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface MissingSchemaTypeProps {\n  layout?: GeneralPreviewLayoutKey\n  value: SanityDocument\n}\n\nexport function MissingSchemaType(props: MissingSchemaTypeProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {layout, value} = props\n\n  return (\n    <SanityDefaultPreview\n      title={\n        <em>\n          <Translate\n            t={t}\n            i18nKey=\"pane-item.missing-schema-type.title\"\n            components={{Code: 'code'}}\n            values={{documentType: value._type}}\n          />\n        </em>\n      }\n      subtitle={\n        <Translate\n          t={t}\n          i18nKey=\"pane-item.missing-schema-type.subtitle\"\n          components={{Code: 'code'}}\n          values={{documentId: value._id}}\n        />\n      }\n      media={() => <WarningOutlineIcon />}\n      layout={layout}\n    />\n  )\n}\n","import {ChevronRightIcon, DocumentIcon, FolderIcon} from '@sanity/icons'\nimport {\n  isSanityDocument,\n  type PreviewValue,\n  type SanityDocument,\n  type SchemaType,\n} from '@sanity/types'\nimport {Box, type CardProps, Text} from '@sanity/ui'\nimport {\n  type ComponentType,\n  type MouseEvent,\n  startTransition,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  type FIXME,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  PreviewCard,\n  SanityDefaultPreview,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n  useEditState,\n  useSchema,\n} from 'sanity'\n\nimport {MissingSchemaType} from '../MissingSchemaType'\nimport {usePaneRouter} from '../paneRouter'\nimport {PaneItemPreview} from './PaneItemPreview'\n\ninterface PaneItemProps {\n  id: string\n  layout?: GeneralPreviewLayoutKey\n  icon?: ComponentType<any> | false\n  pressed?: boolean\n  selected?: boolean\n  title?: string\n  value?: PreviewValue | SanityDocument\n  schemaType?: SchemaType\n  margin?: CardProps['margin']\n  marginBottom?: CardProps['marginBottom']\n  marginTop?: CardProps['marginTop']\n}\n\n/**\n * Return `false` if we explicitly disable the icon.\n * Otherwise return the passed icon or the schema type icon as a backup.\n */\nexport function getIconWithFallback(\n  icon: ComponentType<any> | false | undefined,\n  schemaType: SchemaType | undefined,\n  defaultIcon: ComponentType<any>,\n): ComponentType<any> | false {\n  if (icon === false) {\n    return false\n  }\n\n  return icon || (schemaType && schemaType.icon) || defaultIcon || false\n}\n\nexport function PaneItem(props: PaneItemProps) {\n  const {\n    icon,\n    id,\n    layout = 'default',\n    pressed,\n    schemaType,\n    selected,\n    title,\n    value,\n    margin,\n    marginBottom,\n    marginTop,\n  } = props\n  const schema = useSchema()\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ChildLink} = usePaneRouter()\n  const documentPresence = useDocumentPresence(id)\n  const hasSchemaType = Boolean(schemaType && schemaType.name && schema.get(schemaType.name))\n  const [clicked, setClicked] = useState<boolean>(false)\n\n  const preview = useMemo(() => {\n    if (value && isSanityDocument(value)) {\n      if (!schemaType || !hasSchemaType) {\n        return <MissingSchemaType value={value} />\n      }\n\n      return (\n        <PaneItemPreview\n          documentPreviewStore={documentPreviewStore}\n          icon={getIconWithFallback(icon, schemaType, DocumentIcon)}\n          layout={layout}\n          schemaType={schemaType}\n          value={value}\n          presence={documentPresence}\n        />\n      )\n    }\n\n    // Always render non-document values as compact previews\n    return (\n      <SanityDefaultPreview\n        status={\n          <Box style={{opacity: 0.5}}>\n            <Text muted size={1}>\n              <ChevronRightIcon />\n            </Text>\n          </Box>\n        }\n        icon={getIconWithFallback(icon, schemaType, FolderIcon)}\n        layout=\"compact\"\n        title={title}\n      />\n    )\n  }, [\n    documentPreviewStore,\n    hasSchemaType,\n    icon,\n    layout,\n    schemaType,\n    title,\n    value,\n    documentPresence,\n  ])\n\n  const handleClick = useCallback((e: MouseEvent<HTMLElement>) => {\n    if (e.metaKey) {\n      setClicked(false)\n      return\n    }\n\n    setClicked(true)\n  }, [])\n\n  // Reset `clicked` state when `selected` prop changes\n  useEffect(() => setClicked(false), [selected])\n\n  // Preloads the edit state on hover, using concurrent rendering with `startTransition` so preloads can be interrupted and not block rendering\n  const [preloading, setPreload] = useState(false)\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const handleMouseEnter = useCallback(() => {\n    timeoutRef.current = setTimeout(() => startTransition(() => setPreload(true)), 400)\n  }, [])\n  const handleMouseLeave = useCallback(() => {\n    if (timeoutRef.current) clearTimeout(timeoutRef.current)\n    startTransition(() => setPreload(false))\n  }, [])\n\n  return (\n    <PreviewCard\n      data-testid={`pane-item-${title}`}\n      __unstable_focusRing\n      as={ChildLink as FIXME}\n      // @ts-expect-error - `childId` is a valid prop on `ChildLink`\n      childId={id}\n      data-as=\"a\"\n      margin={margin}\n      marginBottom={marginBottom}\n      marginTop={marginTop}\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      pressed={pressed}\n      radius={2}\n      selected={selected || clicked}\n      sizing=\"border\"\n      tabIndex={-1}\n      tone=\"inherit\"\n    >\n      {preview}\n      {preloading && schemaType?.name && value && isSanityDocument(value) && (\n        <PreloadDocumentPane documentId={id} documentType={schemaType.name} />\n      )}\n    </PreviewCard>\n  )\n}\n\nfunction PreloadDocumentPane(props: {documentId: string; documentType: string}) {\n  const {documentId, documentType} = props\n  // Preload the edit state for the document, and keep it alive until mouse leave\n  useEditState(getPublishedId(documentId), documentType)\n\n  return null\n}\nPreloadDocumentPane.displayName = 'PreloadDocumentPane'\n","import {memo, type ReactNode, useMemo} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  type DocumentActionGroup,\n  type DocumentActionProps,\n  getDraftId,\n  GetHookCollectionState,\n  getPublishedId,\n  useCanvasCompanionDoc,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\nexport interface ResolvedAction extends DocumentActionDescription {\n  action?: DocumentActionComponent['action']\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: Omit<DocumentActionProps, 'onComplete'>\n  children: (props: {states: ResolvedAction[]}) => ReactNode\n  onActionComplete?: () => void\n  group?: DocumentActionGroup\n}\n\n/** @internal */\nexport const RenderActionCollectionState = memo((props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete, group} = props\n\n  return (\n    <GetHookCollectionState<Omit<DocumentActionProps, 'onComplete'>, ResolvedAction>\n      onReset={onActionComplete}\n      hooks={actions}\n      args={actionProps}\n      group={group}\n    >\n      {({states}) => (\n        <ActionsGuardWrapper\n          states={states}\n          documentId={\n            actionProps.liveEditSchemaType\n              ? getPublishedId(actionProps.id)\n              : getDraftId(actionProps.id)\n          }\n        >\n          {children}\n        </ActionsGuardWrapper>\n      )}\n    </GetHookCollectionState>\n  )\n})\nRenderActionCollectionState.displayName = 'Memo(RenderActionCollectionState)'\n\n/**\n * This is a list of the actions that are supported when a document is linked to Canvas.\n * Custom actions and actions that are not supported by Canvas will be disabled and will include a tooltip explaining that the action is not supported.\n */\nconst SUPPORTED_LINKED_TO_CANVAS_ACTIONS: DocumentActionComponent['action'][] = [\n  'delete',\n  'duplicate',\n  'publish',\n  'unpublish',\n  'unlinkFromCanvas',\n  'editInCanvas',\n  'linkToCanvas',\n  'schedule',\n]\n\ninterface ActionsGuardWrapperProps {\n  states: ResolvedAction[]\n  documentId: string\n  children: (props: {states: ResolvedAction[]}) => ReactNode\n}\n\nconst ActionsGuardWrapper = (props: ActionsGuardWrapperProps) => {\n  const {states, children, documentId} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isLinked} = useCanvasCompanionDoc(documentId)\n\n  const result = useMemo(() => {\n    if (isLinked) {\n      return children({\n        states: states.map((s) => {\n          if (!s.action || !SUPPORTED_LINKED_TO_CANVAS_ACTIONS.includes(s.action)) {\n            return {\n              ...s,\n              disabled: true,\n              title: t('action.disabled-by-canvas.tooltip'),\n            }\n          }\n          return s\n        }),\n      })\n    }\n    return children({states})\n  }, [children, states, t, isLinked])\n\n  return result\n}\n","import {memo, type ReactNode} from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => ReactNode\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = memo((props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps} = props\n\n  return (\n    <GetHookCollectionState<EditStateFor, DocumentBadgeDescription>\n      hooks={badges}\n      args={badgeProps}\n    >\n      {children}\n    </GetHookCollectionState>\n  )\n})\nRenderBadgeCollectionState.displayName = 'Memo(RenderBadgeCollectionState)'\n","import {type SortOrder} from './types'\n\nexport const PARTIAL_PAGE_LIMIT = 100\nexport const FULL_LIST_LIMIT = 2000\nexport const DEFAULT_ORDERING: SortOrder = {by: [{field: '_updatedAt', direction: 'desc'}]}\nexport const EMPTY_RECORD: Record<string, unknown> = {}\n\nexport const ENABLE_LRU_MEMO = true\n","import {type SanityDocument} from '@sanity/types'\nimport {Box, Container, Flex, Heading, Stack, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  ErrorActions,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  isDev,\n  LoadingBlock,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay, PaneContent, PaneItem, usePane, usePaneLayout} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {FULL_LIST_LIMIT} from './constants'\nimport {type DocumentListPaneItem, type LoadingVariant} from './types'\n\nconst RootBox = styled(Box)<{$opacity?: number}>`\n  position: relative;\n  opacity: ${(props) => props.$opacity || 1};\n  transition: opacity 0.4s;\n`\n\nconst CommandListBox = styled(Box)`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n`\n\ninterface DocumentListPaneContentProps {\n  childItemId?: string\n  error: {message: string} | null\n  filterIsSimpleTypeConstraint: boolean\n  hasMaxItems?: boolean\n  muted?: boolean\n  hasSearchQuery: boolean\n  isActive?: boolean\n  isLazyLoading: boolean\n  isLoading: boolean\n  isConnected?: boolean\n  autoRetry?: boolean\n  canRetry: boolean\n  retryCount?: number\n  isRetrying?: boolean\n  items: DocumentListPaneItem[]\n  layout?: GeneralPreviewLayoutKey\n  loadingVariant?: LoadingVariant\n  onEndReached: () => void\n  onRetry?: () => void\n  paneTitle: string\n  searchInputElement: HTMLInputElement | null\n  showIcons: boolean\n}\n\nconst SKELETON_ITEMS = [...Array(30).keys()]\n\nfunction LoadingView(props: {layout?: GeneralPreviewLayoutKey}) {\n  const {layout} = props\n\n  return (\n    <Stack paddingX={3} paddingY={2} paddingTop={0} space={1}>\n      {SKELETON_ITEMS.map((num) => (\n        <SanityDefaultPreview key={num} isPlaceholder layout={layout} />\n      ))}\n    </Stack>\n  )\n}\n\nexport function DocumentListPaneContent(props: DocumentListPaneContentProps) {\n  const {\n    childItemId,\n    error,\n    isRetrying,\n    autoRetry,\n    filterIsSimpleTypeConstraint,\n    hasMaxItems,\n    hasSearchQuery,\n    isActive,\n    isLazyLoading,\n    muted,\n    isLoading,\n    isConnected,\n    retryCount,\n    canRetry,\n    items,\n    layout,\n    loadingVariant,\n    onEndReached,\n    onRetry,\n    paneTitle,\n    searchInputElement,\n    showIcons,\n  } = props\n\n  const schema = useSchema()\n\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed, index} = usePane()\n  const [shouldRender, setShouldRender] = useState(!collapsed)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleEndReached = useCallback(() => {\n    if (shouldRender) {\n      onEndReached()\n    }\n  }, [onEndReached, shouldRender])\n\n  useEffect(() => {\n    if (collapsed) return undefined\n\n    const timer = setTimeout(() => {\n      setShouldRender(true)\n    }, 0)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [collapsed, items])\n\n  const renderItem = useCallback<CommandListRenderItemCallback<SanityDocument>>(\n    (item, {activeIndex}) => {\n      const publishedId = getPublishedId(item._id)\n      const isSelected = childItemId === publishedId\n      const pressed = !isActive && isSelected\n      const selected = isActive && isSelected\n      const isLastItem = activeIndex === items.length - 1\n      const showSpinner = isLastItem && isLazyLoading\n      const showMaxItemsMessage = isLastItem && hasMaxItems\n\n      return (\n        <>\n          <PaneItem\n            icon={showIcons === false ? false : undefined}\n            id={publishedId}\n            layout={layout}\n            marginBottom={1}\n            pressed={pressed}\n            schemaType={schema.get(item._type)}\n            selected={selected}\n            value={item}\n          />\n\n          {showSpinner && <LoadingBlock />}\n\n          {showMaxItemsMessage && (\n            <Box marginY={1} paddingX={3} paddingY={4}>\n              <Text align=\"center\" muted size={1}>\n                {t('panes.document-list-pane.max-items.text', {limit: FULL_LIST_LIMIT})}\n              </Text>\n            </Box>\n          )}\n        </>\n      )\n    },\n    [childItemId, isActive, items.length, layout, schema, showIcons, hasMaxItems, isLazyLoading, t],\n  )\n\n  const noDocumentsContent = useMemo(() => {\n    if (hasSearchQuery) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Box paddingX={4} paddingY={5}>\n              <Text align=\"center\" muted>\n                {t('panes.document-list-pane.no-documents.text')}\n              </Text>\n            </Box>\n          </Container>\n        </Flex>\n      )\n    }\n\n    return (\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n        <Container width={1}>\n          <Box paddingX={4} paddingY={5}>\n            <Text align=\"center\" muted>\n              {filterIsSimpleTypeConstraint\n                ? t('panes.document-list-pane.no-documents-of-type.text')\n                : t('panes.document-list-pane.no-matching-documents.text')}\n            </Text>\n          </Box>\n        </Container>\n      </Flex>\n    )\n  }, [filterIsSimpleTypeConstraint, hasSearchQuery, t])\n\n  const mainContent = useMemo(() => {\n    if (!shouldRender) {\n      return null\n    }\n\n    const isOnline = window.navigator.onLine\n    if (error) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Stack paddingX={4} paddingY={5} space={4}>\n              <Heading as=\"h3\">{t('panes.document-list-pane.error.title')}</Heading>\n              <Text as=\"p\">\n                {isDev ? (\n                  <Translate\n                    t={t}\n                    i18nKey=\"panes.document-list-pane.error.text.dev\"\n                    values={{error: error.message}}\n                    components={{Code: ({children}) => <code>{children}</code>}}\n                  />\n                ) : isOnline ? (\n                  t('panes.document-list-pane.error.text')\n                ) : (\n                  t('panes.document-list-pane.error.text.offline')\n                )}\n              </Text>\n              <ErrorActions\n                error={error}\n                eventId={null}\n                onRetry={isOnline && canRetry ? onRetry : undefined}\n                isRetrying={isRetrying}\n              />\n              {canRetry ? (\n                <Text as=\"p\" muted size={1}>\n                  {isRetrying\n                    ? t('panes.document-list-pane.error.retrying', {count: retryCount})\n                    : autoRetry\n                      ? t('panes.document-list-pane.error.will-retry-automatically', {\n                          count: retryCount,\n                        })\n                      : t('panes.document-list-pane.error.max-retries-attempted', {\n                          count: retryCount,\n                        })}\n                </Text>\n              ) : null}\n            </Stack>\n          </Container>\n        </Flex>\n      )\n    }\n\n    if (isConnected && !isLoading && items.length === 0) {\n      return noDocumentsContent\n    }\n\n    if (loadingVariant === 'initial' && isLoading) {\n      return (\n        <Delay ms={300}>\n          <LoadingView layout={layout} />\n        </Delay>\n      )\n    }\n\n    if (loadingVariant === 'spinner' && isLoading) {\n      return null\n    }\n\n    // prevents bug when panes won't render if first rendered while collapsed\n    const key = `${index}-${collapsed}`\n\n    return (\n      <RootBox overflow=\"hidden\" height=\"fill\" $opacity={muted ? 0.8 : 1}>\n        <CommandListBox>\n          <CommandList\n            key={key}\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={paneTitle}\n            canReceiveFocus\n            inputElement={searchInputElement}\n            itemHeight={51}\n            items={items}\n            onEndReached={handleEndReached}\n            onlyShowSelectionWhenActive\n            overscan={10}\n            paddingBottom={1}\n            paddingX={3}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </CommandListBox>\n      </RootBox>\n    )\n  }, [\n    autoRetry,\n    canRetry,\n    collapsed,\n    error,\n    handleEndReached,\n    index,\n    isConnected,\n    isLoading,\n    isRetrying,\n    items,\n    layout,\n    loadingVariant,\n    muted,\n    noDocumentsContent,\n    onRetry,\n    paneTitle,\n    renderItem,\n    retryCount,\n    searchInputElement,\n    shouldRender,\n    t,\n  ])\n\n  return (\n    <PaneContent\n      data-testid=\"document-list-pane\"\n      overflow={layoutCollapsed || loadingVariant === 'initial' ? 'hidden' : 'auto'}\n    >\n      {mainContent}\n    </PaneContent>\n  )\n}\n","import {\n  isIndexSegment,\n  isKeySegment,\n  isReferenceSchemaType,\n  type ObjectField,\n  type ObjectFieldType,\n  type ObjectSchemaType,\n  type SanityDocumentLike,\n  type SchemaType,\n} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {type ExprNode, parse} from 'groq-js'\nimport {collate, getPublishedId} from 'sanity'\n\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\nexport function getDocumentKey(value: DocumentListPaneItem, index: number): string {\n  return value._id ? getPublishedId(value._id) : `item-${index}`\n}\n\nexport function removePublishedWithDrafts(documents: SanityDocumentLike[]): DocumentListPaneItem[] {\n  return collate(documents).map((entry) => {\n    const doc = entry.draft || entry.published || entry.versions[0]\n    const hasDraft = Boolean(entry.draft)\n\n    return {\n      ...doc,\n      hasPublished: !!entry.published,\n      hasDraft,\n    }\n  }) as any\n}\n\nexport function applyOrderingFunctions(order: SortOrder, schemaType: ObjectSchemaType): SortOrder {\n  const orderBy = order.by.map((by) => {\n    // Skip those that already have a mapper\n    if (by.mapWith) {\n      return by\n    }\n\n    const fieldType = tryResolveSchemaTypeForPath(schemaType, by.field)\n    if (!fieldType) {\n      return by\n    }\n\n    // Note: order matters here, since the jsonType of a date field is `string`,\n    // but we want to apply `datetime()`, not `lower()`\n    if (fieldExtendsType(fieldType, 'datetime')) {\n      return {...by, mapWith: 'dateTime'}\n    }\n\n    if (fieldType.jsonType === 'string') {\n      return {...by, mapWith: 'lower'}\n    }\n\n    return by\n  })\n\n  return orderBy.every((item, index) => item === order.by[index]) ? order : {...order, by: orderBy}\n}\n\nfunction tryResolveSchemaTypeForPath(baseType: SchemaType, path: string): SchemaType | undefined {\n  const pathSegments = PathUtils.fromString(path)\n\n  let current: SchemaType | undefined = baseType\n  for (const segment of pathSegments) {\n    if (!current) {\n      return undefined\n    }\n\n    if (typeof segment === 'string') {\n      current = getFieldTypeByName(current, segment)\n      continue\n    }\n\n    const isArrayAccessor = isKeySegment(segment) || isIndexSegment(segment)\n    if (!isArrayAccessor || current.jsonType !== 'array') {\n      return undefined\n    }\n\n    const [memberType, otherType] = current.of || []\n    if (otherType || !memberType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    if (!isReferenceSchemaType(memberType)) {\n      current = memberType\n      continue\n    }\n\n    const [refType, otherRefType] = memberType.to || []\n    if (otherRefType || !refType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    current = refType\n  }\n\n  return current\n}\n\nfunction getFieldTypeByName(type: SchemaType, fieldName: string): SchemaType | undefined {\n  if (!('fields' in type)) {\n    return undefined\n  }\n\n  const fieldType = type.fields.find((field) => field.name === fieldName)\n  return fieldType ? fieldType.type : undefined\n}\n\nexport function fieldExtendsType(field: ObjectField | ObjectFieldType, ofType: string): boolean {\n  let current: SchemaType | undefined = field.type\n  while (current) {\n    if (current.name === ofType) {\n      return true\n    }\n\n    if (!current.type && current.jsonType === ofType) {\n      return true\n    }\n\n    current = current.type\n  }\n\n  return false\n}\n\n/**\n * Recursively extract static `_type`s from GROQ filter expressions. If the\n * types can't be statically determined then it will return `null`.\n */\n// eslint-disable-next-line complexity\nfunction findTypes(node: ExprNode): Set<string> | null {\n  switch (node.type) {\n    case 'OpCall': {\n      const {left, right} = node\n\n      switch (node.op) {\n        // e.g. `a == b`\n        case '==': {\n          // e.g. `_type == 'value'`\n          if (left.type === 'AccessAttribute' && left.name === '_type' && !left.base) {\n            if (right.type !== 'Value' || typeof right.value !== 'string') return null\n            return new Set([right.value])\n          }\n\n          // e.g. `'value' == _type`\n          if (right.type === 'AccessAttribute' && right.name === '_type' && !right.base) {\n            if (left.type !== 'Value' || typeof left.value !== 'string') return null\n            return new Set([left.value])\n          }\n\n          // otherwise, we can't determine the types statically\n          return null\n        }\n\n        // e.g. `a in b`\n        case 'in': {\n          // if `_type` is not on the left hand side of `in` then it can't be determined\n          if (left.type !== 'AccessAttribute' || left.name !== '_type' || left.base) return null\n          // if the right hand side is not an array then the types can't be determined\n          if (right.type !== 'Array') return null\n\n          const types = new Set<string>()\n          // iterate through all the types\n          for (const element of right.elements) {\n            // if we find a splat, then early return, we can't determine the types\n            if (element.isSplat) return null\n            // if the array element is not just a simple value, then early return\n            if (element.value.type !== 'Value') return null\n            // if the array element value is not a string, then early return\n            if (typeof element.value.value !== 'string') return null\n            // otherwise add the element value to the set of types\n            types.add(element.value.value)\n          }\n\n          // if there were any elements in the types set, return it\n          if (types.size) return types\n          // otherwise, the set of types cannot be determined\n          return null\n        }\n\n        default: {\n          return null\n        }\n      }\n    }\n\n    // groups can just be unwrapped, the AST preserves the order\n    case 'Group': {\n      return findTypes(node.base)\n    }\n\n    // e.g. `_type == 'a' || _type == 'b'`\n    // with Or nodes, if we can't determine the types for either the left or\n    // right hand side then we can't determine the types for any\n    // e.g. `_type == 'a' || isActive`\n    // — can't determine types because `isActive` could be true on another types\n    case 'Or': {\n      const left = findTypes(node.left)\n      if (!left) return null\n\n      const right = findTypes(node.right)\n      if (!right) return null\n\n      return new Set([...left, ...right])\n    }\n\n    // e.g. `_type == 'a' && isActive`\n    // with And nodes, we can determine the types as long as we can determine\n    // the types for one side. We can't determine the types if both are `null`.\n    case 'And': {\n      const left = findTypes(node.left)\n      const right = findTypes(node.right)\n\n      if (!left && !right) return null\n      return new Set([...(left || []), ...(right || [])])\n    }\n\n    default: {\n      return null\n    }\n  }\n}\n\nexport function findStaticTypesInFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] | null {\n  try {\n    const types = findTypes(parse(filter, {params}))\n    if (!types) return null\n\n    return Array.from(types).sort()\n  } catch {\n    // if we couldn't parse the filter, just return `null`\n    return null\n  }\n}\n","import {type ClientPerspective, type SanityClient} from '@sanity/client'\nimport {\n  asyncScheduler,\n  defer,\n  filter,\n  map,\n  merge,\n  mergeMap,\n  type Observable,\n  of,\n  partition,\n  share,\n  throttleTime,\n  throwError,\n  timer,\n} from 'rxjs'\nimport {scan} from 'rxjs/operators'\nimport {exhaustMapWithTrailing} from 'rxjs-exhaustmap-with-trailing'\nimport {\n  createSearch,\n  createSWR,\n  getSearchableTypes,\n  type SanityDocumentLike,\n  type Schema,\n  type SearchOptions,\n  type SearchStrategy,\n} from 'sanity'\n\nimport {getExtendedProjection} from '../../structureBuilder/util/getExtendedProjection'\nimport {type SortOrder} from './types'\n\ninterface ListenQueryOptions {\n  client: SanityClient\n  filter: string\n  limit: number\n  params: Record<string, unknown>\n  schema: Schema\n  searchQuery: string\n  sort: SortOrder\n  perspective?: ClientPerspective\n  staticTypeNames?: string[] | null\n  maxFieldDepth?: number\n  searchStrategy?: SearchStrategy\n}\n\nexport type SearchQueryEvent =\n  | {\n      type: 'reconnect'\n    }\n  | {type: 'result'; documents: SanityDocumentLike[]}\n\nexport interface SearchQueryState {\n  connected: boolean\n  fromCache: boolean\n  documents: SanityDocumentLike[]\n}\n\nconst swr = createSWR<{connected: boolean; documents: SanityDocumentLike[]}>({maxSize: 100})\n\nexport function listenSearchQuery(options: ListenQueryOptions): Observable<SearchQueryState> {\n  const {\n    client,\n    schema,\n    sort,\n    perspective,\n    limit,\n    params,\n    filter: groqFilter,\n    searchQuery,\n    staticTypeNames,\n    maxFieldDepth,\n    searchStrategy,\n  } = options\n  const sortBy = sort.by\n  const extendedProjection = sort?.extendedProjection\n\n  // Listen for changes with the given filter and params, and whenever a change occurs, we want to\n  // re-fetch the documents that match the search query (see below).\n  // We use a separate listener since the search query is too large to use in a listen query.\n  const events$ = defer(() => {\n    return client.listen(`*[${groqFilter}]`, params, {\n      events: ['welcome', 'mutation', 'reconnect'],\n      includeAllVersions: true,\n      includeResult: false,\n      visibility: 'query',\n      tag: 'listen-search-query',\n    })\n  }).pipe(\n    mergeMap((ev, i) => {\n      const isFirst = i === 0\n      // If we can't establish a connection to the /listen endpoint, the first event we receive will be 'reconnect'\n      // So if we get \"reconnect\" as the first event actually means \"Connection can't be established\"\n      if (isFirst && ev.type === 'reconnect') {\n        // if it's neither welcome nor reconnect, something unexpected has happened.\n        return throwError(() => new Error(`Failed to establish EventSource connection`))\n      }\n      // When a connection is successfully established, the first event will be 'welcome'\n      if (isFirst && ev.type !== 'welcome') {\n        // if it's neither welcome nor reconnect, something unexpected has happened.\n        return throwError(() => new Error(`Received unexpected type of first event \"${ev.type}\"`))\n      }\n      return of(ev)\n    }),\n    share(),\n  )\n\n  const [welcome$, mutationAndReconnect$] = partition(events$, (ev) => ev.type === 'welcome')\n\n  const swrKey = JSON.stringify({\n    fiilter: groqFilter,\n    limit,\n    params,\n    searchQuery,\n    perspective,\n    sort,\n    staticTypeNames,\n  })\n\n  return merge(\n    welcome$,\n    mutationAndReconnect$.pipe(throttleTime(1000, asyncScheduler, {leading: true, trailing: true})),\n  ).pipe(\n    exhaustMapWithTrailing((event): Observable<SearchQueryEvent> => {\n      // Get the types names to use for searching.\n      // If we have a static list of types, we can skip fetching the types and use the static list.\n      const typeNames$ = staticTypeNames\n        ? of(staticTypeNames)\n        : client.observable.fetch(`array::unique(*[${groqFilter}][]._type)`, params)\n\n      // Use the type names to create a search query and fetch the documents that match the query.\n      return typeNames$.pipe(\n        mergeMap((typeNames: string[]) => {\n          const types = getSearchableTypes(schema, staticTypeNames || []).filter((type) => {\n            if (typeNames.includes(type.name)) {\n              // make a call to getExtendedProjection in strict mode to verify that all fields are\n              // known. This method will throw an exception if there are any unknown fields specified\n              // in the sort by list\n              getExtendedProjection(type, sort.by, true)\n              return true\n            }\n            return false\n          })\n\n          const search = createSearch(types, client, {\n            filter: groqFilter,\n            params,\n            strategy: searchStrategy,\n            maxDepth: maxFieldDepth,\n          })\n\n          const doFetch = () => {\n            const searchTerms = {\n              query: searchQuery || '',\n              types,\n            }\n\n            const searchOptions: SearchOptions = {\n              __unstable_extendedProjection: extendedProjection,\n              comments: [`findability-source: ${searchQuery ? 'list-query' : 'list'}`],\n              limit,\n              skipSortByScore: true,\n              sort: sortBy,\n              perspective,\n            }\n\n            return search(searchTerms, searchOptions).pipe(\n              map((result) =>\n                // eslint-disable-next-line max-nested-callbacks\n                result.hits.map(({hit}) => hit),\n              ),\n              map((hits) => ({type: 'result' as const, documents: hits})),\n            )\n          }\n\n          if (event.type === 'mutation' && event.visibility !== 'query') {\n            // Even though the listener request specifies visibility=query, the events are not guaranteed to be delivered with visibility=query\n            // If the event we are responding to arrives with visibility != query, we add a little delay to allow for the updated document to be available for queries\n            // See https://www.sanity.io/docs/listening#visibility-c4786e55c3ff\n            return timer(1200).pipe(mergeMap(doFetch))\n          }\n          if (event.type === 'reconnect') {\n            return of(event)\n          }\n          return doFetch()\n        }),\n      )\n    }),\n    scan(\n      (\n        acc: null | {connected: boolean; documents: SanityDocumentLike[]},\n        event: SearchQueryEvent,\n      ) => ({\n        connected: event.type !== 'reconnect',\n        documents: event.type === 'result' ? event.documents : acc?.documents || [],\n      }),\n      null as null | {connected: boolean; documents: SanityDocumentLike[]},\n    ),\n    filter((v) => v !== null),\n    swr(swrKey),\n    map(({fromCache, value}): SearchQueryState => ({fromCache, ...value})),\n  )\n}\n","import {ChannelError, ClientError, type ClientPerspective, ServerError} from '@sanity/client'\nimport {observableCallback} from 'observable-callback'\nimport {useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, fromEvent, merge, NEVER, of, timer} from 'rxjs'\nimport {\n  filter,\n  map,\n  mergeMap,\n  scan,\n  share,\n  shareReplay,\n  switchMap,\n  take,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators'\nimport {\n  catchWithCount,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  useClient,\n  useSchema,\n  useSearchMaxFieldDepth,\n  useWorkspace,\n} from 'sanity'\n\nimport {DEFAULT_ORDERING, FULL_LIST_LIMIT, PARTIAL_PAGE_LIMIT} from './constants'\nimport {findStaticTypesInFilter, removePublishedWithDrafts} from './helpers'\nimport {listenSearchQuery} from './listenSearchQuery'\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\ninterface UseDocumentListOpts {\n  apiVersion?: string\n  filter: string\n  perspective?: ClientPerspective\n  params: Record<string, unknown>\n  searchQuery: string | null\n  sortOrder?: SortOrder\n}\n\ninterface DocumentListState {\n  error: {message: string} | null\n  isLoadingFullList: boolean\n  isLoading: boolean\n  connected?: boolean\n  isRetrying: boolean\n  autoRetry: boolean\n  canRetry: boolean\n  retryCount: number\n  fromCache?: boolean\n  items: DocumentListPaneItem[]\n}\n\nconst INITIAL_QUERY_STATE: DocumentListState = {\n  error: null,\n  isRetrying: false,\n  retryCount: 0,\n  autoRetry: false,\n  canRetry: false,\n  isLoading: true,\n  isLoadingFullList: false,\n  fromCache: false,\n  items: [],\n}\n\ninterface UseDocumentListHookValue extends DocumentListState {\n  onRetry: () => void\n  onLoadFullList: () => void\n}\n\n/**\n * Determine whether an error should be possible to retry\n * @param error - Any caught error\n */\nfunction isRetriableError(error: unknown) {\n  if (error instanceof ChannelError) {\n    // Usually indicative of a bad or malformed request\n    return false\n  }\n  if (error instanceof ServerError) {\n    // >= 500\n    return true\n  }\n  if (error instanceof ClientError) {\n    // >= 400\n    // note: 403 Forbidden makes sense to retry, because it's a potentially passing condition\n    return error.statusCode === 403\n  }\n  return true\n}\n\n/**\n * @internal\n */\nexport function useDocumentList(opts: UseDocumentListOpts): UseDocumentListHookValue {\n  const {\n    filter: searchFilter,\n    params: paramsProp,\n    sortOrder,\n    searchQuery,\n    perspective,\n    apiVersion,\n  } = opts\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const {strategy: searchStrategy} = useWorkspace().search\n  const schema = useSchema()\n  const maxFieldDepth = useSearchMaxFieldDepth()\n\n  // Get the type name from the filter, if it is a simple type filter.\n  const typeNameFromFilter = useMemo(\n    () => findStaticTypesInFilter(searchFilter, paramsProp),\n    [searchFilter, paramsProp],\n  )\n\n  const [[onRetry$, onRetry]] = useState(() => observableCallback())\n  const [[onFetchFullList$, onLoadFullList]] = useState(() => observableCallback())\n\n  const queryResults$ = useMemo(() => {\n    const listenSearchQueryArgs = {\n      client,\n      filter: searchFilter,\n      limit: PARTIAL_PAGE_LIMIT,\n      params: paramsProp,\n      schema,\n      perspective,\n      searchQuery: searchQuery || '',\n      sort: sortOrder || DEFAULT_ORDERING,\n      staticTypeNames: typeNameFromFilter,\n      maxFieldDepth,\n      searchStrategy,\n    }\n\n    const partialList$ = listenSearchQuery(listenSearchQueryArgs).pipe(\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n\n    // we want to fetch the full list if the last result of the partial list is at the limit\n    const fullList$ = onFetchFullList$.pipe(\n      withLatestFrom(partialList$),\n      filter(([, result]) => result?.documents.length === PARTIAL_PAGE_LIMIT),\n      // we want to set up the full list listener only once\n      take(1),\n      mergeMap(() =>\n        concat(\n          of({type: 'loadFullList' as const}),\n          listenSearchQuery({...listenSearchQueryArgs, limit: FULL_LIST_LIMIT}).pipe(\n            map((result) => ({type: 'result' as const, result})),\n          ),\n        ),\n      ),\n      share(),\n    )\n\n    // The combined search results from both partial page and full list\n    return merge(\n      partialList$.pipe(\n        map((result) => ({\n          type: 'result' as const,\n          result,\n        })),\n        // when the full list listener kicks off, we want to stop the partial list listener\n        takeUntil(fullList$),\n      ),\n      fullList$,\n    ).pipe(\n      catchWithCount((lastError, retryCount, caught$) => {\n        const error = safeError(lastError)\n        const isOnline = window.navigator.onLine\n        const canRetry = isOnline && isRetriableError(lastError)\n        const autoRetry = retryCount < 10\n        const retries = merge(\n          isOnline ? onRetry$ : fromEvent(window, 'online'),\n          isOnline && autoRetry ? timer(retryCount * 1_000) : NEVER,\n        ).pipe(\n          take(1),\n          switchMap(() =>\n            merge(\n              of({\n                type: 'error' as const,\n                error,\n                retrying: true,\n                autoRetry,\n                canRetry,\n                retryCount,\n              }),\n              caught$,\n            ),\n          ),\n        )\n        return concat(\n          of({\n            type: 'error' as const,\n            error,\n            retrying: false,\n            autoRetry,\n            canRetry,\n            retryCount,\n          }),\n          retries,\n        )\n      }),\n      scan((prev, event) => {\n        if (event.type === 'error') {\n          return {\n            ...prev,\n            error: event.error,\n            retryCount: event.retryCount,\n            isRetrying: event.retrying,\n            autoRetry: event.autoRetry,\n            canRetry: event.canRetry,\n          }\n        }\n        if (event.type === 'result') {\n          return {\n            ...prev,\n            error: null,\n            isRetrying: false,\n            fromCache: event.result.fromCache,\n            connected: event.result.connected,\n            isLoading: false,\n            items: removePublishedWithDrafts(event.result.documents),\n            isLoadingFullList: false,\n          }\n        }\n        if (event.type === 'loadFullList') {\n          return {\n            ...prev,\n            error: null,\n            isLoadingFullList: true,\n          }\n        }\n        // @ts-expect-error - all cases should be covered\n        throw new Error(`Unexpected event type: ${event.type}`)\n      }, INITIAL_QUERY_STATE),\n    )\n  }, [\n    client,\n    searchFilter,\n    paramsProp,\n    schema,\n    perspective,\n    searchQuery,\n    sortOrder,\n    typeNameFromFilter,\n    maxFieldDepth,\n    searchStrategy,\n    onFetchFullList$,\n    onRetry$,\n  ])\n\n  const {\n    error,\n    items,\n    isLoading,\n    fromCache,\n    connected,\n    canRetry,\n    isLoadingFullList,\n    isRetrying,\n    autoRetry,\n    retryCount,\n  } = useObservable(queryResults$, INITIAL_QUERY_STATE)\n\n  return {\n    error,\n    onRetry,\n    isLoading,\n    items,\n    isRetrying,\n    canRetry,\n    retryCount,\n    autoRetry,\n    connected,\n    fromCache,\n    onLoadFullList,\n    isLoadingFullList,\n  }\n}\n\n// todo: candidate for re-use\nconst nonErrorThrownWarning = `[WARNING: This was thrown as a non-error. Only Error instances should be thrown]`\nfunction safeError(thrown: unknown): Error {\n  if (thrown instanceof Error) {\n    return thrown\n  }\n  if (typeof thrown === 'object' && thrown !== null) {\n    if ('message' in thrown && typeof thrown.message === 'string') {\n      return new Error(`${thrown.message} ${nonErrorThrownWarning}`)\n    }\n    return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n  }\n  return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n}\n","import {SearchIcon, SpinnerIcon} from '@sanity/icons'\nimport {Box, TextInput} from '@sanity/ui'\nimport {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useObservableEvent} from 'react-rx'\nimport {debounce, map, type Observable, of, tap, timer} from 'rxjs'\nimport {\n  type GeneralPreviewLayoutKey,\n  useActiveReleases,\n  useI18nText,\n  usePerspective,\n  useReconnectingToast,\n  useSchema,\n  useTranslation,\n  useUnique,\n} from 'sanity'\nimport {keyframes, styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {EMPTY_RECORD, FULL_LIST_LIMIT} from './constants'\nimport {DocumentListPaneContent} from './DocumentListPaneContent'\nimport {applyOrderingFunctions, findStaticTypesInFilter} from './helpers'\nimport {useShallowUnique} from './PaneContainer'\nimport {type LoadingVariant, type SortOrder} from './types'\nimport {useDocumentList} from './useDocumentList'\n\n/**\n * @internal\n */\nexport type DocumentListPaneProps = BaseStructureToolPaneProps<'documentList'> & {\n  sortOrder?: SortOrder\n  layout?: Exclude<GeneralPreviewLayoutKey, 'sheetList'>\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 0.1;\n  }\n  100% {\n    opacity: 0.4;\n  }\n`\n\nconst AnimatedSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 500ms linear infinite;\n`\n\nconst SubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 1500ms linear infinite;\n  opacity: 0.4;\n`\n\nconst DelayedSubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation:\n    ${rotate} 1500ms linear infinite,\n    ${fadeIn} 1000ms linear;\n  opacity: 0.4;\n`\n\n/**\n * @internal\n */\n\nexport const DocumentListPane = memo(function DocumentListPane(props: DocumentListPaneProps) {\n  const {childItemId, isActive, pane, paneKey, sortOrder: sortOrderRaw, layout} = props\n  const schema = useSchema()\n  const releases = useActiveReleases()\n  const {perspectiveStack} = usePerspective()\n  const {displayOptions, options} = pane\n  const {apiVersion, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const showIcons = displayOptions?.showIcons !== false\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useI18nText(pane)\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [searchInputValue, setSearchInputValue] = useState<string>('')\n  const [searchInputElement, setSearchInputElement] = useState<HTMLInputElement | null>(null)\n\n  const sortWithOrderingFn =\n    typeName && sortOrderRaw\n      ? applyOrderingFunctions(sortOrderRaw, schema.get(typeName) as any)\n      : sortOrderRaw\n\n  const sortOrder = useUnique(sortWithOrderingFn)\n\n  const {\n    error,\n    isLoadingFullList,\n    isLoading: documentListIsLoading,\n    items,\n    fromCache,\n    isRetrying,\n    autoRetry,\n    canRetry,\n    retryCount,\n    connected,\n    onLoadFullList,\n    onRetry,\n  } = useDocumentList({\n    apiVersion,\n    filter,\n    perspective: perspectiveStack,\n    params,\n    searchQuery: searchQuery?.trim(),\n    sortOrder,\n  })\n\n  const isLoading = documentListIsLoading || releases.loading\n\n  const handleQueryChange = useObservableEvent(\n    (event$: Observable<React.ChangeEvent<HTMLInputElement>>) => {\n      return event$.pipe(\n        map((event) => event.target.value),\n        tap(setSearchInputValue),\n        debounce((value) => (value === '' ? of('') : timer(300))),\n        tap(setSearchQuery),\n      )\n    },\n  )\n\n  const handleClearSearch = useCallback(() => {\n    setSearchQuery('')\n    setSearchInputValue('')\n  }, [])\n\n  const handleSearchKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Escape') {\n        handleClearSearch()\n      }\n    },\n    [handleClearSearch],\n  )\n\n  const [enableSearchSpinner, setEnableSearchSpinner] = useState<string | void>()\n\n  useEffect(() => {\n    if (!enableSearchSpinner && !isLoading) {\n      setEnableSearchSpinner(paneKey)\n    }\n  }, [enableSearchSpinner, isLoading, paneKey])\n\n  useEffect(() => {\n    // Clear search field and disable search spinner\n    // when switching between panes (i.e. when paneKey changes).\n    handleClearSearch()\n    setEnableSearchSpinner()\n  }, [paneKey, handleClearSearch])\n\n  const loadingVariant: LoadingVariant = useMemo(() => {\n    if (connected && isLoading && enableSearchSpinner === paneKey) {\n      return 'spinner'\n    }\n    if (connected && fromCache) {\n      return 'subtle'\n    }\n\n    return 'initial'\n  }, [connected, enableSearchSpinner, fromCache, isLoading, paneKey])\n\n  const textInputIcon = useMemo(() => {\n    if (loadingVariant === 'spinner') {\n      return AnimatedSpinnerIcon\n    }\n    if (searchInputValue && loadingVariant === 'subtle') {\n      return SubtleSpinnerIcon\n    }\n    return SearchIcon\n  }, [loadingVariant, searchInputValue])\n\n  useReconnectingToast(!connected)\n\n  return (\n    <>\n      <Box paddingX={3} paddingBottom={3}>\n        <TextInput\n          aria-label={t('panes.document-list-pane.search-input.aria-label')}\n          autoComplete=\"off\"\n          border={false}\n          clearButton={Boolean(searchQuery)}\n          fontSize={[2, 2, 1]}\n          icon={textInputIcon}\n          iconRight={\n            !connected || (loadingVariant === 'subtle' && !searchInputValue)\n              ? DelayedSubtleSpinnerIcon\n              : null\n          }\n          onChange={handleQueryChange}\n          onClear={handleClearSearch}\n          onKeyDown={handleSearchKeyDown}\n          padding={2}\n          placeholder={t('panes.document-list-pane.search-input.placeholder')}\n          radius={2}\n          ref={setSearchInputElement}\n          spellCheck={false}\n          value={searchInputValue}\n        />\n      </Box>\n      <DocumentListPaneContent\n        key={paneKey}\n        childItemId={childItemId}\n        error={error}\n        filterIsSimpleTypeConstraint={!!typeName}\n        hasMaxItems={items.length === FULL_LIST_LIMIT}\n        hasSearchQuery={Boolean(searchQuery)}\n        isActive={isActive}\n        isLazyLoading={isLoadingFullList}\n        isLoading={isLoading}\n        autoRetry={autoRetry}\n        canRetry={canRetry}\n        retryCount={retryCount}\n        isRetrying={isRetrying}\n        isConnected={connected}\n        items={items}\n        layout={layout}\n        muted={loadingVariant === 'subtle'}\n        loadingVariant={loadingVariant}\n        onEndReached={onLoadFullList}\n        onRetry={onRetry}\n        paneTitle={title}\n        searchInputElement={searchInputElement}\n        showIcons={showIcons}\n      />\n    </>\n  )\n})\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, type ReactNode, useMemo} from 'react'\nimport {type GeneralPreviewLayoutKey, type InitialValueTemplateItem} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../ui-components'\nimport {\n  BackLink,\n  PaneHeader as StructurePaneHeader,\n  PaneHeaderActions,\n  usePane,\n} from '../../components'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {type SortOrder} from './types'\n\ninterface PaneHeaderProps {\n  contentAfter?: ReactNode\n  index: number\n  initialValueTemplates?: InitialValueTemplateItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  menuItems?: PaneMenuItem[]\n  setLayout: (layout: GeneralPreviewLayoutKey) => void\n  setSortOrder: (sortOrder: SortOrder) => void\n  title: string\n}\n\nexport const PaneHeader = memo(\n  ({\n    contentAfter,\n    index,\n    initialValueTemplates = [],\n    menuItemGroups = [],\n    menuItems = [],\n    setLayout,\n    setSortOrder,\n    title,\n  }: PaneHeaderProps) => {\n    const {features} = useStructureTool()\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    const actionHandlers = useMemo((): Record<string, StructureToolPaneActionHandler> => {\n      return {\n        setLayout: ({layout: value}: {layout: GeneralPreviewLayoutKey}) => {\n          setLayout(value)\n        },\n        setSortOrder: (sort: SortOrder) => {\n          setSortOrder(sort)\n        },\n      }\n    }, [setLayout, setSortOrder])\n\n    return (\n      <TooltipDelayGroupProvider>\n        <StructurePaneHeader\n          actions={\n            <PaneHeaderActions\n              initialValueTemplateItems={initialValueTemplates}\n              actionHandlers={actionHandlers}\n              menuItemGroups={menuItemGroups}\n              menuItems={menuItems}\n            />\n          }\n          backButton={\n            features.backButton &&\n            index > 0 && (\n              <Button\n                as={BackLink}\n                data-as=\"a\"\n                icon={ArrowLeftIcon}\n                mode=\"bleed\"\n                tooltipProps={{content: 'Back'}}\n              />\n            )\n          }\n          contentAfter={contentAfter}\n          tabIndex={tabIndex}\n          title={title}\n        />\n      </TooltipDelayGroupProvider>\n    )\n  },\n)\n\nPaneHeader.displayName = 'Memo(PaneHeader)'\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {type SanityDocument} from '@sanity/client'\nimport {Checkbox} from '@sanity/ui'\nimport {type CellContext} from '@tanstack/react-table'\nimport {type MouseEvent, useCallback} from 'react'\n\nexport function DocumentSheetListSelect(props: CellContext<SanityDocument, unknown>) {\n  const {row, table} = props\n\n  const {selectedAnchor, setSelectedAnchor} = table.options.meta || {}\n\n  const handleOnClick = useCallback(\n    (e: MouseEvent<HTMLInputElement>) => {\n      if (e.shiftKey && selectedAnchor !== null && selectedAnchor !== undefined) {\n        const shiftClickIndex = row.index\n        const lowerIndex = shiftClickIndex < selectedAnchor ? shiftClickIndex : selectedAnchor\n        const upperIndex = shiftClickIndex < selectedAnchor ? selectedAnchor : shiftClickIndex\n\n        const additionalSelectedRows = table\n          .getRowModel()\n          .flatRows.slice(lowerIndex, upperIndex + 1)\n          .map(({id}) => id)\n\n        const currentSelectedRows = table.getSelectedRowModel().rows.map(({id}) => id)\n        table.setRowSelection(() =>\n          [...additionalSelectedRows, ...currentSelectedRows].reduce(\n            (nextSelectedRows, rowId) => ({...nextSelectedRows, [rowId]: true}),\n            {},\n          ),\n        )\n      } else if (setSelectedAnchor) {\n        const isRowCurrentlySelected = row.getIsSelected()\n        if (isRowCurrentlySelected) {\n          // about to unselect so invalidate current anchor\n          setSelectedAnchor(null)\n        } else {\n          // override anchor with new selection index\n          setSelectedAnchor(row.index)\n        }\n\n        row.toggleSelected()\n      }\n    },\n    [selectedAnchor, row, setSelectedAnchor, table],\n  )\n\n  return (\n    <Checkbox\n      style={{paddingLeft: 4}}\n      checked={props.row.getIsSelected()}\n      disabled={!props.row.getCanSelect()}\n      // onChange doesn't have shiftKey in event, but want to control this checkbox\n      // need to define noop onChange to suppress the warning\n      onChange={() => null}\n      onClick={handleOnClick}\n    />\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {type Table} from '@tanstack/react-table'\nimport {type ReactNode, useCallback, useContext, useEffect, useMemo, useState} from 'react'\nimport {DocumentSheetListContext} from 'sanity/_singletons'\n\ninterface DocumentSheetListProviderProps {\n  children?: ReactNode\n  table: Table<SanityDocument>\n}\n\ntype SelectedCellDetails = {\n  colId: string\n  rowIndex: number\n  state: 'focused' | 'selected'\n} | null\n\n/** @internal */\nexport interface DocumentSheetListContextValue {\n  focusAnchorCell: () => void\n  resetFocusSelection: () => void\n  setSelectedAnchorCell: (colId: string, rowIndex: number) => void\n  getStateByCellId: (\n    colId: string,\n    rowIndex: number,\n  ) => 'focused' | 'selectedAnchor' | 'selectedRange' | null\n  submitFocusedCell: () => void\n}\n\n/** @internal */\nexport const useDocumentSheetListContext = (): DocumentSheetListContextValue => {\n  const context = useContext(DocumentSheetListContext)\n\n  if (context === undefined) {\n    throw new Error('useDocumentSheetListContext must be used within an DocumentSheetListProvider')\n  }\n  return context\n}\n\n/** @internal */\nexport function DocumentSheetListProvider({\n  children,\n  table,\n}: DocumentSheetListProviderProps): ReactNode {\n  const [selectedAnchorCellDetails, setSelectedAnchorCellDetails] =\n    useState<SelectedCellDetails>(null)\n  const [selectedRangeCellIndexes, setSelectedRangeCellIndexes] = useState<number[]>([])\n\n  const clearAndSetFocusSelection = useCallback(\n    (nextAnchorDetails: SelectedCellDetails = null) => {\n      if (\n        selectedAnchorCellDetails?.state === 'focused' &&\n        document.activeElement instanceof HTMLElement\n      ) {\n        document.activeElement.blur()\n      }\n\n      setSelectedAnchorCellDetails(nextAnchorDetails)\n      setSelectedRangeCellIndexes([])\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const resetFocusSelection = useCallback(\n    () => clearAndSetFocusSelection(),\n    [clearAndSetFocusSelection],\n  )\n\n  const changeSelectionColumn = useCallback(\n    (direction: 'left' | 'right') => {\n      if (!selectedAnchorCellDetails) return\n\n      const visibleColumns = table.getVisibleLeafColumns()\n      const columnIndexAfterMove =\n        visibleColumns.findIndex((col) => col.id === selectedAnchorCellDetails.colId) +\n        (direction === 'left' ? -1 : 1)\n\n      if (columnIndexAfterMove < 0 || columnIndexAfterMove >= visibleColumns.length) return\n\n      clearAndSetFocusSelection({\n        colId: visibleColumns[columnIndexAfterMove].id,\n        rowIndex: selectedAnchorCellDetails.rowIndex,\n        state: 'selected',\n      })\n    },\n    [clearAndSetFocusSelection, selectedAnchorCellDetails, table],\n  )\n\n  const changeSelectionRange = useCallback(\n    (direction: 'up' | 'down') => {\n      if (!selectedAnchorCellDetails) return\n\n      setSelectedRangeCellIndexes((previousSelection) => {\n        const {rowIndex: anchorIndex} = selectedAnchorCellDetails\n        const getNextIndex = (startingIndex: number) =>\n          startingIndex + (direction === 'down' ? 1 : -1)\n        // if no cells are selected, select the cell in the direction\n        if (!previousSelection.length) {\n          const firstSelectedIndex = getNextIndex(anchorIndex)\n          if (firstSelectedIndex < 0) return []\n          return [firstSelectedIndex]\n        }\n        const lastIndexSelected = previousSelection[previousSelection.length - 1]\n        const nextIndex = getNextIndex(lastIndexSelected)\n\n        // if the cell in the direction is out of bounds, return the previous selection\n        if (nextIndex < 0) return previousSelection\n\n        // if the cell in the direction is the same as the focused cell, deselect all cells\n        if (nextIndex === anchorIndex) return []\n\n        // if the cell in the direction is already selected, deselect the last selected cell\n        if (previousSelection.includes(nextIndex)) {\n          return previousSelection.slice(0, -1)\n        }\n\n        return [...previousSelection, nextIndex]\n      })\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const setSelectedAnchorCell = useCallback(\n    (colId: string, rowIndex: number) => {\n      clearAndSetFocusSelection({colId, rowIndex, state: 'selected'})\n    },\n    [clearAndSetFocusSelection],\n  )\n\n  const handleEscapePress = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n    if (selectedRangeCellIndexes.length) {\n      // only clear selected range if it exists\n      setSelectedRangeCellIndexes([])\n    } else {\n      const nextAnchorCellDetails: SelectedCellDetails =\n        selectedAnchorCellDetails.state === 'selected'\n          ? null\n          : {\n              ...selectedAnchorCellDetails,\n              state: 'selected',\n            }\n      clearAndSetFocusSelection(nextAnchorCellDetails)\n    }\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails, selectedRangeCellIndexes.length])\n\n  const handleUpDownKey = useCallback(\n    (isShiftKey: boolean, key: string) => {\n      if (!selectedAnchorCellDetails) return\n\n      const direction = key === 'ArrowDown' ? 'down' : 'up'\n      const offset = direction === 'down' ? 1 : -1\n\n      if (isShiftKey) {\n        changeSelectionRange(direction)\n      } else {\n        const newSelectedCellRowIndex = selectedAnchorCellDetails.rowIndex + offset\n        if (newSelectedCellRowIndex < 0) return\n\n        setSelectedAnchorCell(selectedAnchorCellDetails.colId, newSelectedCellRowIndex)\n      }\n    },\n    [changeSelectionRange, selectedAnchorCellDetails, setSelectedAnchorCell],\n  )\n\n  const handleAnchorKeydown = useCallback(\n    (event: KeyboardEvent) => {\n      if (!selectedAnchorCellDetails) return\n\n      const {key, shiftKey} = event\n\n      switch (key) {\n        case 'Shift':\n          break // shift allow should do nothing\n\n        case 'Escape':\n          handleEscapePress()\n          break\n\n        case 'ArrowDown':\n        case 'ArrowUp':\n          event.preventDefault()\n          handleUpDownKey(shiftKey, key)\n          break\n\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          // when cell is focused, arrows should have default behavior\n          // only prevent default when cell is selected\n          if (selectedAnchorCellDetails.state === 'selected') {\n            event.preventDefault()\n            changeSelectionColumn(key === 'ArrowLeft' ? 'left' : 'right')\n          }\n          break\n\n        default:\n          break\n      }\n    },\n    [selectedAnchorCellDetails, handleEscapePress, handleUpDownKey, changeSelectionColumn],\n  )\n\n  const handleAnchorClick = useCallback(\n    (event: MouseEvent) => {\n      if (!selectedAnchorCellDetails) return\n      const isClickInAnchorCell = document\n        .getElementById(\n          `cell-${selectedAnchorCellDetails.colId}-${selectedAnchorCellDetails.rowIndex}`,\n        )\n        ?.contains(event.target as Node)\n\n      if (!isClickInAnchorCell) resetFocusSelection()\n    },\n    [resetFocusSelection, selectedAnchorCellDetails],\n  )\n\n  useEffect(() => {\n    if (selectedAnchorCellDetails) {\n      document.addEventListener('keydown', handleAnchorKeydown)\n      document.addEventListener('click', handleAnchorClick)\n    }\n\n    return () => {\n      if (selectedAnchorCellDetails) {\n        document.removeEventListener('keydown', handleAnchorKeydown)\n        document.removeEventListener('click', handleAnchorClick)\n      }\n    }\n  }, [handleAnchorClick, handleAnchorKeydown, selectedAnchorCellDetails])\n\n  const focusAnchorCell = useCallback(\n    () =>\n      setSelectedAnchorCellDetails((anchorCellDetails) => {\n        if (!anchorCellDetails) return null\n\n        return {...anchorCellDetails, state: 'focused'}\n      }),\n    [],\n  )\n\n  const getStateByCellId = useCallback(\n    (colId: string, rowIndex: number) => {\n      if (selectedAnchorCellDetails?.colId !== colId) return null\n\n      if (selectedAnchorCellDetails.rowIndex === rowIndex)\n        return selectedAnchorCellDetails.state === 'focused' ? 'focused' : 'selectedAnchor'\n\n      if (selectedRangeCellIndexes.includes(rowIndex)) return 'selectedRange'\n\n      return null\n    },\n    [selectedAnchorCellDetails, selectedRangeCellIndexes],\n  )\n\n  const submitFocusedCell = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n\n    clearAndSetFocusSelection({\n      colId: selectedAnchorCellDetails.colId,\n      rowIndex: selectedAnchorCellDetails.rowIndex + 1,\n      state: 'selected',\n    })\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails])\n\n  const value = useMemo<DocumentSheetListContextValue>(\n    () => ({\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    }),\n    [\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    ],\n  )\n\n  return (\n    <DocumentSheetListContext.Provider value={value}>{children}</DocumentSheetListContext.Provider>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\nimport {type ObjectFieldType} from '@sanity/types'\nimport {Select, TextInput} from '@sanity/ui'\nimport {type Cell, type CellContext, flexRender} from '@tanstack/react-table'\nimport {type MouseEventHandler, useCallback, useEffect, useRef, useState} from 'react'\nimport {type SanityDocument} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentSheetListContext} from './DocumentSheetListProvider'\n\nconst DataCell = styled.td<{width: number}>`\n  display: flex;\n  overflow: hidden;\n  box-sizing: border-box;\n  width: ${({width}) => width}px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-bg-color);\n`\n\nconst PinnedDataCell = styled(DataCell)`\n  position: sticky;\n  z-index: 2;\n`\n\ninterface SheetListCellInnerProps extends CellContext<SanityDocument, unknown> {\n  fieldType: ObjectFieldType\n}\n\ntype CellInputElement = HTMLInputElement | HTMLSelectElement\ntype InputRef = CellInputElement | null\n\n/** @internal */\nexport function SheetListCellInner(props: SheetListCellInnerProps) {\n  const {getValue, column, row, fieldType} = props\n  const cellId = `cell-${column.id}-${row.index}`\n  const [renderValue, setRenderValue] = useState<string>(getValue() as string)\n  const [isDirty, setIsDirty] = useState(false)\n  const inputRef = useRef<InputRef>(null)\n  const {\n    focusAnchorCell,\n    resetFocusSelection,\n    setSelectedAnchorCell,\n    getStateByCellId,\n    submitFocusedCell,\n  } = useDocumentSheetListContext()\n  const cellState = getStateByCellId(column.id, row.index)\n\n  const handleOnFocus = useCallback(() => {\n    // reselect in cases where focus achieved without initial mousedown\n    setSelectedAnchorCell(column.id, row.index)\n    focusAnchorCell()\n  }, [column.id, focusAnchorCell, row.index, setSelectedAnchorCell])\n  const {patchDocument} = props.table.options.meta || {}\n\n  const handleProgrammaticFocus = () => {\n    inputRef.current?.focus()\n    if (inputRef.current instanceof HTMLInputElement) {\n      inputRef.current.select()\n    }\n  }\n\n  const handleOnMouseDown: MouseEventHandler<CellInputElement> = (event) => {\n    if (event.detail === 2) {\n      handleProgrammaticFocus()\n    } else {\n      event.preventDefault()\n      setSelectedAnchorCell(column.id, row.index)\n    }\n  }\n\n  const handleOnEnterDown = useCallback(\n    (event: KeyboardEvent) => {\n      const {key} = event\n      if (key === 'Enter') {\n        if (cellState === 'selectedAnchor') handleProgrammaticFocus()\n        if (cellState === 'focused') submitFocusedCell()\n      }\n    },\n    [cellState, submitFocusedCell],\n  )\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsDirty(true)\n    setRenderValue(event.target.value)\n  }\n\n  const handleOnBlur = () => {\n    if (isDirty) {\n      patchDocument?.(row.id, column.id, renderValue)\n      setIsDirty(false)\n    }\n    resetFocusSelection()\n  }\n\n  const handlePaste = useCallback(\n    (event: ClipboardEvent) => {\n      const clipboardData = event.clipboardData?.getData('Text')\n\n      if (typeof clipboardData === 'string' || typeof clipboardData === 'number') {\n        setRenderValue(clipboardData)\n        // patch immediately when pasting\n        patchDocument?.(row.id, column.id, clipboardData)\n      }\n    },\n    [column.id, patchDocument, row.id],\n  )\n\n  const handleCopy = useCallback(() => {\n    navigator.clipboard.writeText(renderValue.toString())\n  }, [renderValue])\n\n  useEffect(() => {\n    if (cellState === 'selectedAnchor' || cellState === 'focused')\n      // only listen for enter key when cell is focused or anchor\n      document.addEventListener('keydown', handleOnEnterDown)\n    if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n      // if cell is selected, paste events should be handled\n      document.addEventListener('paste', handlePaste)\n\n    if (cellState === 'selectedAnchor')\n      // only allow copying when cell is selected anchor\n      document.addEventListener('copy', handleCopy)\n\n    return () => {\n      if (cellState === 'selectedAnchor' || cellState === 'focused')\n        document.removeEventListener('keydown', handleOnEnterDown)\n      if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n        document.removeEventListener('paste', handlePaste)\n      if (cellState === 'selectedAnchor') document.removeEventListener('copy', handleCopy)\n    }\n  }, [\n    cellId,\n    cellState,\n    column.id,\n    getStateByCellId,\n    handleCopy,\n    handleOnEnterDown,\n    handlePaste,\n    row.index,\n  ])\n\n  const getBorderStyle = () => {\n    if (cellState === 'focused') return '2px solid blue'\n    if (cellState === 'selectedRange') return '1px solid green'\n    if (cellState === 'selectedAnchor') return '1px solid blue'\n\n    return '1px solid transparent'\n  }\n\n  const inputProps = {\n    'onFocus': handleOnFocus,\n    'onBlur': handleOnBlur,\n    'onMouseDown': handleOnMouseDown,\n    'aria-selected': !!cellState,\n    'data-testid': cellId,\n    'id': cellId,\n    'ref': (ref: InputRef) => {\n      inputRef.current = ref\n    },\n  }\n\n  if (fieldType.name === 'boolean') {\n    return (\n      <Select\n        {...inputProps}\n        onChange={() => null}\n        radius={0}\n        style={{\n          boxShadow: 'none',\n          border: getBorderStyle(),\n          padding: 0,\n        }}\n        value={JSON.stringify(renderValue)}\n      >\n        <option value=\"True\">True</option>\n        <option value=\"False\">False</option>\n      </Select>\n    )\n  }\n\n  return (\n    <TextInput\n      {...inputProps}\n      size={0}\n      radius={0}\n      border={false}\n      style={{\n        border: getBorderStyle(),\n        padding: '22px 16px',\n      }}\n      value={\n        typeof renderValue === 'string' || typeof renderValue === 'number'\n          ? renderValue\n          : JSON.stringify(renderValue)\n      }\n      onChange={handleOnChange}\n    />\n  )\n}\n\n/** @internal */\nexport function SheetListCell(cell: Cell<SanityDocument, unknown>) {\n  const isPinned = cell.column.getIsPinned()\n  const Cell = isPinned ? PinnedDataCell : DataCell\n  const borderWidth = isPinned && cell.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <Cell\n      key={cell.row.original._id + cell.id}\n      style={{\n        left: cell.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      width={cell.column.getSize()}\n    >\n      {flexRender(cell.column.columnDef.cell, cell.getContext?.())}\n    </Cell>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isObjectSchemaType, type ObjectSchemaType} from '@sanity/types'\nimport {Box, Checkbox, Flex, Text} from '@sanity/ui'\nimport {\n  type AccessorKeyColumnDef,\n  createColumnHelper,\n  type GroupColumnDef,\n  type VisibilityState,\n} from '@tanstack/react-table'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPreviewStore,\n  DocumentStatusIndicator,\n  getPreviewStateObservable,\n  type SanityDocument,\n  type SchemaType,\n  useDocumentPreviewStore,\n  useDocumentVersionInfo,\n} from 'sanity'\n\nimport {DocumentSheetListSelect} from './DocumentSheetListSelect'\nimport {SheetListCellInner} from './SheetListCell'\n\nexport const VISIBLE_COLUMN_LIMIT = 5\n\nconst PreviewCell = (props: {\n  documentPreviewStore: DocumentPreviewStore\n  schemaType: SchemaType\n  row: {\n    original: SanityDocument\n  }\n}) => {\n  const {documentPreviewStore, row, schemaType} = props\n  const previewStateObservable = useMemo(\n    () => getPreviewStateObservable(documentPreviewStore, schemaType, row.original._id),\n    [documentPreviewStore, row.original._id, schemaType],\n  )\n\n  const versionsInfo = useDocumentVersionInfo(row.original._id)\n\n  const {snapshot, isLoading} = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n  })\n  if (isLoading) {\n    return (\n      <Text size={1} muted>\n        Loading...\n      </Text>\n    )\n  }\n  const displayValue = (snapshot?.title ?? 'Untitled') as string\n\n  return (\n    <Flex align=\"center\" gap={3}>\n      <DocumentStatusIndicator\n        draft={versionsInfo.draft}\n        published={versionsInfo.published}\n        versions={undefined}\n      />\n      <Text size={1}>{displayValue}</Text>\n    </Flex>\n  )\n}\n\nconst columnHelper = createColumnHelper<SanityDocument>()\nconst SUPPORTED_FIELDS = ['string', 'number', 'boolean']\n\ntype Columns = (\n  | AccessorKeyColumnDef<SanityDocument, unknown>\n  | GroupColumnDef<SanityDocument, unknown>\n)[]\n\nconst getColsFromSchemaType = (schemaType: ObjectSchemaType, parentalField?: string): Columns => {\n  return schemaType.fields.reduce<Columns>((tableColumns: Columns, field) => {\n    const {type, name} = field\n    if (SUPPORTED_FIELDS.includes(type.name)) {\n      const nextCol = columnHelper.accessor(\n        // accessor must use dot notation for internal tanstack method of reading cell data\n        parentalField ? `${parentalField}.${field.name}` : field.name,\n        {\n          id: parentalField ? `${parentalField}_${field.name}` : field.name,\n          header: field.type.title,\n          enableHiding: true,\n          cell: (info) => <SheetListCellInner {...info} fieldType={type} />,\n        },\n      )\n\n      return [...tableColumns, nextCol]\n    }\n\n    // if first layer nested object\n    if (type.name === 'object' && isObjectSchemaType(type) && !parentalField) {\n      return [\n        ...tableColumns,\n        columnHelper.group({header: name, columns: getColsFromSchemaType(type, field.name)}),\n      ]\n    }\n\n    return tableColumns\n  }, [])\n}\n\n// Type guard function to check if a column is of type GroupColumnDef\nfunction isAccessorKeyColumnDef(\n  column: Columns[number],\n): column is AccessorKeyColumnDef<SanityDocument, unknown> {\n  return 'accessorKey' in column\n}\nfunction isGroupColumnDef(\n  column: AccessorKeyColumnDef<SanityDocument, unknown> | GroupColumnDef<SanityDocument, unknown>,\n): column is GroupColumnDef<SanityDocument, unknown> {\n  return 'columns' in column\n}\n\nconst flatColumns = (cols: Columns): AccessorKeyColumnDef<SanityDocument, unknown>[] => {\n  return cols.flatMap((col) => {\n    if (isAccessorKeyColumnDef(col)) {\n      return col\n    }\n    if (isGroupColumnDef(col)) {\n      return col.columns ? flatColumns(col.columns) : []\n    }\n    return []\n  })\n}\n\nexport function useDocumentSheetColumns(documentSchemaType?: ObjectSchemaType) {\n  const documentPreviewStore = useDocumentPreviewStore()\n\n  const columns: Columns = useMemo(() => {\n    if (!documentSchemaType) {\n      return []\n    }\n    return [\n      columnHelper.display({\n        id: 'selected',\n        enableHiding: false,\n        header: (info) => (\n          <Box>\n            <Checkbox\n              style={{paddingLeft: 4}}\n              indeterminate={info.table.getIsSomeRowsSelected()}\n              onChange={info.table.getToggleAllPageRowsSelectedHandler()}\n            />\n            {/* eslint-disable-next-line i18next/no-literal-string */}\n            {info.table.getSelectedRowModel().rows.length} selected\n          </Box>\n        ),\n        cell: DocumentSheetListSelect,\n      }),\n      columnHelper.accessor('Preview', {\n        enableHiding: false,\n        id: 'Preview',\n        cell: (info) => {\n          return (\n            <PreviewCell\n              {...info}\n              documentPreviewStore={documentPreviewStore}\n              schemaType={documentSchemaType}\n            />\n          )\n        },\n      }),\n      ...getColsFromSchemaType(documentSchemaType),\n    ]\n  }, [documentPreviewStore, documentSchemaType])\n\n  const [initialColumnsVisibility]: [VisibilityState, number] = useMemo(\n    () =>\n      flatColumns(columns).reduce<[VisibilityState, number]>(\n        ([accCols, countAllowedVisible], column) => {\n          if (!column.id) throw new Error('Column must have an id')\n          const visibilityKey = column.id\n\n          // this column is always visible\n          if (!column.enableHiding) {\n            return [{...accCols, [visibilityKey]: true}, countAllowedVisible]\n          }\n\n          // have already reached column visibility limit, hide column by default\n          if (countAllowedVisible === VISIBLE_COLUMN_LIMIT) {\n            return [{...accCols, [visibilityKey]: false}, countAllowedVisible]\n          }\n\n          return [{...accCols, [visibilityKey]: true}, countAllowedVisible + 1]\n        },\n        [{}, 0],\n      ),\n    [columns],\n  )\n\n  return {columns, initialColumnsVisibility}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {Box, Checkbox, Flex, Menu, Stack, Text} from '@sanity/ui'\nimport {type Column, type Table} from '@tanstack/react-table'\nimport {useCallback} from 'react'\nimport {type SanityDocument, useTranslation} from 'sanity'\n\nimport {Button, MenuButton} from '../../../../ui-components'\nimport {VISIBLE_COLUMN_LIMIT} from './useDocumentSheetColumns'\n\ntype ColumnsControlProps = {\n  table: Table<SanityDocument>\n}\n\nexport function ColumnsControl({table}: ColumnsControlProps) {\n  const {t} = useTranslation()\n  const isVisibleLimitReached =\n    table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length >= VISIBLE_COLUMN_LIMIT\n\n  const setInitialColumns = useCallback(() => {\n    table.resetColumnVisibility()\n  }, [table])\n\n  const handleColumnOnChange = (column: Column<SanityDocument, unknown>) => () => {\n    column.toggleVisibility()\n  }\n\n  const getColumnVisibilityDisabled = (column: Column<SanityDocument, unknown>) => {\n    const isColumnVisible = column.getIsVisible()\n    const isSingleColumnVisible =\n      table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length === 1\n\n    return (isVisibleLimitReached && !isColumnVisible) || (isSingleColumnVisible && isColumnVisible)\n  }\n\n  return (\n    <MenuButton\n      button={<Button mode=\"bleed\" text={t('sheet-list.edit-columns')} />}\n      id=\"columns-control\"\n      menu={\n        <Menu padding={3} paddingTop={4} style={{width: 240}}>\n          <Flex direction=\"column\" height=\"fill\" gap={3}>\n            <Text weight=\"semibold\" size={1}>\n              {t('sheet-list.select-fields')}\n            </Text>\n            <Flex style={{flex: '1 1 auto', maxHeight: 320, overflowY: 'scroll'}}>\n              <Stack>\n                {table\n                  .getAllLeafColumns()\n                  .filter((column) => column.getCanHide())\n                  .map((column) => (\n                    <Flex key={column.id} marginY={2} align=\"center\">\n                      <Checkbox\n                        readOnly={getColumnVisibilityDisabled(column)}\n                        checked={column.getIsVisible()}\n                        onChange={handleColumnOnChange(column)}\n                        id={`col-visibility-${column.id}`}\n                        style={{display: 'block'}}\n                      />\n                      <Box flex={1} paddingLeft={3}>\n                        <Text size={1}>\n                          <label htmlFor={`col-visibility-${column.id}`}>\n                            {column.columnDef.header?.toString()}\n                          </label>\n                        </Text>\n                      </Box>\n                    </Flex>\n                  ))}\n              </Stack>\n            </Flex>\n            <Button\n              width=\"fill\"\n              mode=\"ghost\"\n              text={t('sheet-list.reset-columns')}\n              onClick={setInitialColumns}\n            />\n          </Flex>\n        </Menu>\n      }\n      placement=\"bottom\"\n      popover={{portal: true}}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {Filters, SearchHeader, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nconst SearchContainer = styled(Flex)`\n  flex-shrink: 0;\n`\n\nexport function DocumentSheetListFilter() {\n  const {\n    state: {filtersVisible},\n  } = useSearchState()\n\n  return (\n    <SearchContainer>\n      <SearchHeader />\n      {filtersVisible && <Filters showTypeFilter={false} />}\n    </SearchContainer>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {CloseIcon, EllipsisHorizontalIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Menu, Text} from '@sanity/ui'\nimport {flexRender, type Header as HeaderType, type HeaderGroup} from '@tanstack/react-table'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../../../ui-components'\n\nconst Header = styled.th<{width: number}>`\n  margin: 16px;\n  z-index: 1;\n  padding: 22px 0px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-badge-default-bg-color);\n  box-sizing: border-box;\n  text-align: left;\n  width: ${({width}) => width}px;\n  max-width: ${({width}) => width}px;\n`\n\nconst PinnedHeader = styled(Header)`\n  position: sticky;\n  z-index: 2;\n`\n\nconst HoverMenu = styled.div`\n  visibility: hidden;\n\n  ${Header}:hover & {\n    visibility: visible;\n  }\n`\n\ntype DocumentSheetListHeaderProps = {\n  header: HeaderType<SanityDocument, unknown>\n  headerGroup: HeaderGroup<SanityDocument>\n}\n\nexport function DocumentSheetListHeader(props: DocumentSheetListHeaderProps) {\n  const {header, headerGroup} = props\n  const {t} = useTranslation()\n\n  const isPinned = header.column.getIsPinned()\n\n  const headerTitle =\n    headerGroup.depth > 0 && !header.column.parent ? null : (\n      <Text size={1} weight=\"semibold\" textOverflow=\"ellipsis\">\n        {flexRender(header.column.columnDef.header, header.getContext())}\n      </Text>\n    )\n\n  const HeaderTag = isPinned ? PinnedHeader : Header\n\n  const canShowHeaderMenu =\n    header.column.getCanHide() &&\n    (headerGroup.depth === 0 ? !header.column.columns.length : header.column.parent)\n\n  const borderWidth = isPinned && header.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <HeaderTag\n      key={header.id}\n      style={{\n        left: header.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      data-testid={`header-${header.id}`}\n      width={header.getSize()}\n    >\n      <Flex justify=\"space-between\" marginX={2} align=\"baseline\">\n        <Tooltip delay={500} content={headerTitle}>\n          <Box style={{boxSizing: 'border-box'}} marginLeft={3} marginRight={3}>\n            {headerTitle}\n          </Box>\n        </Tooltip>\n        {canShowHeaderMenu && (\n          <HoverMenu>\n            <MenuButton\n              button={\n                <Button\n                  tooltipProps={{content: 'Open field menu'}}\n                  mode=\"bleed\"\n                  icon={EllipsisHorizontalIcon}\n                  data-testid=\"field-menu-button\"\n                />\n              }\n              id=\"field menu\"\n              popover={{placement: 'bottom-end'}}\n              menu={\n                <Menu>\n                  <MenuItem\n                    text={t('sheet-list.hide-field')}\n                    icon={CloseIcon}\n                    onClick={() => header.column.toggleVisibility()}\n                  />\n                </Menu>\n              }\n            />\n          </HoverMenu>\n        )}\n      </Flex>\n    </HeaderTag>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  DoubleChevronLeftIcon,\n  DoubleChevronRightIcon,\n} from '@sanity/icons'\nimport {Flex, Text} from '@sanity/ui'\nimport {type Table} from '@tanstack/react-table'\nimport {type SanityDocument} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../ui-components'\n\nexport function DocumentSheetListPaginator({table}: {table: Table<SanityDocument>}) {\n  return (\n    <TooltipDelayGroupProvider>\n      <Flex gap={3} align={'center'}>\n        <Button\n          onClick={() => table.setPageIndex(0)}\n          disabled={!table.getCanPreviousPage()}\n          icon={DoubleChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to first page',\n          }}\n        />\n        <Button\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n          icon={ChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to previous page',\n          }}\n        />\n        <Text style={{whiteSpace: 'nowrap'}}>\n          {table.getState().pagination.pageIndex + 1} of {table.getPageCount()}\n        </Text>\n\n        <Button\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n          icon={ChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to next page',\n          }}\n        />\n        <Button\n          onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n          disabled={!table.getCanNextPage()}\n          icon={DoubleChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to last page',\n          }}\n        />\n        <select\n          value={table.getState().pagination.pageSize}\n          onChange={(e) => {\n            table.setPageSize(Number(e.target.value))\n          }}\n        >\n          {[25, 50, 100].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              {pageSize}\n            </option>\n          ))}\n        </select>\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n}\n","import {type ListenEvent, type ListenOptions} from '@sanity/client'\nimport {useCallback, useEffect, useMemo, useReducer, useState} from 'react'\nimport {catchError, of} from 'rxjs'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS, getDraftId, type SanityDocument, useClient} from 'sanity'\n\ninterface DocumentDeletedAction {\n  id: string\n  type: 'DOCUMENT_DELETED'\n}\n\ninterface DocumentUpdatedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_UPDATED'\n}\n\ninterface DocumentsSetAction {\n  documents: SanityDocument[]\n  type: 'DOCUMENTS_SET'\n}\n\ninterface DocumentReceivedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_RECEIVED'\n}\n\nexport type DocumentsReducerAction =\n  | DocumentDeletedAction\n  | DocumentUpdatedAction\n  | DocumentsSetAction\n  | DocumentReceivedAction\n\nexport interface DocumentsReducerState {\n  documents: Record<string, SanityDocument>\n}\n\nfunction createDocumentsSet(documents: SanityDocument[]) {\n  const documentsById = documents.reduce((acc, doc) => ({...acc, [doc._id]: doc}), {})\n  return documentsById\n}\n\nfunction documentsReducer(\n  state: DocumentsReducerState,\n  action: DocumentsReducerAction,\n): DocumentsReducerState {\n  switch (action.type) {\n    case 'DOCUMENTS_SET': {\n      // Create an object with the documents id as key\n      const documents = createDocumentsSet(action.documents)\n\n      return {\n        ...state,\n        documents: documents,\n      }\n    }\n\n    case 'DOCUMENT_RECEIVED': {\n      const nextDocumentResult = action.payload as SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [nextDocumentResult._id]: nextDocumentResult,\n        },\n      }\n    }\n\n    case 'DOCUMENT_DELETED': {\n      const {[action.id]: _, ...restDocuments} = state.documents\n\n      return {\n        ...state,\n        documents: restDocuments,\n      }\n    }\n\n    case 'DOCUMENT_UPDATED': {\n      const updatedDocument = action.payload\n      const id = updatedDocument._id as string\n      const document = state.documents[id]\n\n      const nextDocument = {\n        // Add existing document data\n        ...document,\n        // Add incoming document data\n        ...updatedDocument,\n      } satisfies SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [id]: nextDocument,\n        },\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst LISTEN_OPTIONS: ListenOptions = {\n  events: ['welcome', 'mutation', 'reconnect'],\n  includeResult: true,\n  visibility: 'query',\n  includeAllVersions: true,\n  tag: 'document-sheet-list-store',\n}\n\n/**\n * TODO:\n * [] Lazy load more documents, reduce initial fetch.\n * [] Add support for sorting and filtering.\n * []  Make a projection of the query according to the schema. e.g. get only the primitive fields and the _id to reduce the data payload.\n */\nexport function useDocumentSheetListStore({\n  filter,\n  params,\n  apiVersion,\n}: {\n  filter: string\n  params?: Record<string, unknown>\n  apiVersion?: string\n}) {\n  const QUERY = `*[${filter}][0...2000]`\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const [state, dispatch] = useReducer(documentsReducer, {\n    documents: {},\n  })\n  const [isLoading, setIsLoading] = useState<boolean>(client !== null)\n  const [error, setError] = useState<Error | null>(null)\n\n  const initialFetch = useCallback(async () => {\n    if (!client) {\n      setIsLoading(false)\n      return\n    }\n    try {\n      const res = await client.fetch(QUERY, params)\n      dispatch({type: 'DOCUMENTS_SET', documents: res})\n      setIsLoading(false)\n    } catch (err) {\n      setError(err)\n    }\n  }, [client, params, QUERY])\n\n  const handleListenerEvent = useCallback(\n    async (event: ListenEvent<Record<string, SanityDocument>>) => {\n      // Fetch all documents on initial connection\n      if (event.type === 'welcome') {\n        setIsLoading(true)\n        await initialFetch()\n        setIsLoading(false)\n      }\n\n      // The reconnect event means that we are trying to reconnect to the realtime listener.\n      // In this case we set loading to true to indicate that we're trying to\n      // reconnect. Once a connection has been established, the welcome event\n      // will be received and we'll fetch all documents again (above).\n      if (event.type === 'reconnect') {\n        setIsLoading(true)\n      }\n\n      // Handle mutations (create, update, delete) from the realtime listener\n      // and update the documents store accordingly\n      if (event.type === 'mutation') {\n        if (event.transition === 'appear') {\n          const nextDocument = event.result as SanityDocument | undefined\n\n          if (nextDocument) {\n            dispatch({\n              type: 'DOCUMENT_RECEIVED',\n              payload: nextDocument,\n            })\n          }\n        }\n\n        if (event.transition === 'disappear') {\n          dispatch({type: 'DOCUMENT_DELETED', id: event.documentId})\n        }\n\n        if (event.transition === 'update') {\n          const updatedDocument = event.result as SanityDocument | undefined\n\n          if (updatedDocument) {\n            dispatch({\n              type: 'DOCUMENT_UPDATED',\n              payload: updatedDocument,\n            })\n          }\n        }\n      }\n    },\n    [initialFetch],\n  )\n\n  const listener$ = useMemo(() => {\n    if (!client) return of()\n\n    const events$ = client.observable.listen(QUERY, params, LISTEN_OPTIONS).pipe(\n      catchError((err) => {\n        setError(err)\n        return of(err)\n      }),\n    )\n\n    return events$\n  }, [client, params, QUERY])\n\n  useEffect(() => {\n    const sub = listener$.subscribe(handleListenerEvent)\n\n    return () => {\n      sub?.unsubscribe()\n    }\n  }, [handleListenerEvent, listener$])\n\n  // Contemplate that we could have drafts and live documents here, merge them.\n  const dataAsArray = useMemo(() => {\n    // Joins the drafts and the live documents\n    const uniques = Object.keys(state.documents).reduce(\n      (acc: {[key: string]: SanityDocument}, key) => {\n        const document = state.documents[key]\n        const isDraft = document._id === getDraftId(document._id)\n        const id = isDraft ? document._id : getDraftId(document._id)\n        // If we already have the document, and this document is not the draft one, it means\n        // the draft hast already been added to the list, so we skip it.\n        if (acc[id] && !isDraft) {\n          return acc\n        }\n        acc[id] = document\n        return acc\n      },\n      {},\n    )\n    return Object.values(uniques)\n  }, [state.documents])\n\n  return {\n    data: dataAsArray,\n    isLoading,\n    error,\n  }\n}\n","import {useMemo} from 'react'\nimport {getPublishedId, useSearchState} from 'sanity'\n\nimport {useDocumentSheetListStore} from './useDocumentSheetListStore'\n\ninterface DocumentSheetListOptions {\n  /** The schemaType.name  */\n  typeName: string\n}\n\nexport function useDocumentSheetList({typeName}: DocumentSheetListOptions) {\n  const {state} = useSearchState()\n\n  const items = useMemo(() => {\n    const map = new Map()\n    state.result.hits.forEach((h) => map.set(getPublishedId(h.hit._id), h.hit))\n    return map\n  }, [state.result.hits])\n\n  // The store is listening to all the documents that match with the _type filter.\n  const {data, isLoading} = useDocumentSheetListStore({\n    filter: `_type == \"${typeName}\"`,\n  })\n\n  // Only return the documents that match with the serverSide filter items.\n  const documents = useMemo(() => {\n    return data.filter((doc) => items.has(getPublishedId(doc._id)))\n  }, [data, items])\n\n  return {data: documents, isLoading}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isDocumentSchemaType, type ObjectSchemaType, type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  type Row,\n  useReactTable,\n} from '@tanstack/react-table'\nimport {useCallback, useEffect, useState} from 'react'\nimport {SearchProvider, useSchema, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {type BaseStructureToolPaneProps} from '../../types'\nimport {ColumnsControl} from './ColumnsControl'\nimport {DocumentSheetListFilter} from './DocumentSheetListFilter'\nimport {DocumentSheetListHeader} from './DocumentSheetListHeader'\nimport {DocumentSheetListPaginator} from './DocumentSheetListPaginator'\nimport {DocumentSheetListProvider} from './DocumentSheetListProvider'\nimport {SheetListCell} from './SheetListCell'\nimport {useDocumentSheetColumns} from './useDocumentSheetColumns'\nimport {useDocumentSheetList} from './useDocumentSheetList'\n\ntype DocumentSheetListPaneProps = BaseStructureToolPaneProps<'documentList'>\n\nconst PaneContainer = styled(Flex)`\n  height: 100%;\n`\nconst TableContainer = styled.div`\n  overflow: auto; //our scrollable table container\n  position: relative; //needed for sticky header\n`\nconst Table = styled.table`\n  border-collapse: separate;\n  border-spacing: 0;\n  font-family: arial, sans-serif;\n  white-space: nowrap;\n  width: 100%;\n  border: 1px solid lightgray;\n\n  thead {\n    display: grid;\n    position: sticky;\n    top: 0;\n    z-index: 10;\n  }\n  tr {\n    padding: 0;\n  }\n  tr:last-child {\n    border-bottom: none;\n  }\n`\n\nfunction DocumentSheetListPaneInner({\n  documentSchemaType,\n}: DocumentSheetListPaneProps & {documentSchemaType: ObjectSchemaType}) {\n  const {dispatch, state} = useSearchState()\n  const {columns, initialColumnsVisibility} = useDocumentSheetColumns(documentSchemaType)\n  const {data} = useDocumentSheetList({\n    typeName: documentSchemaType.name,\n  })\n  const [selectedAnchor, setSelectedAnchor] = useState<number | null>(null)\n\n  const totalRows = state.result.hits.length\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    // Avoids resetting the page index when the data changes, e.g. a mutation is received\n    autoResetPageIndex: false,\n    initialState: {\n      columnPinning: {left: ['selected', 'Preview']},\n      pagination: {pageSize: 25},\n      columnVisibility: initialColumnsVisibility,\n    },\n    getRowId: (row) => row._id,\n    meta: {\n      selectedAnchor,\n      setSelectedAnchor,\n      patchDocument: (documentId, fieldId, value) => null,\n    },\n  })\n\n  const {rows} = table.getRowModel()\n\n  useEffect(() => {\n    dispatch({type: 'TERMS_TYPE_ADD', schemaType: documentSchemaType})\n    return () => {\n      dispatch({type: 'TERMS_TYPE_REMOVE', schemaType: documentSchemaType})\n    }\n  }, [documentSchemaType, dispatch])\n\n  const renderRow = useCallback((row: Row<SanityDocument>) => {\n    return (\n      <Box\n        key={row.original._id + row.id}\n        as=\"tr\"\n        paddingY={2}\n        style={{display: 'flex', width: '100%'}}\n      >\n        {row.getVisibleCells().map((cell) => (\n          <SheetListCell key={row.original._id + cell.id} {...cell} />\n        ))}\n      </Box>\n    )\n  }, [])\n\n  const rowsCount = `Total: ${totalRows} rows, showing ${rows.length} rows`\n  return (\n    <PaneContainer direction=\"column\" paddingX={3} data-testid=\"document-sheet-list-pane\">\n      <Flex direction=\"row\" align=\"center\" paddingY={3} paddingX={1} justify=\"space-between\">\n        <Flex direction=\"row\" align=\"center\">\n          <DocumentSheetListFilter />\n          <Text size={0} muted>\n            {rowsCount}\n          </Text>\n        </Flex>\n        <ColumnsControl table={table} />\n      </Flex>\n      <TableContainer>\n        <DocumentSheetListProvider table={table}>\n          <Table>\n            <thead>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <Box key={headerGroup.id} as=\"tr\">\n                  {headerGroup.headers.map((header) => (\n                    <DocumentSheetListHeader\n                      key={header.id}\n                      header={header}\n                      headerGroup={headerGroup}\n                    />\n                  ))}\n                </Box>\n              ))}\n            </thead>\n            <tbody>{table.getRowModel().rows.map(renderRow)}</tbody>\n          </Table>\n        </DocumentSheetListProvider>\n      </TableContainer>\n      <Flex justify={'flex-end'} padding={3} gap={4} paddingY={5}>\n        <DocumentSheetListPaginator table={table} />\n      </Flex>\n    </PaneContainer>\n  )\n}\n\nexport function DocumentSheetListPane(props: DocumentSheetListPaneProps) {\n  const schema = useSchema()\n  const typeName = props.pane.schemaTypeName\n\n  const schemaType = schema.get(typeName)\n  if (!schemaType || !isDocumentSchemaType(schemaType)) {\n    throw new Error(`Schema type \"${typeName}\" not found or not a document schema`)\n  }\n  return (\n    <SearchProvider>\n      <DocumentSheetListPaneInner {...props} documentSchemaType={schemaType} />\n    </SearchProvider>\n  )\n}\n","import {Card, Code} from '@sanity/ui'\nimport {isEqual} from 'lodash'\nimport {memo, useMemo, useState} from 'react'\nimport {\n  EMPTY_ARRAY,\n  type GeneralDocumentListLayoutKey,\n  SourceProvider,\n  useI18nText,\n  useSource,\n} from 'sanity'\nimport shallowEquals from 'shallow-equals'\n\nimport {Pane} from '../../components/pane'\nimport {_DEBUG} from '../../constants'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureToolSetting} from '../../useStructureToolSetting'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {DEFAULT_ORDERING, EMPTY_RECORD} from './constants'\nimport {DocumentListPane} from './DocumentListPane'\nimport {findStaticTypesInFilter} from './helpers'\nimport {PaneHeader} from './PaneHeader'\nimport {DocumentSheetListPane} from './sheetList/DocumentSheetListPane'\nimport {type SortOrder} from './types'\n\nconst addSelectedStateToMenuItems = (options: {\n  menuItems?: PaneMenuItem[]\n  sortOrderRaw?: SortOrder\n  layout?: GeneralDocumentListLayoutKey\n}) => {\n  const {menuItems, sortOrderRaw, layout} = options\n\n  return menuItems?.map((item) => {\n    if (item.params?.layout) {\n      return {\n        ...item,\n        selected: layout === item.params?.layout,\n      }\n    }\n\n    if (item?.params?.by) {\n      return {\n        ...item,\n        selected: isEqual(sortOrderRaw?.by, item?.params?.by || EMPTY_ARRAY),\n      }\n    }\n\n    return {...item, selected: false}\n  })\n}\n\nexport function useShallowUnique<ValueType>(value: ValueType): ValueType {\n  const [previous, setPrevious] = useState<ValueType>(value)\n  if (!shallowEquals(previous, value)) {\n    setPrevious(value)\n    return value\n  }\n  return previous\n}\n\n/**\n * @internal\n */\nexport const PaneContainer = memo(function PaneContainer(\n  props: BaseStructureToolPaneProps<'documentList'>,\n) {\n  const {index, isSelected, pane, paneKey} = props\n  const {name: parentSourceName} = useSource()\n\n  const {\n    defaultLayout = 'default',\n    initialValueTemplates = EMPTY_ARRAY,\n    menuItemGroups,\n    menuItems,\n    options,\n  } = pane\n  const {defaultOrdering = EMPTY_ARRAY, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const sourceName = pane.source\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const [layout, setLayout] = useStructureToolSetting<GeneralDocumentListLayoutKey>(\n    'layout',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultLayout,\n  )\n\n  const {title} = useI18nText(pane)\n\n  // Ensure that we use the defaultOrdering value from structure builder if any as the default\n  const defaultSortOrder = useMemo(() => {\n    return defaultOrdering?.length > 0 ? {by: defaultOrdering} : DEFAULT_ORDERING\n  }, [defaultOrdering])\n\n  const [sortOrderRaw, setSortOrder] = useStructureToolSetting<SortOrder>(\n    'sort-order',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultSortOrder,\n  )\n\n  const menuItemsWithSelectedState = useMemo(\n    () =>\n      addSelectedStateToMenuItems({\n        menuItems,\n        sortOrderRaw,\n        layout,\n      }),\n    [layout, menuItems, sortOrderRaw],\n  )\n\n  const isSheetListLayout = layout === 'sheetList'\n  const paneLayout = isSheetListLayout ? (\n    <DocumentSheetListPane key={props.pane.id} {...props} />\n  ) : (\n    <DocumentListPane {...props} sortOrder={sortOrderRaw} layout={layout} />\n  )\n\n  return (\n    <SourceProvider name={sourceName || parentSourceName}>\n      <Pane\n        data-ui=\"DocumentListPane\"\n        id={paneKey}\n        minWidth={320}\n        {...(isSheetListLayout ? {} : {currentMaxWidth: 350, maxWidth: 640})}\n        selected={isSelected}\n      >\n        {_DEBUG && (\n          <Card padding={4} tone=\"transparent\">\n            <Code>{pane.source || '(none)'}</Code>\n          </Card>\n        )}\n\n        <PaneHeader\n          index={index}\n          initialValueTemplates={initialValueTemplates}\n          menuItemGroups={menuItemGroups}\n          menuItems={menuItemsWithSelectedState}\n          setLayout={setLayout}\n          setSortOrder={setSortOrder}\n          title={title}\n        />\n        {paneLayout}\n      </Pane>\n    </SourceProvider>\n  )\n})\nPaneContainer.displayName = 'Memo(PaneContainer)'\n","import {type DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEditSchemaType, version} = props\n\n  if (liveEditSchemaType && !version) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\nLiveEditBadge.displayName = 'LiveEditBadge'\n","import {uuid} from '@sanity/uuid'\n\nimport {EMPTY_PARAMS, type LOADING_PANE} from './constants'\nimport {type PaneNode, type RouterPanes} from './types'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown,\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = getPaneParams(intent, params)\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n\nfunction getPaneParams(\n  intent: string,\n  {template, version}: Record<string, string>,\n): {template?: string; version?: string} {\n  if (intent !== 'create') return EMPTY_PARAMS\n  if (template && version) return {template, version}\n  if (template) return {template}\n  if (version) return {version}\n  return EMPTY_PARAMS\n}\n","import {type ObjectDiff} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  type DocumentChangeContextInstance,\n  LoadingBlock,\n  NoChanges,\n  type ObjectSchemaType,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TimelineMenu} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nexport function ChangesInspector({showChanges}: {showChanges: boolean}): React.JSX.Element {\n  const {documentId, schemaType, timelineError, timelineStore, value} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const rev = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  // Note that we are using the studio core namespace here, as changes theoretically should\n  // be part of Sanity core (needs to be moved from structure at some point)\n  const {t: structureT} = useTranslation(structureLocaleNamespace)\n\n  const documentContext: DocumentChangeContextInstance = useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: (props) => <ChangeFieldWrapper {...props} hasRevertHover={false} />,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n      showFromValue: true,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value],\n  )\n\n  if (selectedReleaseId) {\n    return (\n      <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n        <Card flex={1} padding={2} paddingTop={0}>\n          <TimelineError versionError />\n        </Card>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {structureT('changes.from.label')}\n          </Text>\n\n          <TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />\n          <Text size={1} muted>\n            {structureT('changes.to.label')}\n          </Text>\n          <TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />\n        </Grid>\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  diff={diff}\n                  documentContext={documentContext}\n                  error={timelineError}\n                  loading={loading}\n                  schemaType={schemaType}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {\n  type DocumentGroupEvent,\n  Event,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  useTranslation,\n} from 'sanity'\n\nimport {Tooltip} from '../../../../../ui-components'\n\nexport interface TimelineItemProps {\n  event: DocumentGroupEvent\n  isSelected: boolean\n  onSelect: (chunk: DocumentGroupEvent) => void\n  optionsMenu?: React.ReactNode\n}\n\nconst getIsSelectable = (event: DocumentGroupEvent) => {\n  return (\n    !isDeleteDocumentVersionEvent(event) &&\n    !isDeleteDocumentGroupEvent(event) &&\n    !isUnpublishDocumentEvent(event) &&\n    !isScheduleDocumentVersionEvent(event) &&\n    !isUnscheduleDocumentVersionEvent(event)\n  )\n}\n\nexport function EventTimelineItem({event, isSelected, onSelect, optionsMenu}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const isSelectable = getIsSelectable(event)\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(event)\n      }\n    },\n    [onSelect, event, isSelectable],\n  )\n  return (\n    <Flex gap={1}>\n      <Tooltip content={isSelectable ? '' : t('changes.not-selectable')} disabled={isSelectable}>\n        <Card\n          as={isSelectable ? 'button' : 'div'}\n          onClick={handleClick}\n          padding={2}\n          pressed={isSelected}\n          radius={2}\n          data-ui=\"timelineItem\"\n          data-testid=\"timeline-item-button\"\n          data-chunk-timestamp={event.timestamp}\n          style={{\n            cursor: isSelectable ? 'pointer' : 'default',\n            width: '100%',\n          }}\n        >\n          <Event event={event} showChangesBy=\"tooltip\" />\n        </Card>\n      </Tooltip>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports\n  MenuItem,\n  Text,\n  usePortal,\n} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  ContextMenuButton,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isReleaseDocument,\n  type PublishDocumentVersionEvent,\n  RELEASES_INTENT,\n  Translate,\n  useSetPerspective,\n  useTranslation,\n  useWorkspace,\n  VersionInlineBadge,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {MenuButton} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TIMELINE_MENU_PORTAL} from '../timelineMenu'\n\nexport function PublishedEventMenu({event}: {event: PublishDocumentVersionEvent}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const portalContext = usePortal()\n  const {params, setParams} = usePaneRouter()\n  const setPerspective = useSetPerspective()\n  const {document} = useWorkspace()\n  const {\n    drafts: {enabled: isDraftModelEnabled},\n  } = document\n\n  const handleOpenReleaseDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId || '@lastPublished',\n      since: undefined,\n      historyEvent: event.id,\n      historyVersion: getVersionFromId(event.versionId),\n    })\n  }, [setParams, params, event])\n\n  const handleOpenDraftDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId,\n      preserveRev: 'true',\n      since: undefined,\n    })\n    setTimeout(() => {\n      // A bug is generated when we change the perspective and the params at the same time\n      // Resetting the params to the value it had before, because the paneRouter uses the previous value\n      setPerspective(isDraftModelEnabled ? 'drafts' : 'published')\n    }, 100)\n  }, [setParams, params, event.versionRevisionId, setPerspective, isDraftModelEnabled])\n\n  const VersionBadge = ({children}: {children: React.ReactNode}) => {\n    return (\n      <VersionInlineBadge\n        $tone={\n          event.release\n            ? isReleaseDocument(event.release)\n              ? getReleaseTone(event.release)\n              : 'default'\n            : undefined\n        }\n      >\n        {children}\n      </VersionInlineBadge>\n    )\n  }\n  const isMenuDisabled = event.release && !isReleaseDocument(event.release)\n  return (\n    <MenuButton\n      id={`timeline-item-menu-button-${event.versionId}`}\n      button={\n        <ContextMenuButton\n          aria-label={t('timeline-item.menu-button.aria-label')}\n          tooltipProps={{\n            content: isMenuDisabled\n              ? t('timeline-item.not-found-release.tooltip', {\n                  releaseId: event.release?._id\n                    ? getReleaseIdFromReleaseDocumentId(event.release._id)\n                    : undefined,\n                })\n              : t('timeline-item.menu-button.tooltip'),\n          }}\n          disabled={isMenuDisabled}\n        />\n      }\n      menu={\n        <Menu padding={1}>\n          {event.release ? (\n            <>\n              <IntentLink\n                intent={RELEASES_INTENT}\n                params={{id: getReleaseIdFromReleaseDocumentId(event.release._id)}}\n                style={{textDecoration: 'none'}}\n              >\n                <MenuItem padding={3}>\n                  <Flex align={'center'} justify=\"flex-start\">\n                    <Text size={1} style={{textDecoration: 'none'}}>\n                      <Translate\n                        components={{\n                          VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                        }}\n                        i18nKey=\"events.open.release\"\n                        values={{\n                          releaseTitle:\n                            event.release.metadata?.title ||\n                            tCore('release.placeholder-untitled-release'),\n                        }}\n                        t={t}\n                      />\n                    </Text>\n                  </Flex>\n                </MenuItem>\n              </IntentLink>\n              <MenuItem onClick={handleOpenReleaseDocument}>\n                <Flex align={'center'} justify=\"flex-start\">\n                  <Text size={1}>\n                    <Translate\n                      components={{\n                        VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                      }}\n                      i18nKey=\"events.inspect.release\"\n                      values={{\n                        releaseTitle:\n                          event.release.metadata?.title ||\n                          tCore('release.placeholder-untitled-release'),\n                      }}\n                      t={t}\n                    />\n                  </Text>\n                </Flex>\n              </MenuItem>\n            </>\n          ) : (\n            <MenuItem onClick={handleOpenDraftDocument} disabled={!event.versionRevisionId}>\n              <Flex align={'center'}>\n                <Text size={1}>\n                  <Translate\n                    components={{\n                      VersionBadge: ({children}) => (\n                        <VersionInlineBadge $tone=\"caution\">{children}</VersionInlineBadge>\n                      ),\n                    }}\n                    i18nKey=\"events.open.draft\"\n                    t={t}\n                  />\n                </Text>\n              </Flex>\n            </MenuItem>\n          )}\n        </Menu>\n      }\n      popover={{\n        // when used inside the timeline menu we want to keep the element inside the popover, to avoid closing the popover when clicking expand.\n        portal: portalContext.elements?.[TIMELINE_MENU_PORTAL] ? TIMELINE_MENU_PORTAL : true,\n        placement: 'bottom',\n        fallbackPlacements: ['bottom-end', 'bottom-start'],\n      }}\n    />\n  )\n}\n","import {Box, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion, type Variants} from 'framer-motion'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  type DocumentGroupEvent,\n  getDocumentVariantType,\n  isCreateDocumentVersionEvent,\n  isDeleteDocumentVersionEvent,\n  isEditDocumentVersionEvent,\n  isPublishDocumentVersionEvent,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from '../expandableTimelineItemButton'\nimport {ListWrapper, Root} from '../timeline.styled'\nimport {EventTimelineItem} from './EventTimelineItem'\nimport {PublishedEventMenu} from './PublishedEventMenu'\n\ninterface TimelineProps {\n  events: DocumentGroupEvent[]\n  hasMoreEvents: boolean | null\n  selectedEventId?: string\n  onLoadMore: () => void\n  onSelect: (event: DocumentGroupEvent) => void\n  fetchEventChildren: (event: DocumentGroupEvent) => Promise<void>\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nconst TimelineItemWrapper = motion.create(Box)\nconst CHILDREN_ITEMS_VARIANTS: Variants = {\n  initial: {\n    opacity: 0,\n  },\n  animate: {\n    opacity: 1,\n  },\n  exit: {\n    opacity: 0,\n  },\n}\n\nconst ITEM_HEIGHT = 57\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const EventsTimeline = ({\n  events: allEvents,\n  hasMoreEvents,\n  selectedEventId,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n  fetchEventChildren,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedEventId) {\n      // Find that event and if it has a parent, expand the parent.\n      const selectedEvent = allEvents.find((event) => event.id === selectedEventId)\n      if (selectedEvent && 'parentId' in selectedEvent && selectedEvent.parentId) {\n        return new Set([selectedEvent.parentId])\n      }\n    }\n    return new Set()\n  })\n  const [expandingParents, setExpandingParents] = useState<Set<string>>(new Set())\n\n  const events = useMemo(() => {\n    return allEvents.filter((event) => {\n      if (isCreateDocumentVersionEvent(event) && event.parentId) {\n        // Check if it's the last event in the list, in that case, we want to show it\n        const isLastEvent = allEvents[allEvents.length - 1].id === event.id\n        if (isLastEvent) return true\n        return expandedParents.has(event.parentId)\n      }\n      if (isEditDocumentVersionEvent(event) && event.parentId) {\n        return expandedParents.has(event.parentId)\n      }\n      return true\n    })\n  }, [expandedParents, allEvents])\n\n  const handleExpandParent = useCallback(\n    (event: DocumentGroupEvent) => async () => {\n      const parentId = event.id\n\n      let isExpanding = false\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else {\n          isExpanding = true\n          next.add(parentId)\n        }\n\n        return next\n      })\n      if (isExpanding) {\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n        await fetchEventChildren(event)\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.delete(parentId)\n          return next\n        })\n      }\n    },\n    [fetchEventChildren, setExpandingParents],\n  )\n\n  const handleSelectChunk = useCallback(\n    (event: DocumentGroupEvent) => {\n      onSelect(event)\n    },\n    [onSelect],\n  )\n\n  const renderOptionsMenu = useCallback(\n    (event: DocumentGroupEvent) => {\n      const documentVariantType = getDocumentVariantType(event.documentId)\n      if (isPublishDocumentVersionEvent(event) && documentVariantType === 'published') {\n        return <PublishedEventMenu event={event} />\n      }\n      if (\n        (isPublishDocumentVersionEvent(event) &&\n          documentVariantType === 'draft' &&\n          event.creationEvent) ||\n        (isDeleteDocumentVersionEvent(event) && event.creationEvent)\n      ) {\n        return (\n          <ExpandableTimelineItemButton\n            isExpanded={expandedParents.has(event.id)}\n            onExpand={handleExpandParent(event)}\n          />\n        )\n      }\n      return null\n    },\n    [expandedParents, handleExpandParent],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<DocumentGroupEvent[][number]>>(\n    (event, {activeIndex}) => {\n      /**\n       * The create version event will be present while expanding (loading the edits), so we are attaching to it the loading block at the top.\n       * - publishEvent (expanding?)\n       * --- loadingBlock  ~createEvent~\n       * */\n      const showExpandingLoader =\n        isCreateDocumentVersionEvent(event) &&\n        event.parentId &&\n        expandingParents.has(event.parentId)\n\n      const isLastEvent = activeIndex === events.length - 1\n      if (showExpandingLoader) {\n        return (\n          <TimelineItemWrapper\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{duration: 0.2, delay: 0.2}}\n          >\n            {/* We need this item to match the same height as the rest of the list items, which is 57px */}\n            <Flex align=\"center\" justify=\"center\" style={{height: ITEM_HEIGHT}}>\n              <Spinner />\n            </Flex>\n          </TimelineItemWrapper>\n        )\n      }\n      return (\n        <TimelineItemWrapper\n          key={event.timestamp}\n          paddingBottom={1}\n          paddingRight={1}\n          animate=\"animate\"\n          exit=\"exit\"\n          initial=\"initial\"\n          variants={'parentId' in event ? CHILDREN_ITEMS_VARIANTS : undefined}\n          paddingLeft={\n            (isEditDocumentVersionEvent(event) || isCreateDocumentVersionEvent(event)) &&\n            event.parentId &&\n            !isLastEvent\n              ? 4\n              : 1\n          }\n        >\n          <EventTimelineItem\n            event={event}\n            isSelected={event.id === selectedEventId}\n            onSelect={handleSelectChunk}\n            optionsMenu={renderOptionsMenu(event)}\n          />\n\n          {isLastEvent && hasMoreEvents && <LoadingBlock />}\n        </TimelineItemWrapper>\n      )\n    },\n    [\n      expandingParents,\n      selectedEventId,\n      handleSelectChunk,\n      renderOptionsMenu,\n      events.length,\n      hasMoreEvents,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n  const selectedIndex = events.findIndex((event) => event.id === selectedEventId)\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {events.length > 0 ? (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={ITEM_HEIGHT}\n            items={events}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      ) : (\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      )}\n    </Root>\n  )\n}\n\nEventsTimeline.displayName = 'EventsTimeline'\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../../ui-components'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {TimelineError} from '../TimelineError'\nimport {EventsTimeline} from './EventsTimeline'\n\ninterface TimelineMenuProps {\n  event: DocumentGroupEvent | null\n  events: DocumentGroupEvent[]\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nconst formatParams = {\n  timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n}\n\nexport function EventsTimelineMenu({event, events, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n  const {\n    nextCursor,\n    loading,\n    error: eventsError,\n    findRangeForRevision,\n    findRangeForSince,\n    loadMoreEvents,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (open && (e.key === 'Escape' || e.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revEvent: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(revEvent) ||\n          isDeleteDocumentGroupEvent(revEvent) ||\n          isUnpublishDocumentEvent(revEvent) ||\n          isScheduleDocumentVersionEvent(revEvent) ||\n          isUnscheduleDocumentVersionEvent(revEvent)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(revEvent?.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision, handleClose],\n  )\n\n  const selectSince = useCallback(\n    (sinceEvent: DocumentGroupEvent) => {\n      try {\n        const [since, rev] = findRangeForSince(sinceEvent.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [findRangeForSince, setTimelineRange, toast, t, handleClose],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading && nextCursor) {\n      loadMoreEvents()\n    }\n  }, [loading, loadMoreEvents, nextCursor])\n\n  const content = useMemo(() => {\n    if (eventsError) return <TimelineError />\n\n    return (\n      <EventsTimeline\n        events={events}\n        fetchEventChildren={expandEvent}\n        hasMoreEvents={Boolean(nextCursor)}\n        selectedEventId={event?.id}\n        onLoadMore={handleLoadMore}\n        onSelect={mode === 'rev' ? selectRev : selectSince}\n      />\n    )\n  }, [\n    eventsError,\n    mode,\n    expandEvent,\n    events,\n    nextCursor,\n    event?.id,\n    handleLoadMore,\n    selectSince,\n    selectRev,\n  ])\n\n  const revLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : events.length > 0\n      ? t('timeline.since-version-missing')\n      : t('timeline.no-previous-events')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n  const portalElements = useMemo(\n    () => ({\n      [TIMELINE_MENU_PORTAL]: popoverRef,\n    }),\n    [popoverRef],\n  )\n\n  return (\n    <PortalProvider __unstable_elements={portalElements}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={loading || !events.length}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={loading ? t('timeline.loading-history') : buttonLabel}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {diffInput, wrap} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type ReactElement, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  ChangesError,\n  type DocumentChangeContextInstance,\n  type DocumentGroupEvent,\n  isReleaseDocument,\n  LoadingBlock,\n  NoChanges,\n  type ObjectDiff,\n  type ObjectSchemaType,\n  ScrollContainer,\n  Translate,\n  useEvents,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {EventsTimelineMenu} from '../../timeline/events/EventsTimelineMenu'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nconst SpinnerContainer = styled(Flex)`\n  width: 100%;\n  position: absolute;\n  bottom: -4px;\n`\n\nconst DIFF_INITIAL_VALUE = {\n  diff: null,\n  loading: true,\n  error: null,\n}\n\nconst CompareWithPublishedView = () => {\n  const {documentId, schemaType, editState, displayed} = useDocumentPane()\n  const {selectedPerspective, selectedPerspectiveName, selectedReleaseId} = usePerspective()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const rootDiff = useMemo(() => {\n    const diff = diffInput(\n      wrap(editState?.published ?? {}, {author: ''}),\n      wrap(displayed ?? {}, {author: ''}),\n    ) as ObjectDiff\n\n    return diff\n  }, [editState?.published, displayed])\n\n  if (selectedReleaseId && !editState?.version) {\n    return null\n  }\n  if (selectedPerspective === 'drafts' && !editState?.draft) {\n    return null\n  }\n  if (selectedPerspectiveName === 'published' || !displayed?._rev) {\n    return null\n  }\n  return (\n    <Stack space={2} marginBottom={3}>\n      <Card borderBottom paddingBottom={3}>\n        <Stack space={3} paddingTop={1}>\n          <Text size={1} weight=\"medium\">\n            {t('events.compare-with-published.title')}\n          </Text>\n          <Text size={1} muted>\n            <Translate\n              i18nKey=\"events.compare-with-published.description\"\n              t={t}\n              values={{\n                version: isReleaseDocument(selectedPerspective)\n                  ? selectedPerspective.metadata?.title\n                  : 'draft',\n              }}\n            />\n          </Text>\n        </Stack>\n      </Card>\n      <DocumentChangeContext.Provider\n        value={{\n          documentId,\n          schemaType,\n          rootDiff,\n          isComparingCurrent: true,\n          FieldWrapper: (props) => props.children,\n          value: displayed,\n          showFromValue: true,\n        }}\n      >\n        <Box paddingY={1}>\n          <ChangeList diff={rootDiff} schemaType={schemaType} />\n        </Box>\n      </DocumentChangeContext.Provider>\n    </Stack>\n  )\n}\nexport function EventsInspector({showChanges}: {showChanges: boolean}): ReactElement {\n  const {documentId, schemaType, timelineError, value, formState} = useDocumentPane()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const {events, revision, sinceRevision, getChangesList} = useEvents()\n\n  const isComparingCurrent = !revision?.revisionId\n  const changesList$ = useMemo(() => getChangesList(), [getChangesList])\n  const {\n    diff,\n    loading: diffLoading,\n    error: diffError,\n  } = useObservable(changesList$, DIFF_INITIAL_VALUE)\n\n  const {t} = useTranslation('studio')\n\n  const documentContext: DocumentChangeContextInstance = useMemo(() => {\n    return {\n      documentId,\n      schemaType,\n      FieldWrapper: (props) =>\n        props.path.length > 0 ? <ChangeFieldWrapper {...props} /> : props.children,\n      rootDiff: diff,\n      isComparingCurrent: isComparingCurrent && !formState?.readOnly,\n      value,\n      showFromValue: true,\n    }\n  }, [diff, documentId, isComparingCurrent, formState?.readOnly, schemaType, value])\n\n  const [sinceEvent, toEvent] = useMemo(() => {\n    if (!events) return [null, null]\n    return [\n      events.find((e) => e.id === sinceRevision?.revisionId) || null,\n      events.find((e) => e.id === revision?.revisionId) || events[0],\n    ]\n  }, [events, revision?.revisionId, sinceRevision?.revisionId])\n\n  const sinceEvents = useMemo(() => {\n    // The sinceEvents need to account the toEvent showing only events that are older than the toEvent\n    if (!toEvent) return events.slice(1)\n    return events.slice(events.indexOf(toEvent) + 1).map((event) => {\n      // If the to event has a parent id, we need to remove the parent id from the since events or they won't be rendered, as they have no parent to expand.\n      if (\n        ('parentId' in toEvent && 'parentId' in event && event.parentId === toEvent.parentId) ||\n        ('parentId' in event && toEvent.id === event.parentId)\n      ) {\n        return {...event, parentId: undefined}\n      }\n      return event\n    })\n  }, [events, toEvent])\n  if (!events.length) {\n    return (\n      <Box paddingX={2}>\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      </Box>\n    )\n  }\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3} style={{position: 'relative'}}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {t('changes.inspector.from-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={sinceEvent || null}\n            events={sinceEvents}\n            mode=\"since\"\n            placement=\"bottom-start\"\n          />\n          <Text size={1} muted>\n            {t('changes.inspector.to-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={toEvent || null}\n            events={events}\n            mode=\"rev\"\n            placement=\"bottom-end\"\n          />\n        </Grid>\n        {diffLoading && (\n          <motion.div\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{delay: 0.2, duration: 0.2}}\n          >\n            <SpinnerContainer justify=\"center\" align=\"center\" gap={2}>\n              <Text muted size={0}>\n                {t('changes.loading-changes')}\n              </Text>\n              <Spinner size={0} />\n            </SpinnerContainer>\n          </motion.div>\n        )}\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  documentContext={documentContext}\n                  error={timelineError || diffError}\n                  loading={revision?.loading || sinceRevision?.loading || false}\n                  schemaType={schemaType}\n                  sameRevisionSelected={sinceEvent?.id === toEvent?.id}\n                  sinceEvent={sinceEvent}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  documentContext,\n  loading,\n  schemaType,\n  sameRevisionSelected,\n  sinceEvent,\n}: {\n  error?: Error | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n  sameRevisionSelected: boolean\n  sinceEvent: DocumentGroupEvent | null\n}) {\n  if (error) {\n    return (\n      <>\n        <CompareWithPublishedView />\n        {sinceEvent?.type !== 'historyCleared' && <ChangesError error={error} />}\n      </>\n    )\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n  if (sameRevisionSelected) {\n    return <SameRevisionSelected />\n  }\n\n  if (!documentContext.rootDiff) {\n    return (\n      <motion.div\n        animate={{opacity: 1}}\n        initial={{opacity: 0}}\n        transition={{delay: 0.2, duration: 0.2}}\n      >\n        <NoChanges />\n      </motion.div>\n    )\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <Box paddingY={1}>\n        <ChangeList diff={documentContext.rootDiff} schemaType={schemaType} />\n      </Box>\n    </DocumentChangeContext.Provider>\n  )\n}\n\nfunction SameRevisionSelected() {\n  const {t} = useTranslation('')\n  return (\n    <motion.div\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      transition={{delay: 0.2, duration: 0.2}}\n    >\n      <Stack space={3} paddingTop={2}>\n        <Text size={1} weight=\"medium\" as=\"h3\">\n          {t('changes.same-revision-selected-title')}\n        </Text>\n        <Text as=\"p\" size={1} muted>\n          <Translate i18nKey=\"changes.same-revision-selected-description\" t={t} />\n        </Text>\n      </Stack>\n    </motion.div>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  LoadingBlock,\n  ScrollContainer,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {EventsTimeline} from '../../timeline/events/EventsTimeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function EventsSelector({showList}: {showList: boolean}) {\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n  const {setTimelineRange} = useDocumentPane()\n  const getScrollerRef = useCallback(\n    (el: HTMLDivElement | null) => {\n      if (!listHeight && el) {\n        /**\n         * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n         * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n         * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n         */\n        setListHeight(el.clientHeight ? el.clientHeight - 1 : 0)\n        setScrollRef(el)\n      }\n    },\n    [listHeight],\n  )\n  const {\n    events,\n    nextCursor,\n    loading,\n    error,\n    revision,\n    loadMoreEvents,\n    findRangeForRevision,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n\n  const selectRev = useCallback(\n    (event: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(event) ||\n          isDeleteDocumentGroupEvent(event) ||\n          isUnpublishDocumentEvent(event) ||\n          isScheduleDocumentVersionEvent(event) ||\n          isUnscheduleDocumentVersionEvent(event)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(event.id)\n        setTimelineRange(since, rev)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision],\n  )\n\n  const initialLoad = loading && !events.length\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {error ? (\n          <TimelineError />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList &&\n              !initialLoad ? (\n                <EventsTimeline\n                  events={events}\n                  fetchEventChildren={expandEvent}\n                  hasMoreEvents={Boolean(nextCursor)}\n                  // If we have a revision, we select it, otherwise we select the first event\n                  selectedEventId={revision?.revisionId || events[0]?.id}\n                  onLoadMore={loadMoreEvents}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n              {loading && <LoadingBlock />}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type Chunk,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Timeline} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function HistorySelector({showList}: {showList: boolean}) {\n  const {timelineError, setTimelineRange, timelineStore} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n\n  const getScrollerRef = useCallback((el: HTMLDivElement | null) => {\n    if (!el?.clientHeight) return\n    /**\n     * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n     * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n     * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n     */\n    setListHeight(el.clientHeight - 1)\n    setScrollRef(el)\n  }, [])\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    // If updated, be sure to update the TimeLineMenu component as well\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {timelineError || selectedReleaseId ? (\n          <TimelineError versionError={Boolean(selectedReleaseId)} />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList ? (\n                <Timeline\n                  chunks={chunks}\n                  hasMoreChunks={hasMoreChunks}\n                  lastChunk={realRevChunk}\n                  onLoadMore={handleLoadMore}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {CloseIcon, InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, TabList, TabPanel, Text} from '@sanity/ui'\nimport {useState} from 'react'\nimport {\n  type DocumentInspectorProps,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useSource,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Tab, Tooltip} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesInspector} from './ChangesInspector'\nimport {EventsInspector} from './EventsInspector'\nimport {EventsSelector} from './EventsSelector'\nimport {HistorySelector} from './HistorySelector'\n\nconst FadeInFlex = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n  &[data-ready] {\n    opacity: 1;\n  }\n`\nconst TABS = ['history', 'review'] as const\nconst isValidTab = (tab: string | undefined): tab is (typeof TABS)[number] =>\n  // @ts-expect-error TS doesn't understand the type guard\n  tab && TABS.includes(tab)\n\nexport function ChangesTabs(props: DocumentInspectorProps) {\n  const {params, setParams} = usePaneRouter()\n  const source = useSource()\n  const [parentRef, setParentRef] = useState<HTMLDivElement | null>(null)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isReady = params?.inspect === HISTORY_INSPECTOR_NAME\n  const {selectedPerspective} = usePerspective()\n\n  const paneRouterTab = isValidTab(params?.changesInspectorTab)\n    ? params.changesInspectorTab\n    : TABS[0]\n\n  const setPaneRouterTab = (tab: (typeof TABS)[number]) =>\n    setParams({\n      ...params,\n      changesInspectorTab: tab,\n      // Reset the since when changing the tab, as it's not relevant for the history tab\n      since: tab === 'history' ? undefined : params?.since,\n    })\n\n  const perspectiveName = isReleaseDocument(selectedPerspective)\n    ? selectedPerspective.metadata.title\n    : selectedPerspective === 'drafts'\n      ? t('compare-versions.status.draft')\n      : t('compare-versions.status.published')\n\n  return (\n    <FadeInFlex\n      direction=\"column\"\n      padding={0}\n      height=\"fill\"\n      data-ready={isReady ? '' : undefined}\n      ref={setParentRef}\n    >\n      <Card paddingBottom={1}>\n        <Flex align=\"center\" padding={3} gap={2}>\n          <TabList space={1} flex={1}>\n            <Tab\n              aria-controls=\"history-panel\"\n              id=\"history-tab\"\n              label={t('changes.tab.history')}\n              onClick={() => setPaneRouterTab('history')}\n              selected={paneRouterTab === 'history'}\n            />\n            <Tab\n              aria-controls=\"review-changes-panel\"\n              id=\"changes-tab\"\n              label={t('changes.tab.review-changes')}\n              onClick={() => setPaneRouterTab('review')}\n              selected={paneRouterTab === 'review'}\n            />\n          </TabList>\n          <Button\n            aria-label={t('changes.action.close-label')}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={props.onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Flex>\n      </Card>\n      <Card padding={2} marginBottom={3} marginX={3} tone=\"neutral\" border radius={3}>\n        <Flex gap={2} align=\"flex-start\">\n          <Tooltip\n            portal\n            placement=\"bottom-end\"\n            boundaryElement={parentRef}\n            content={\n              <Box flex={1} padding={1}>\n                <Text size={1}>\n                  <Translate t={t} i18nKey=\"changes.banner.tooltip\" />\n                </Text>\n              </Box>\n            }\n          >\n            <Text size={0} muted>\n              <InfoOutlineIcon fontSize={1} />\n            </Text>\n          </Tooltip>\n          <Text size={0} muted>\n            <Translate\n              t={t}\n              values={{\n                perspective: perspectiveName,\n              }}\n              i18nKey=\"changes.banner.description\"\n            />\n          </Text>\n        </Flex>\n      </Card>\n\n      <TabPanel\n        aria-labelledby=\"history-tab\"\n        height=\"fill\"\n        hidden={paneRouterTab !== 'history'}\n        id=\"history-panel\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <EventsSelector showList={paneRouterTab === 'history'} />\n        ) : (\n          <HistorySelector showList={paneRouterTab === 'history'} />\n        )}\n      </TabPanel>\n\n      <TabPanel\n        aria-labelledby=\"review-tab\"\n        hidden={paneRouterTab !== 'review'}\n        id=\"review-panel\"\n        height=\"fill\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <>\n            {paneRouterTab === 'review' ? (\n              <EventsInspector showChanges={paneRouterTab === 'review'} />\n            ) : null}\n          </>\n        ) : (\n          <ChangesInspector showChanges={paneRouterTab === 'review'} />\n        )}\n      </TabPanel>\n    </FadeInFlex>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {type DocumentInspector, useTranslation} from 'sanity'\n\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesTabs} from './ChangesTabs'\n\nexport const changesInspector: DocumentInspector = {\n  name: HISTORY_INSPECTOR_NAME,\n  useMenuItem: () => {\n    const {features} = useStructureTool()\n    const {t} = useTranslation()\n\n    return {\n      hidden: !features.reviewChanges,\n      icon: RestoreIcon,\n      title: t('changes.title'),\n    }\n  },\n  component: ChangesTabs,\n  onClose: ({params}) => ({\n    params: {\n      ...params,\n      since: undefined,\n      rev: undefined,\n      changesInspectorTab: undefined,\n      historyVersion: undefined,\n    },\n  }),\n  onOpen: ({params}) => ({params: {...params, since: '@lastPublished'}}),\n}\n","/* eslint-disable no-loop-func */\n\nimport {type Path, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {isArray, isRecord} from 'sanity'\n\n// eslint-disable-next-line max-statements\nexport function getPathTitles(options: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}): Array<{name: string; title?: string}> {\n  const {path, schemaType, value} = options\n  const result: Array<{name: string; title?: string}> = []\n\n  let s = schemaType\n  let v: unknown = value\n\n  for (const segment of path) {\n    // field name\n    if (typeof segment === 'string') {\n      if (!isRecord(v) && v !== undefined) {\n        throw new Error(`Parent value is not an object, cannot get path segment: .${segment}`)\n      }\n\n      if (s.jsonType !== 'object') {\n        throw new Error(\n          `Parent type is not an object schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const field = s.fields.find((f) => f.name === segment)\n\n      if (!field) {\n        result.push({name: segment})\n        return result\n      }\n\n      s = field.type\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item index\n    if (typeof segment === 'number') {\n      if (!isArray(v) && v !== undefined) {\n        throw new Error(`Parent value is not an array, cannot get path segment: [${segment}]`)\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: [${segment}]`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const itemType = s.of.find((ofType) => {\n        if (typeof v === 'string') {\n          return ofType.jsonType === 'string'\n        }\n\n        if (typeof v === 'number') {\n          return ofType.jsonType === 'number'\n        }\n\n        if (typeof v === 'boolean') {\n          return ofType.jsonType === 'boolean'\n        }\n\n        if (isRecord(v)) {\n          return ofType.name === v?._type\n        }\n\n        return false\n      })\n\n      if (!itemType) {\n        throw new Error(`Item type not found: [${segment}]`)\n      }\n\n      s = itemType\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item key\n    if (isRecord(segment) && segment._key) {\n      // if the value is undefined, it likely means that is has been deleted, so return the result\n      if (typeof v === 'undefined') {\n        return result\n      }\n\n      if (!isArray(v)) {\n        throw new Error(\n          `Parent value is not an array, cannot get path segment: [_key == ${segment}]`,\n        )\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      const values = v ?? []\n\n      v = values.find((i) => isRecord(i) && i._key === segment._key)\n\n      // in situations where the segment key exists but it could not be found in the values array\n      // means that the specific item has been deleted from the array\n      // and therefore we not need to continue running the validation for it\n      if (typeof v === 'undefined') {\n        return result\n      }\n\n      if (!isRecord(v)) {\n        throw new Error(`Array item not found: [_key == ${segment._key}]`)\n      }\n\n      const ofType = s.of.find((i) => isRecord(v) && i.name === v?._type)\n\n      if (!ofType) {\n        throw new Error(`Array item type not found: .${v?._type}`)\n      }\n\n      s = ofType\n\n      result.push(s)\n\n      continue\n    }\n\n    throw new Error(`Invalid path segment: ${JSON.stringify(segment)}`)\n  }\n\n  return result\n}\n","import {\n  ErrorOutlineIcon,\n  type IconComponent,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {\n  type ObjectSchemaType,\n  type Path,\n  type SanityDocument,\n  type SchemaType,\n  type ValidationMarker,\n} from '@sanity/types'\nimport {Box, Card, type CardTone, Flex, Stack, Text} from '@sanity/ui'\nimport {type ErrorInfo, Fragment, useCallback, useMemo, useState} from 'react'\nimport {type DocumentInspectorProps, isGoingToUnpublish, useTranslation} from 'sanity'\n\nimport {ErrorBoundary} from '../../../../../ui-components'\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {getPathTitles} from './getPathTitles'\n\nconst MARKER_ICON: Record<'error' | 'warning' | 'info', IconComponent> = {\n  error: ErrorOutlineIcon,\n  warning: WarningOutlineIcon,\n  info: InfoOutlineIcon,\n}\n\nconst MARKER_TONE: Record<'error' | 'warning' | 'info', CardTone> = {\n  error: 'critical',\n  warning: 'caution',\n  info: 'primary',\n}\n\nexport function ValidationInspector(props: DocumentInspectorProps) {\n  const {onClose} = props\n  const {onFocus, onPathOpen, schemaType, validation, value, editState} = useDocumentPane()\n  const {t} = useTranslation('validation')\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen],\n  )\n\n  const isVersionGoingToUnpublish =\n    editState && editState.version && isGoingToUnpublish(editState.version as SanityDocument)\n\n  return (\n    <Flex direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel={t('panel.close-button-aria-label')}\n        flex=\"none\"\n        onClose={onClose}\n        title={t('panel.title')}\n      />\n\n      <Card flex={1} overflow=\"auto\" padding={3}>\n        {isVersionGoingToUnpublish ? (\n          <Box padding={2}>\n            <Text muted size={1}>\n              {t('panel.unpublish-message')}\n            </Text>\n          </Box>\n        ) : (\n          <>\n            {validation.length === 0 && (\n              <Box padding={2}>\n                <Text muted size={1}>\n                  {t('panel.no-errors-message')}\n                </Text>\n              </Box>\n            )}\n            {validation.length > 0 && (\n              <Stack space={2}>\n                {validation.map((marker, i) => (\n                  <ValidationCard\n                    // oxlint-disable-next-line no-array-index-key\n                    key={i}\n                    marker={marker}\n                    onOpen={handleOpen}\n                    schemaType={schemaType}\n                    value={value}\n                  />\n                ))}\n              </Stack>\n            )}\n          </>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n\nfunction ValidationCard(props: {\n  marker: ValidationMarker\n  onOpen: (path: Path) => void\n  schemaType: ObjectSchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {marker, onOpen, schemaType, value} = props\n  const handleOpen = useCallback(() => onOpen(marker.path), [marker, onOpen])\n  const [errorInfo, setErrorInfo] = useState<{error: Error; info: ErrorInfo} | null>(null)\n  const Icon = MARKER_ICON[marker.level]\n\n  return (\n    <ErrorBoundary onCatch={setErrorInfo}>\n      {errorInfo && (\n        <Card padding={3} radius={2} tone=\"critical\">\n          <Text size={1}>{errorInfo.error.message}</Text>\n        </Card>\n      )}\n\n      {!errorInfo && (\n        <Card\n          __unstable_focusRing\n          as=\"button\"\n          onClick={handleOpen}\n          padding={3}\n          radius={2}\n          tone={MARKER_TONE[marker.level]}\n        >\n          <Flex align=\"flex-start\" gap={3}>\n            <Box flex=\"none\">\n              <Text size={1}>\n                <Icon />\n              </Text>\n            </Box>\n\n            <Stack flex={1} space={2}>\n              <DocumentNodePathBreadcrumbs\n                path={marker.path}\n                schemaType={schemaType}\n                value={value}\n              />\n\n              <Text muted size={1}>\n                {marker.message}\n              </Text>\n            </Stack>\n          </Flex>\n        </Card>\n      )}\n    </ErrorBoundary>\n  )\n}\n\nfunction DocumentNodePathBreadcrumbs(props: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {path, schemaType, value} = props\n\n  const pathTitles = useMemo(() => {\n    try {\n      return getPathTitles({path, schemaType, value})\n    } catch (e) {\n      console.error(e)\n    }\n    return null\n  }, [path, schemaType, value])\n\n  if (!pathTitles?.length) return null\n\n  return (\n    <Text size={1}>\n      {pathTitles.map((t, i) => (\n        // oxlint-disable-next-line no-array-index-key\n        <Fragment key={i}>\n          {i > 0 && <span style={{color: 'var(--card-muted-fg-color)', opacity: 0.5}}> / </span>}\n          <span style={{fontWeight: 500}}>{t.title || t.name}</span>\n        </Fragment>\n      ))}\n    </Text>\n  )\n}\n","import {CheckmarkCircleIcon, ErrorOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {useMemo} from 'react'\nimport {\n  type DocumentInspector,\n  type DocumentInspectorMenuItem,\n  type DocumentInspectorUseMenuItemProps,\n  type FormNodeValidation,\n  isGoingToUnpublish,\n  isValidationError,\n  isValidationWarning,\n  usePerspective,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {VALIDATION_INSPECTOR_NAME} from '../../constants'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {ValidationInspector} from './ValidationInspector'\n\nfunction useMenuItem(props: DocumentInspectorUseMenuItemProps): DocumentInspectorMenuItem {\n  const {documentId, documentType} = props\n  const {t} = useTranslation('validation')\n  const {selectedReleaseId} = usePerspective()\n  const {validation: validationMarkers} = useValidationStatus(\n    documentId,\n    documentType,\n    selectedReleaseId,\n  )\n  const {value} = useDocumentPane()\n\n  const validation: FormNodeValidation[] = useMemo(\n    () =>\n      validationMarkers.map((item) => ({\n        level: item.level,\n        message: item.message,\n        path: item.path,\n      })),\n    [validationMarkers],\n  )\n\n  const hasErrors = validation.some(isValidationError)\n  const hasWarnings = validation.some(isValidationWarning)\n  const isDocumentGoingToUnpublish = isGoingToUnpublish(value)\n\n  const icon = useMemo(() => {\n    if (hasErrors) return ErrorOutlineIcon\n    if (hasWarnings) return WarningOutlineIcon\n    return CheckmarkCircleIcon\n  }, [hasErrors, hasWarnings])\n\n  const tone = useMemo(() => {\n    if (hasErrors) return 'critical'\n    if (hasWarnings) return 'caution'\n    return 'positive'\n  }, [hasErrors, hasWarnings])\n\n  return {\n    hidden: validation.length === 0 || isDocumentGoingToUnpublish,\n    icon,\n    title: t('panel.title'),\n    tone,\n    showAsAction: true,\n  }\n}\n\nexport const validationInspector: DocumentInspector = {\n  name: VALIDATION_INSPECTOR_NAME,\n  component: ValidationInspector,\n  useMenuItem,\n}\n","import {omit} from 'lodash'\nimport {decodeJsonParams, encodeJsonParams, route} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from './types'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayloadLike = (str: string) => /^[A-Za-z0-9\\-_]+(?:={0,2})$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev', 'inspect', 'comment']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n    ? never\n    : T extends 0\n      ? never\n      : T extends 0n\n        ? never\n        : T extends null | undefined\n          ? NonNullable<T>\n          : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  const sibling: RouterPaneSibling = {...initial, params: EMPTY_PARAMS, payload: undefined}\n  return chunks.reduce((pane, chunk) => {\n    if (isParam(chunk)) {\n      const key = chunk.slice(0, chunk.indexOf('='))\n      const value = chunk.slice(key.length + 1)\n      pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n    } else if (isPayloadLike(chunk)) {\n      pane.payload = tryParseBase64Payload(chunk)\n    } else {\n      console.warn('Unknown pane segment: %s - skipping', chunk)\n    }\n\n    return pane\n  }, sibling)\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload =\n    typeof payload === 'undefined' ? undefined : encodeJsonParams(payload as any)\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string): unknown {\n  try {\n    return data ? decodeJsonParams(data) : undefined\n  } catch (err) {\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\n\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {structureUsEnglishLocaleBundle} from './i18n'\nimport {changesInspector} from './panes/document/inspectors/changes'\nimport {validationInspector} from './panes/document/inspectors/validation'\nimport {router} from './router'\nimport {type StructureToolOptions} from './types'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\nconst inspectors = [validationInspector, changesInspector]\n\n/**\n * The structureTool is a studio plugin which adds the “structure tool” – a tool within\n * Sanity Studio in which content editors can drill down to specific documents to edit them.\n * You can configure your Studio's structure tool(s).\n *\n * @public\n * @param options - Options for the structure tool. See {@link StructureToolOptions}\n * @example Minimal example\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n *\n * export default defineConfig((\n *  // ...\n *  plugins: [\n *    structureTool() // use defaults\n *  ]\n * })\n * ```\n *\n * @example To customise your structure tool\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n * import { FaCar } from 'react-icons'\n\n * export default defineConfig((\n *\t // ...\n *   plugins: [\n *    structureTool({\n *      name: 'cars',\n *      title: 'Cars',\n *      icon: FaCar,\n *      structure: (S) => S.documentTypeList('car'),\n *      defaultDocumentNode: (S) =>\n *        S.document().views([\n *          S.view.form(),\n *          S.view.component(Preview).title('Preview')\n *        ])\n *    })\n *  ]\n * })\n * ```\n * */\nexport const structureTool = definePlugin<StructureToolOptions | void>((options) => {\n  const icon = options?.icon || MasterDetailIcon\n\n  return {\n    name: 'sanity/structure',\n    document: {\n      actions: (prevActions) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document actions already exist in the Studio config\n        return Array.from(new Set([...prevActions, ...documentActions]))\n      },\n      badges: (prevBadges) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document badges already exist in the Studio config\n        return Array.from(new Set([...prevBadges, ...documentBadges]))\n      },\n      inspectors: (prevInspectors) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the inspectors already exist in the Studio config\n        return Array.from(new Set([...prevInspectors, ...inspectors]))\n      },\n    },\n\n    tools: [\n      {\n        name: options?.name || 'structure',\n        title: options?.title || 'Structure',\n        icon,\n        component: lazy(() => import('./components/structureTool')),\n        canHandleIntent: (intent, params) => {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        // Controlled by sanity/src/structure/components/structureTool/StructureTitle.tsx\n        controlsDocumentTitle: true,\n        options,\n        router,\n        __internalApplicationType: 'sanity/structure',\n      },\n    ],\n\n    i18n: {\n      bundles: [structureUsEnglishLocaleBundle],\n    },\n  }\n})\n\nfunction canHandleCreateIntent(params: Record<string, unknown>) {\n  // We can't handle create intents without a `type` parameter\n  if (!('type' in params)) {\n    return false\n  }\n\n  // We can handle any create intent as long as it has a `type` parameter,\n  // but we also know how to deal with templates, where other tools might not\n  return 'template' in params ? {template: true} : true\n}\n\nfunction canHandleEditIntent(params: Record<string, unknown>) {\n  // We can't handle edit intents without an `id` parameter\n  if (!('id' in params)) {\n    return false\n  }\n\n  // We can handle any edit intent with a document ID, but we're best at `structure` mode\n  // This ensures that other tools that can handle modes such as `presentation` or `batch`\n  // can take precedence over the structure tool\n  return 'mode' in params ? {mode: params.mode === 'structure'} : true\n}\n"],"names":["useCreatePathSyncChannel","$","_c","t0","Symbol","for","Subject","DIFF_VIEW_SEARCH_PARAMETER","DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER","DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER","DIFF_SEARCH_PARAM_DELIMITER","useDiffViewRouter","navigate","state","routerState","useRouter","t1","mode","previousDocument","nextDocument","next","fromPairs","_searchParams","type","id","join","toPairs","navigateDiffView","filter","_temp","exitDiffView","t2","key","includes","diffViewModes","isDiffViewMode","maybeDiffViewMode","useDiffViewState","onParamsError","searchParams","URLSearchParams","get","anyParamSet","some","param","params","useMemo","parseParams","useEffect","result","errors","isActive","previousDocumentType","previousDocumentId","split","Boolean","nextDocumentType","nextDocumentId","push","length","documents","previous","useScrollMirror","elements","existentElements","scrollMirror","ScrollMirror","destroy","element","findRelease","documentId","releases","isPublishedId","isDraftId","find","_id","getReleaseIdFromReleaseDocumentId","getVersionFromId","VersionModeHeaderLayout","styled","header","VersionModeHeaderLayoutSection","div","VersionModeHeader","t","useTranslation","structureLocaleNamespace","data","documentVersions","useDocumentVersions","activeReleases","useActiveReleases","releasesIds","flatMap","release","releaseId","onSelectPreviousRelease","useCallback","selectedDocumentId","onSelectNextRelease","jsxs","jsx","Box","Text","Flex","TransferIcon","justifySelf","Button","CloseIcon","VersionMenu","onSelectRelease","role","document","published","draft","useEditState","getPublishedId","selected","tStructure","tCore","drafts","enabled","isDraftModelEnabled","useWorkspace","MenuButton","getMenuButtonProps","Menu","map","VersionMenuItem","onSelect","isSelected","onClick","getDraftId","getVersionId","MenuItem","ReleaseAvatar","tone","getReleaseTone","Stack","metadata","title","releaseType","formatRelativeLocalePublishDate","isReleaseScheduledOrScheduling","LockIcon","text","disabled","isReleaseDocument","icon","iconRight","undefined","DialogLayout","pickDocumentLayoutComponent","plugin","components","unstable_layout","usePathSyncChannel","syncChannel","source","t3","t4","pipe","distinctUntilChanged","_temp2","path","state_0","deepEquals","Scroller","DiffViewPaneLayout","Card","Container","UiContainer","DiffViewPane","forwardRef","ref","documentType","scrollElement","compareDocument","containerElement","useRef","portalElement","setPortalElement","useState","boundaryElement","setBoundaryElement","pick","defaultComponent","DocumentLayout","useMiddlewareComponents","isInteractive","onOpenReviewChanges","noop","onSetFocus","isReviewChangesOpen","t5","t6","t7","t8","t9","t10","t11","t12","DialogProvider","t13","PortalProvider","t14","t15","t16","t17","BoundaryElementProvider","t18","ReviewChangesContext","ChangeIndicatorsTracker","VirtualizerScrollInstanceProvider","DiffViewDocument","compareValue","useCompareValue","patchChannel","createPatchChannel","perspective","formState","onChange","onFocus","onBlur","onSetActiveFieldGroup","onSetCollapsedFieldSet","onSetCollapsedPath","collapsedFieldSets","ready","collapsedPaths","schemaType","value","onProgrammaticFocus","documentForm","useDocumentForm","selectedPerspectiveName","perspectiveName","comparisonValue","displayInlineChanges","isLoading","pathSyncChannel","onPathOpen","subscription","subscribe","unsubscribe","LoadingBlock","CommentsEnabledContext","FormBuilder","focusPath","changed","focused","groups","validation","members","sanitizeBundleName","hasUpstreamVersion","presence","isVersionId","compareDocumentEditState","bb0","version","bundle","Link","a","EditReferenceLinkComponent","children","_documentId","intent","href","useIntentLink","DiffView","previousPaneElement","setPreviousPaneElement","nextPaneElement","setNextPaneElement","referenceInputOptionsContext","useContext","ReferenceInputOptionsContext","disableNew","diffViewReferenceInputOptionsContext","Dialog","DiffViewDocumentLayout","toast","useToast","status","description","error","input","Fragment","PANE_DEBUG","PANE_COLLAPSED_WIDTH","PANE_DEFAULT_MIN_WIDTH","usePaneLayout","pane","PaneLayoutContext","Error","Root","Layer","PaneDivider","resize","dragging","setDragging","event","preventDefault","startX","pageX","handleMouseMove","e","deltaX","handleMouseUp","e_0","window","removeEventListener","addEventListener","handleMouseDown","Pane","props","forwardedRef","currentMaxWidthProp","currentMinWidthProp","maxWidthProp","minWidthProp","restProps","currentMinWidth","currentMaxWidth","flex","minWidth","maxWidth","flexProp","rootElement","setRootElement","collapse","collapsed","layoutCollapsed","expand","expandedElement","mount","panes","p","indexOf","paneIndex","nextPane","isLast","expanded","nextCollapsed","current","useImperativeHandle","refValue","setRef","useLayoutEffect","handleCollapse","handleExpand","index","contextValue","bb1","hidden","LegacyLayerProvider","divider","Infinity","style","t19","t20","t21","t22","t23","IsLastPaneProvider","t24","PaneContext","t25","displayName","usePane","PaneContent","as","overflow","padding","toLowerCaseNoSpaces","str","toLocaleLowerCase","replaceAll","MENU_GROUP_POPOVER_PROPS","constrainSize","placement","portal","PaneMenuButtonItem","isAfterGroup","node","getI18nText","useGetI18nText","MenuDivider","child","childIndex","child_0","childIndex_0","MenuGroup","PaneContextMenuItemResolver","PaneContextMenuItem","reason","tooltipContent","useI18nText","hotkey","CheckmarkIcon","onAction","TooltipOfDisabled","PaneContextIntentMenuItem","intentLink","handleClick","CONTEXT_MENU_POPOVER_PROPS","nodesHasTone","nodes","PaneContextMenuButton","actionsNodes","useId","hasCritical","hasCaution","ContextMenuButton","nodeIndex","RootCard","PaneFooter","$border","css","Layout","TitleCard","theme","fg","bg","sanity","color","card","TitleTextSkeleton","TextSkeleton","TitleText","PaneHeader","actions","backButton","border","contentAfter","loading","subActions","tabs","tabIndex","appendTitle","paneElement","paneRect","useElementRect","height","innerHeight","width","layoutStyle","handleTitleClick","handleLayoutClick","showTabsOrSubActions","LayerProvider","getDisabledReason","disabledReason","ariaLabel","isDisabled","PaneHeaderActionButton","console","warn","PaneHeaderMenuItemActionButton","hotkeys","content","StatusButton","PaneHeaderActionIntentButton","PaneHeaderMenuGroupActionButton","UnknownIcon","idx","_calcPaneResize","cache","left","right","sum","leftMinWidth","rightMinWidth","leftMaxWidth","Math","min","rightMaxWidth","minDeltaX","rightMinDeltaX","maxDeltaX","leftMaxDeltaX","_deltaX","max","leftW","rightW","leftFlex","rightFlex","_getDOMPath","el","parentElement","Array","from","childNodes","unshift","EMPTY_PATH","_sortElements","WeakMap","set","_sortByElementPath","b","_a","_b","len","i","aIndex","bIndex","sort","createPaneLayoutController","observers","optionsMap","userCollapsedElementSet","Set","rootWidth","resizeDataMap","Map","resizing","add","_notifyObservers","delete","options","original","splice","leftElement","leftIndex","leftOptions","rightElement","rightOptions","offsetWidth","leftResizeData","rightResizeData","nextRootElement","setRootWidth","nextRootWidth","observer","_elements","dataMap","lastElement","collapsedWidth","remaingWidth","userCollapsed","has","sizeCollapsed","resizeData","PaneLayout","onCollapse","onExpand","controller","setState","paneLayout","ErrorPane","paneKey","Delay","ms","setReady","timeoutId","setTimeout","clearTimeout","getWaitMessages","thresholds","messageKey","isDev","message","src","of","merge","threshold","mapTo","delay","DEFAULT_MESSAGE_KEY","Content","LoadingPane","memo","messageProp","resolvedMessage","currentMessage","setCurrentMessage","sub","contentElement","setContentElement","mounted","setMounted","_raf2","DELAY","useDocumentPane","documentPane","DocumentPaneContext","CommentsWrapper","CommentsEnabledProvider","CommentsProviderWrapper","useCommentsEnabled","connectionState","inspector","openInspector","selectedReleaseId","usePerspective","setParams","usePaneRouter","resolveIntentLink","selectedCommentId","comment","paramsRef","commentId","inspect","COMMENTS_INSPECTOR_NAME","location","origin","getCommentLink","handleClearSelectedComment","name","handleOpenCommentsInspector","CommentsProvider","useStructureTool","structureTool","StructureToolContext","DOCUMENT_PANEL_MIN_WIDTH","DOCUMENT_PANEL_INITIAL_MIN_WIDTH","DOCUMENT_INSPECTOR_MIN_WIDTH","DOCUMENT_INSPECTOR_MAX_WIDTH","EMPTY_PARAMS","INSPECT_ACTION_PREFIX","DEFAULT_MENU_ITEM_GROUPS","HISTORY_INSPECTOR_NAME","VALIDATION_INSPECTOR_NAME","DocumentInspectorMenuItemsResolver","inspectors","onMenuItems","menuItems","setMenuItems","newFieldActions","setMenuItem","prev","InspectorMenuItems","useMenuItem","defineInspectorMenuItemComponent","InspectorMenuItem","menuItem","useUnique","useDocumentTitle","editState","isDeleted","lastRevisionDocument","isPublishedPerspective","documentValue","subscribed","prepareForPreview","deletedDocumentPreview","error_0","useValuePreview","IGNORE_OPS","DocumentOperationResults","pushToast","documentPaneValue","documentTitleInfo","titleError","useDocumentOperationEvent","prevEvent","paneRouter","handleOpenDialog","useDocumentLimitsUpsellContext","op","documentTitleBase","slice","documentTitle","cleanupId","isDocumentLimitError","closable","duration","context","Translate","Strong","closeCurrentAndAfter","isLiveEditEnabled","liveEdit","hasObsoleteDraft","workspace","draftExists","mustChooseNewDocumentDestination","isSelectedPerspectiveWriteable","isNewDocument","position","zIndex","lineHeight","DocumentInspectorHeader","closeButtonLabel","forwardedAs","onClose","DocumentInspectorPanel","closeInspector","features","handleClose","Component","component","resizablePanes","Resizable","STRUCTURE_TOOL_NAMESPACE","useStructureToolSetting","namespace","defaultValue","keyValueStore","useKeyValueStore","keyValueStoreKey","getKey","value_0","useObservable","newValue","setKey","VIEW_MODE_PARSED","VIEW_MODE_RAW","VIEW_MODES","lru","LRU","maxSize","isExpanded","keyPath","cached","isArray","isRecord","toggleExpanded","selectElement","sel","getSelection","range","createRange","removeAllRanges","selectNodeContents","addRange","select","currentTarget","maybeSelectAll","keyCode","metaKey","ctrlKey","isDocumentLike","isString","_type","JSONInspectorWrapper","fonts","space","code","family","sizes","fontSize","rem","syntax","property","constant","string","boolean","number","Search","query","target","handleChange","TextInput","SearchIcon","InspectDialog","onInspectClose","dialogIdPrefix","viewModeId","onViewModeChange","viewMode","setParsedViewMode","setRawViewMode","DocumentTitle","bottom","Tab","TabList","outline","JsonInspector","ignoreCase","Code","JSON","stringify","TabPanel","Banner","Icon","action","rest","paddingY","DeletedDocumentBanners","isDeleting","selectedPerspective","isDraftPerspective","DeletedDocumentBanner","restore","useDocumentOperation","navigateIntent","execute","handleRestore","ReadOnlyIcon","ArchivedReleaseBanner","DocumentRemoveIcon","DeprecatedDocumentTypeBanner","isDeprecatedSchemaType","deprecated","ErrorOutlineIcon","AskToEditDialogOpened","defineEvent","AskToEditRequestSent","MAX_NOTE_LENGTH","DialogBody","attrs","align","direction","justify","RequestPermissionDialog","onRequestSubmitted","telemtry","useTelemetry","dialogId","projectId","useProjectId","apiVersion","client","useClient","zOffset","useZIndex","isSubmitting","setIsSubmitting","note","setNote","msgError","setMsgError","hasTooManyRequests","setHasTooManyRequests","hasBeenDenied","setHasBeenDenied","adminRole","observable","roles","request","url","startWith","catchError","requestedRole","method","body","requestUrl","then","log","catch","err","statusCode","response","errMessage","finally","onSubmit","fullscreen","cancelButton","confirmButton","role_0","appliesToUsers","LOADING_STATE","EMPTY_STATE","DECLINED_STATE","PENDING_STATE","EXPIRED_STATE","useRoleRequestsStatus","checkRoleRequests","checkRoleRequests$","tag","requests","projectRequests","resourceId","declinedRequest","isAfter","addWeeks","Date","createdAt","isBefore","InsufficientPermissionBanner","requiredPermission","currentUser","useCurrentUser","roleRequestStatus","requestStatusLoading","requestStatusError","requestSent","setRequestSent","requestPending","currentUserRoles","isOnlyViewer","showRequestPermissionDialog","setShowRequestPermissionDialog","listFormat","useListFormat","telemetry","roleTitles","formatToParts","Roles","count","part","ReferenceChangedBanner","documentPreviewStore","useDocumentPreviewStore","groupIndex","routerPanesState","replaceCurrent","BackLink","routerReferenceId","parentSibling","parentId","hasHistoryOpen","rev","parentRefPath","pathFromString","referenceInfoObservable","parentRefPathSegment","publishedId","keyedSegmentIndex","findIndex","concat","unstable_observePathsDocumentPair","debounceTime","availability","pathGet","snapshot","_ref","referenceInfo","handleReloadReference","available","SyncIcon","WarningOutlineIcon","ScheduledDraftOverrideBanner","PaneRouterContext","ArchivedReleaseDocumentBanner","archivedReleases","useArchivedReleases","handleGoBack","historyEvent","since","historyVersion","r","isCardinalityOneRelease","VersionBadge","getVersionInlineBadge","archivedRelease","Image","img","CANVAS_IMAGE_URL","CANVAS_APP_NAME","CanvasPopoverContent","useClickOutsideEvent","ComposeSparklesIcon","Heading","LaunchIcon","CanvasLinkedBannerContent","open","setOpen","documentVariantType","getDocumentVariantType","variantText","togglePopover","InfoOutlineIcon","Popover","CanvasLinkedBanner","displayed","companionDoc","useCanvasCompanionDoc","navigateToCanvas","useNavigateToCanvasDoc","canvasDocumentId","ChooseNewDocumentDestinationBanner","isPerspectiveWriteable","menuItemProps","ReleasesNav","CreateLinkedBanner","documentLinkedBannerContent","CreateLinkedBannerContent","useSanityCreateConfig","getSanityCreateLinkMetadata","createLinkMetadata","TOAST_DELAY","DocumentNotInReleaseBanner","currentRelease","isScheduledRelease","LATEST","createVersion","useVersionOperations","versionCreateState","setVersionCreateState","handleAddToRelease","lastUpdate","now","useCurrentTime","useConditionalToast","getTime","updateIntervalMs","currentTime","setCurrentTime","intervalId","setInterval","clearInterval","ResolvedLiveEdit","ObsoleteDraftBanner","i18nKey","isEditBlocking","isPublishing","setPublishing","isDiscarding","setDiscarding","publish","discardChanges","liveEditResolveType","handlePublish","handleDiscard","diffViewRouter","compareDraft","OpenReleaseToEditBanner","isPinnedDraftOrPublished","onlyHasVersions","useOnlyHasVersions","OpenReleaseToEditBannerInner","setPerspective","useSetPerspective","currentVersion","documentVersionsTitleList","handleGoToEdit","VersionInlineBadge","RevisionNotFoundBanner","revisionNotFound","ScheduledReleaseBanner","date","UnpublishedDocumentBanner","isCurrentVersionGoingToUnpublish","isGoingToUnpublish","UnpublishIcon","TitleContainer","heading","FormHeader","isSingleton","__experimental_formPreviewTitle","Inline","Tooltip","ev","FormView","margins","fieldActions","openPath","documentStore","useDocumentStore","useDocumentPresence","isLocked","transactionSyncLock","pair","documentEvents","tap","prepareMutationEvent","prepareRebaseEvent","hasRev","_rev","patches","handleInitialValue","useEffectEvent","formRef","setFormRef","focusedFirstDescendant","setFocusedFirstDescendant","focusFirstDescendant","isReadOnly","readOnly","Spinner","PresenceOverlay","mutations","mut","patch","fromMutationPatches","remotePatches","remoteMutations","localPatches","localMutations","DocumentHeaderTabs","activeViewId","views","tabPanelId","view","DocumentHeaderTab","label","viewId","setView","DocumentHeaderTitle","FavoriteToggle","documentExists","isFavorited","isReady","favorite","unfavorite","useManageFavorite","StarFilledIcon","StarIcon","DocumentPanelSubHeader","activeWorkspace","useActiveWorkspace","showTabs","showBackButton","ArrowLeftIcon","dataset","CapabilityGate","favoriteToggle","DocumentBox","ScrollContainer","$disabled","DocumentPanel","footerHeight","headerHeight","isInspectOpen","setDocumentPanelPortalElement","footer","permissions","isPermissionsLoading","isSanityCreateLinked","showCreateBanner","parentPortal","usePortal","_portalElement","documentScrollElement","setDocumentScrollElement","formContainerElement","_createdAt","activeView","splitPanes","formViewHidden","ActiveViewComponent","historical","activeViewNode","scrollTo","inspectDialog","showInspector","filteredReleases","useFilteredReleases","documentInScheduledRelease","hasCardinalityOneReleases","currentReleases","isSystemBundle","isPinnedDraftOrPublish","displayedHasObsoleteDraft","granted","t26","banners","portalElements","showFormView","isMenuNodeButton","renderAsButton","isNotMenuNodeButton","negate","resolveMenuNodes","menuItemGroups","keyOffset","mapFieldActionToPaneMenuNode","itemGroup","g","i18n","ungroupedItems","item","group","shortcut","actionHandler","showAsAction","childIdx","_DEBUG","Object","freeze","LOADING_PANE","DOCUMENT_PANEL_PORTAL_ELEMENT","POPOVER_FALLBACK_PLACEMENTS","DIALOG_WIDTH_TO_UI_WIDTH","small","medium","large","full","ConfirmDialog","dialog","referenceElement","cancelButtonIcon","cancelButtonText","confirmButtonIcon","confirmButtonText","onCancel","onConfirm","ConfirmPopover","ModalDialog","showCloseButton","PopoverDialog","PopoverDialogContent","isTopLayer","useLayer","useGlobalKeyDown","DocumentActionPortalProvider","ActionStateDialog","modalId","unknownModal","ActionDialogWrapper","actionStates","actionIndex","setActionIndex","currentAction","handleAction","ActionMenuButton","idPrefix","setReferenceElement","preventOverflow","popoverProps","actionState","renderActionDialog","ActionMenuListItem","onHandle","String","replace","tooltipProps","s","toUpperCase","DISABLED_REASON_TITLE_KEY","NOTHING_TO_DELETE","NOT_READY","DeleteAction","onComplete","setIsDeleting","paneSetIsDeleting","deleteOp","isConfirmDialogOpen","setConfirmDialogOpen","handleCancel","handleConfirm","handle","permission","useDocumentPairPermissions","InsufficientPermissionsMessage","TrashIcon","ConfirmDeleteDialog","DISABLED_REASON_KEY","NO_CHANGES","NOT_PUBLISHED","DiscardChangesAction","isPublished","ResetIcon","NOTHING_TO_DUPLICATE","DuplicateAction","mapDocument","duplicate","isDuplicating","setDuplicating","dupeId","uuid","duplicateSuccess","firstValueFrom","operationEvents","CopyIcon","HistoryRestoreAction","revision","isRevisionInitial","isRevisionLatest","RevertIcon","DocumentPublished","LIVE_EDIT_ENABLED","ALREADY_PUBLISHED","PUBLISHED_STATE","publishedAt","AlreadyPublished","useTemporalPhrase","timeSincePublished","useRelativeTime","PublishAction","publishState","setPublishState","validationStatus","useValidationStatus","syncState","useSyncState","changesOpen","isValidationErrorMarker","hasValidationErrors","publishScheduled","setPublishScheduled","isSyncing","isValidating","_updatedAt","currentPublishRevision","publishRevision","doPublish","validationComplete","didPublish","nextState","timer","publishedImmediately","previouslyPublished","PublishIcon","UnpublishAction","unpublish","isDraft","DocumentStatusBarActionsInner","states","__internal_tasks","useSource","showingRevision","firstActionState","menuActionStates","buttonElement","setButtonElement","Hotkeys","marginTop","marginBottom","isSanityDefinedAction","showFirstActionButton","sideMenuItems","footerAction","DocumentStatusBarActions","allActions","isInitialValueLoading","initialValueResolved","actionProps","renderDocumentStatusBarActions","HistoryStatusBarActions","revisionId","isRestoreAction","historyActions","toLowerCase","useChipScrollPosition","containerRef","showGradient","setShowGradient","checkOverflow","container","scrollWidth","clientWidth","scrollLeft","isAtEnd","setupObservers","container_0","intersectionObserver","mutationObserver","IntersectionObserver","entries","entry","isIntersecting","updateLastChipObserver","disconnect","lastChip","observe","MutationObserver","childList","subtree","intersectionObserver_0","mutationObserver_0","TooltipContent","intendedPublishAt","DATE_TIME_FORMAT","dateStyle","timeStyle","DocumentPerspectiveList","dateTimeFormat","useDateTimeFormat","schema","useSchema","isCreatingDocument","handlePerspectiveChange","isLiveEdit","isPublishedChipDisabled","getReleaseChipState","isReleaseHistoryMatch","isPublishSelected","isDraftSelected","displayedId","isDraftDisabled","VersionChip","format","menuReleaseId","notCurrentReleases","releasesLoading","fromRelease","isVersion","inCreation","releaseState","HorizontalScroller","getTheme_v2","$showGradient","rgba","DocumentPanelHeader","_props","onMenuAction","onPaneClose","onPaneSplit","unstable_languageFilter","hasGroupSiblings","useFieldActions","scrollContainerRef","menuNodes","menuButtonNodes","contextMenuNodes","showSplitPaneButton","splitViews","showSplitPaneCloseButton","showPaneGroupCloseButton","renderPaneActions","renderedActions","LanguageFilterComponent","SplitVerticalIcon","TooltipDelayGroupProvider","DocumentPanelHeaderActionDialogDeferred","useDeferredValue","DocumentPanelHeaderActionDialog","SpacerButton","size","pointerEvents","visibility","BADGE_TONES","primary","success","warning","danger","DocumentBadgesInner","DocumentBadgesDeferred","DocumentBadges","badges","renderDocumentBadges","badge","Badge","whiteSpace","TIMELINE_ICON_COMPONENTS","create","AddIcon","discardDraft","initial","editDraft","EditIcon","editLive","getTimelineEventIconComponent","hideScrollbarOnExpand","listWrapper","getElementById","TIMELINE_LIST_WRAPPER_ID","firstChildren","scrollHeight","clientHeight","currentStyle","getComputedStyle","overflowY","FlipIcon","ChevronLeftIcon","ExpandableTimelineItemButton","stopPropagation","handleExpandClick","StackWrapper","ListWrapper","$maxHeight","$visible","TIMELINE_ITEM_I18N_KEY_MAPPING","UserAvatarStack","maxLength","userIds","withTooltip","userId","UserAvatar","AvatarStack","IconBox","$color","avatar","TIMELINE_ITEM_EVENT_TONE","withinSelection","RELATIVE_TIME_OPTIONS","minimal","NameSkeleton","Skeleton","font","UserLine","user","useUser","AvatarSkeleton","collaborators","TimelineItem","chunk","optionsMenu","endTimestamp","timestamp","IconComponent","authors","authorUserIds","collaboratorsUsersIds","isSelectable","dateFormat","updatedTimeAgo","parsedDate","formattedTimestamp","evt","isNonPublishChunk","isPublishChunk","getPreviousPublishAction","chunks","previousPublish","addChunksMetadata","forEach","Timeline","hasMoreChunks","lastChunk","selectedChunk","onLoadMore","listMaxHeight","selectedChunkId","chunksWithMetadata","expandedParents","setExpandedParents","filteredChunks","handleExpandParent","selectedIndex","handleSelectChunk","timelineChunk","c","renderItem","activeIndex","CommandList","TimelineError","versionError","TextWithTone","TIMELINE_MENU_PORTAL","TimelineMenu","setTimelineRange","timelineError","timelineStore","button","setButton","popoverRef","setPopoverRef","useTimelineSelector","realRevChunk","sinceTime","handleOpen","handleGlobalKeyDown","focus","selectRev","revChunk","sinceId","revId","findRangeForRev","selectSince","sinceChunk","findRangeForSince","handleLoadMore","loadMore","formatParams","revLabel","sinceLabel","buttonLabel","ChevronDownIcon","StyledMotionPath","motion","Circle","Arrows","Checkmark","rotateAnimation","keyframes","RotateGroup","root","syncing","scale","transition","saved","changes","circle","strokeDasharray","strokeDashoffset","opacity","arrows","checkmark","pathLength","AnimatedStatusIcon","STATUS_DICTIONARY","DocumentStatusPulse","currentStatus","MotionButton","MotionBox","ButtonSkeleton","margin","DocumentStatusButton","author","translationKey","onHistoryOpen","onHistoryClose","relativeTime","FallbackStatus","createDocumentVersion","editDocumentVersion","EventsStatus","events","useEvents","TimelineStatus","TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY","SYNCING_TIMEOUT","SAVED_TIMEOUT","DocumentStatusLine","setStatus","eventsEnabled","beta","eventsAPI","lastUpdated","timerId","timerId_0","AnimatePresence","StatusText","RevisionStatusLine","RestoreIcon","useResizeObserver","onResize","resizeObserver","unobserve","CONTAINER_BREAKPOINT","AnimatedCard","DocumentStatusBar","actionsBoxRef","onDocumentChange","CreateLinkedActions","documentLinkedActions","setCollapsed","contentRect","handleResize","shouldRender","flexShrink","marginLeft","KeyboardShortcutResponder","actionsBoxElement","onActionStart","onKeyDown","rootRef","As","activeAction","matchingStates","isHotkey","matchingState","handleKeyDown","DocumentActionShortcuts","setActiveIndex","renderDocumentActionShortcuts","HiddenCheckmarkIcon","getInspectorItems","currentInspector","hasValue","inspectorMenuItems","getInspectItem","JsonIcon","getCompareVersionsItem","documentIdStack","previousId","getInlineChangesItem","getProductionPreviewItem","previewUrl","EarthAmericasIcon","getMenuItems","inspectorItems","items","LinkIcon","DocumentLayoutError","DIALOG_PROVIDER_POSITION","DocumentLayoutFooter","documentPanelPortalElement","setFooterElement","setActionsBoxElement","zOffsets","EMPTY_ARRAY","StyledChangeConnectorRoot","ChangeConnectorRoot","inspectOpen","stickyParams","paneParams","footerElement","headerElement","setHeaderElement","useGlobalCopyPasteElementHandler","setInspectorMenuItems","rootFieldActionNodes","setRootFieldActionNodes","footerRect","headerRect","useDocumentIdStack","handleKeyUp","onConnectorSetFocus","GetFormValueProvider","FieldActionsResolver","FieldActionsProvider","paneDialog","changesInspectorTab","useDocumentLayoutComponent","useDocumentLastRev","historyStore","useHistoryStore","setLastRevisionDocument","setLoading","useTimelineStore","lastNonDeletedRevId","getDocumentAtRevision","DocumentURLCopied","InlineChangesSwitchedOn","InlineChangesSwitchedOff","getInitialValueTemplateOpts","templates","opts","payload","panePayload","structureNodeTemplate","templateName","urlTemplate","template","typeTemplates","templateParams","useDocumentPaneInitialValue","paneOptions","useTemplates","templateParameters","initialValueRaw","useInitialValue","useDocumentPaneInspector","inspectorsResolver","inspectorName","setInspectorName","inspectParamRef","historyInspector","closeInspectorName","nextInspectorName","nextInspector","currentParams","onOpen","handleHistoryClose","handleHistoryOpen","reviewChanges","toggleLegacyInspect","toggle","handleLegacyInspectClose","handleInspectorAction","isSanityDocument","usePreviewUrl","resolveProductionUrl","BehaviorSubject","subject","asObservable","switchMap","DocumentPaneProvider","onFocusPath","forcedVersion","store","timelineReady","revisionDocument","onOlderRevision","sinceDocument","isPristine","setDocumentMeta","useCopyPaste","documentActions","documentBadges","unstable_fieldActions","fieldActionsResolver","languageFilterResolver","draftsEnabled","router","setPaneParams","viewsProp","documentIdRaw","buildStudioUrl","useStudioUrl","initialValue","getIsDeleted","getComparisonValue","upstreamEditState","upstream","selectUpstreamVersion","getIsReadOnly","getDisplayed","formReady","formStateRef","initialFocusPath","getFormDocumentValue","getDocumentVersionType","releaseDocument","actionsPerspective","documentActionsProps","versionType","languageFilter","strict","newSince","newRev","handlePaneClose","closeCurrent","handlePaneSplit","duplicateCurrent","toggleInlineChanges","handleMenuAction","navigator","copyUrl","coreUi","clipboard","writeText","startsWith","currentDisplayed","pathRef","restParams","pathFromUrl","resolveKeyedPath","DocumentEventsPane","usePaneOptions","showingPublishedOnDraft","eventsStore","useEventsStore","sinceRevision","historyStoreProps","PerspectiveProvider","EventsProvider","isDeleteDocumentGroupEvent","isDeleteDocumentVersionEvent","DocumentPaneWithLegacyTimelineStore","setTimelineError","onError","revTime","sinceAttributes","_temp3","timelineDisplayed","_temp4","_temp5","_temp6","_temp7","state_1","state_2","state_3","state_4","state_5","DocumentPerspectiveResetHandler","rawContext","RawPerspectiveContext","documentVersionsLoading","isCardinalityOnePerspective","DocumentPerspectiveProvider","mappedContext","PerspectiveContext","defaultPerspective","PUBLISHED","DocumentPaneProviderWrapper","itemId","useResetHistoryParams","isMounted","_perspective","preserveRev","updateHistoryParams","DocumentPane","parentSourceName","CopyPasteProvider","SourceProvider","DocumentPaneInner","resolveNewDocumentOptions","isLoaded","isDocumentLoaded","useDocumentType","templateItems","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","mergeDocumentType","providerProps","ReferenceChildLink","handleEditReference","childParams","routerPanesStateLength","activePath","ReferenceInputOptionsProvider","StateLink","ChildLink","childId","childParameters","childPayload","ParameterizedLink","currentPanes","siblingIndex","nextParams","nextPayload","currentGroup","currentSibling","nextSibling","nextGroup","pathToString","emptyArray","PaneRouterProvider","flatIndex","resolvePathFromState","useRouterState","routerPaneGroups","lastPane","modifier","currentItem","nextPanes","createNextRouterState","modifier_0","nextRouterState_0","nextRouterState","modifyCurrentGroup","nextRouterState_1","siblings","createPathWithParams","siblings_0","item_0","setPayload","nextParams_0","siblings_1","item_1","siblings_3","item_3","duplicatedItem","omit","groupLength","ctx","siblings_2","item_2","sibling","UnknownPane","paneMap","lazy","documentList","list","StructureToolPane","active","childItemId","PaneComponent","Suspense","prevParams","prevPayload","isEqual","keys","DocTitle","ChevronWrapper","CrossDatasetReferencesDetails","details","CrossDatasetReferencesSummary","summary","Table","table","DocumentIdFlex","OtherReferenceCount","difference","totalCount","references","PaneItemPreview","layout","versionsInfo","useDocumentVersionInfo","perspectiveStack","getPreviewStateObservable","previewStateObservable","previewIsLoading","versions","DocumentPreviewPresence","DocumentStatusIndicator","DocumentStatus","tooltip","getPreviewValueWithFallback","fallback","SanityDefaultPreview","ReferencePreviewLink","documentPresence","linkProps","PreviewCard","ConfirmDeleteDialogBody","crossDatasetReferences","internalReferences","datasetNames","hasUnknownDatasetNames","onReferenceLinkClick","renderPreviewItem","normalizedDatasetNames","datasets","datasetSubtitle","borderTop","DocumentsIcon","documentCount","datasetName","reference","isClientError","POLL_INTERVAL","visiblePoll$","getVisiblePoll$","fromEvent","visibilityState","visible","EMPTY","shareReplay","refCount","bufferSize","getDocumentExistence","versionedClient","draftId","requestOptions","uri","getDataUrl","json","excludeContent","omitted","nonExistant","doc","fetchCrossDatasetReferences","checkDocumentId","currentDataset","config","useInternalReferences","createHookFromObservableFactory","listenQuery","fetch","listen","transitions","throttleTime","useCrossDatasetReferences","useReferringDocuments","DEFAULT_STUDIO_CLIENT_OPTIONS","isInternalReferencesLoading","isCrossDatasetReferencesLoading","projectIds","crossDatasetReference_1","crossDatasetReference","crossDatasetReference_0","LoadingContainer","showConfirmButton","ConfirmDeleteDialogContainer","setError","handleRetry","ErrorBoundary","IntentButton","linkRef","IntentLink","InsufficientPermissionsMessageTooltip","reveal","POPOVER_PROPS","getIntent","typeName","templateId","baseParams","initialDocumentId","parameters","PaneHeaderCreateButton","nothingGranted","every","reduce","permissionsById","firstItem","itemIndex","disabled_0","intent_0","acc","permission_0","isNonNullable","hashObject","sortObject","v","keyA","keyB","localeCompare","parse","PaneHeaderActions","initialValueTemplateItems","initialValueTemplateItemsFromStructure","actionHandlers","EMPTY_OBJECT","handler","actionNodes","initialValueTemplateItemFromMenuItems","menuItemIndex","intentParams","combinedInitialValueTemplates","uniqBy","MissingSchemaType","getIconWithFallback","defaultIcon","PaneItem","pressed","hasSchemaType","clicked","setClicked","DocumentIcon","ChevronRightIcon","FolderIcon","preview","preloading","setPreload","timeoutRef","startTransition","handleMouseEnter","handleMouseLeave","PreloadDocumentPane","RenderActionCollectionState","onActionComplete","liveEditSchemaType","GetHookCollectionState","SUPPORTED_LINKED_TO_CANVAS_ACTIONS","ActionsGuardWrapper","isLinked","RenderBadgeCollectionState","badgeProps","PARTIAL_PAGE_LIMIT","FULL_LIST_LIMIT","DEFAULT_ORDERING","by","field","EMPTY_RECORD","RootBox","$opacity","CommandListBox","SKELETON_ITEMS","LoadingView","num","DocumentListPaneContent","isRetrying","autoRetry","filterIsSimpleTypeConstraint","hasMaxItems","hasSearchQuery","isLazyLoading","muted","isConnected","retryCount","canRetry","loadingVariant","onEndReached","onRetry","paneTitle","searchInputElement","showIcons","setShouldRender","handleEndReached","isLastItem","showSpinner","showMaxItemsMessage","limit","noDocumentsContent","isOnline","onLine","ErrorActions","mainContent","removePublishedWithDrafts","collate","hasDraft","hasPublished","applyOrderingFunctions","order","orderBy","mapWith","fieldType","tryResolveSchemaTypeForPath","fieldExtendsType","jsonType","baseType","pathSegments","PathUtils","fromString","segment","getFieldTypeByName","isKeySegment","isIndexSegment","memberType","otherType","isReferenceSchemaType","refType","otherRefType","to","fieldName","fields","ofType","findTypes","base","types","isSplat","findStaticTypesInFilter","swr","createSWR","listenSearchQuery","groqFilter","searchQuery","staticTypeNames","maxFieldDepth","searchStrategy","sortBy","extendedProjection","events$","defer","includeAllVersions","includeResult","mergeMap","isFirst","throwError","share","welcome$","mutationAndReconnect$","partition","swrKey","fiilter","asyncScheduler","leading","trailing","exhaustMapWithTrailing","typeNames","getSearchableTypes","getExtendedProjection","search","createSearch","strategy","maxDepth","doFetch","__unstable_extendedProjection","comments","skipSortByScore","hits","hit","scan","connected","fromCache","INITIAL_QUERY_STATE","isLoadingFullList","isRetriableError","ChannelError","ServerError","ClientError","useDocumentList","searchFilter","paramsProp","sortOrder","useSearchMaxFieldDepth","typeNameFromFilter","onRetry$","observableCallback","onFetchFullList$","onLoadFullList","queryResults$","listenSearchQueryArgs","partialList$","fullList$","withLatestFrom","take","takeUntil","catchWithCount","lastError","caught$","safeError","retries","NEVER","retrying","nonErrorThrownWarning","thrown","rotate","fadeIn","AnimatedSpinnerIcon","SpinnerIcon","SubtleSpinnerIcon","DelayedSubtleSpinnerIcon","DocumentListPane","sortOrderRaw","displayOptions","useShallowUnique","staticTypes","setSearchQuery","searchInputValue","setSearchInputValue","setSearchInputElement","sortWithOrderingFn","documentListIsLoading","trim","handleQueryChange","useObservableEvent","event$","debounce","handleClearSearch","handleSearchKeyDown","enableSearchSpinner","setEnableSearchSpinner","textInputIcon","useReconnectingToast","initialValueTemplates","setLayout","setSortOrder","StructurePaneHeader","DocumentSheetListSelect","row","selectedAnchor","setSelectedAnchor","meta","handleOnClick","shiftKey","shiftClickIndex","lowerIndex","upperIndex","additionalSelectedRows","getRowModel","flatRows","currentSelectedRows","getSelectedRowModel","rows","setRowSelection","nextSelectedRows","rowId","isRowCurrentlySelected","getIsSelected","toggleSelected","Checkbox","paddingLeft","getCanSelect","useDocumentSheetListContext","DocumentSheetListContext","DocumentSheetListProvider","selectedAnchorCellDetails","setSelectedAnchorCellDetails","selectedRangeCellIndexes","setSelectedRangeCellIndexes","clearAndSetFocusSelection","nextAnchorDetails","activeElement","HTMLElement","blur","resetFocusSelection","changeSelectionColumn","visibleColumns","getVisibleLeafColumns","columnIndexAfterMove","col","colId","rowIndex","changeSelectionRange","previousSelection","anchorIndex","getNextIndex","startingIndex","firstSelectedIndex","lastIndexSelected","nextIndex","setSelectedAnchorCell","handleEscapePress","nextAnchorCellDetails","handleUpDownKey","isShiftKey","offset","newSelectedCellRowIndex","handleAnchorKeydown","handleAnchorClick","contains","focusAnchorCell","anchorCellDetails","getStateByCellId","submitFocusedCell","DataCell","td","PinnedDataCell","SheetListCellInner","getValue","column","cellId","renderValue","setRenderValue","isDirty","setIsDirty","inputRef","cellState","handleOnFocus","patchDocument","handleProgrammaticFocus","HTMLInputElement","handleOnMouseDown","detail","handleOnEnterDown","handleOnChange","handleOnBlur","handlePaste","clipboardData","getData","handleCopy","toString","getBorderStyle","inputProps","Select","boxShadow","SheetListCell","cell","isPinned","getIsPinned","Cell","borderWidth","getIsLastColumn","getStart","borderRight","getSize","flexRender","columnDef","getContext","VISIBLE_COLUMN_LIMIT","PreviewCell","displayValue","columnHelper","createColumnHelper","SUPPORTED_FIELDS","getColsFromSchemaType","parentalField","tableColumns","nextCol","accessor","enableHiding","info","isObjectSchemaType","columns","isAccessorKeyColumnDef","isGroupColumnDef","flatColumns","cols","useDocumentSheetColumns","documentSchemaType","display","getIsSomeRowsSelected","getToggleAllPageRowsSelectedHandler","initialColumnsVisibility","accCols","countAllowedVisible","visibilityKey","ColumnsControl","isVisibleLimitReached","getCanHide","setInitialColumns","resetColumnVisibility","handleColumnOnChange","toggleVisibility","getColumnVisibilityDisabled","isColumnVisible","getIsVisible","isSingleColumnVisible","maxHeight","getAllLeafColumns","SearchContainer","DocumentSheetListFilter","useSearchState","filtersVisible","SearchHeader","Filters","Header","th","PinnedHeader","HoverMenu","DocumentSheetListHeader","headerGroup","headerTitle","depth","parent","HeaderTag","canShowHeaderMenu","boxSizing","EllipsisHorizontalIcon","DocumentSheetListPaginator","setPageIndex","getCanPreviousPage","DoubleChevronLeftIcon","previousPage","getState","pagination","pageIndex","getPageCount","nextPage","getCanNextPage","DoubleChevronRightIcon","pageSize","setPageSize","Number","createDocumentsSet","documentsReducer","nextDocumentResult","_","restDocuments","updatedDocument","LISTEN_OPTIONS","useDocumentSheetListStore","QUERY","dispatch","useReducer","setIsLoading","res","initialFetch","handleListenerEvent","err_0","listener$","uniques","values","dataAsArray","useDocumentSheetList","h","PaneContainer","TableContainer","DocumentSheetListPaneInner","totalRows","useReactTable","getCoreRowModel","getFilteredRowModel","getPaginationRowModel","autoResetPageIndex","initialState","columnPinning","columnVisibility","getRowId","fieldId","renderRow","getVisibleCells","rowsCount","getHeaderGroups","headers","DocumentSheetListPane","schemaTypeName","isDocumentSchemaType","SearchProvider","addSelectedStateToMenuItems","setPrevious","shallowEquals","defaultLayout","defaultOrdering","sourceName","defaultSortOrder","menuItemsWithSelectedState","isSheetListLayout","LiveEditBadge","activePanes","setActivePanes","getIntentState","editDocumentId","canHandleIntent","getPaneParams","Grid","ChangesInspector","showChanges","scrollRef","setScrollRef","diff","selectionState","isComparingCurrent","structureT","FieldWrapper","rootDiff","showFromValue","documentContext","ChangeFieldWrapper","NoChanges","ChangeList","DocumentChangeContext","getIsSelectable","isUnpublishDocumentEvent","isScheduleDocumentVersionEvent","isUnscheduleDocumentVersionEvent","EventTimelineItem","cursor","Event","PublishedEventMenu","portalContext","versionId","versionRevisionId","handleOpenReleaseDocument","handleOpenDraftDocument","isMenuDisabled","RELEASES_INTENT","textDecoration","children_0","releaseTitle","children_1","fallbackPlacements","children_2","TimelineItemWrapper","CHILDREN_ITEMS_VARIANTS","animate","exit","ITEM_HEIGHT","EventsTimeline","allEvents","hasMoreEvents","selectedEventId","fetchEventChildren","selectedEvent","expandingParents","setExpandingParents","isCreateDocumentVersionEvent","isEditDocumentVersionEvent","isExpanding","renderOptionsMenu","isPublishDocumentVersionEvent","creationEvent","showExpandingLoader","isLastEvent","EventsTimelineMenu","nextCursor","eventsError","findRangeForRevision","loadMoreEvents","expandEvent","revEvent","sinceEvent","SpinnerContainer","DIFF_INITIAL_VALUE","CompareWithPublishedView","diffInput","wrap","EventsInspector","getChangesList","changesList$","diffLoading","diffError","toEvent","sinceEvents","sameRevisionSelected","ChangesError","SameRevisionSelected","EventsSelector","showList","listHeight","setListHeight","getScrollerRef","initialLoad","HistorySelector","FadeInFlex","TABS","isValidTab","tab","ChangesTabs","parentRef","setParentRef","paneRouterTab","setPaneRouterTab","t27","t28","t29","t30","t31","changesInspector","getPathTitles","f","itemType","_key","MARKER_ICON","MARKER_TONE","ValidationInspector","isVersionGoingToUnpublish","marker","ValidationCard","errorInfo","setErrorInfo","level","DocumentNodePathBreadcrumbs","pathTitles","fontWeight","validationMarkers","hasErrors","isValidationError","hasWarnings","isValidationWarning","isDocumentGoingToUnpublish","CheckmarkCircleIcon","validationInspector","legacyEditParamsToState","decodeURIComponent","encodePanesSegment","encodeChunks","encodeURIComponent","legacyEditParamsToPath","toState","pathSegment","parsePanesSegment","toPath","route","intents","transform","panePattern","isParam","test","isPayloadLike","exclusiveParams","isTruthy","parseChunks","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","encodeJsonParams","encodedParams","valueFromFirstSibling","flat","parseOldPanesSegment","restOfSiblings","buffer","match","payloadChunk","tryParsePayload","decodeJsonParams","definePlugin","MasterDetailIcon","prevActions","prevBadges","prevInspectors","tools","canHandleCreateIntent","canHandleEditIntent","controlsDocumentTitle","__internalApplicationType","bundles","structureUsEnglishLocaleBundle"],"mappings":"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"}
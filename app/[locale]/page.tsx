import Header from '@/components/Header';
import Hero from '@/components/Hero';
import Footer from '@/components/Footer';
import ProblemCard from '@/components/ProblemCard';
import SolutionCard from '@/components/SolutionCard';
import { client } from '@/lib/sanity/client';
import { problemsQuery, solutionsQuery } from '@/lib/sanity/queries';
import PageContent from '@/components/PageContent';

// Mock data for development (before Sanity is set up)
const mockProblems = [
  {
    _id: '1',
    title: {
      en: 'Air Pollution',
      th: '‡∏°‡∏•‡∏û‡∏¥‡∏©‡∏ó‡∏≤‡∏á‡∏≠‡∏≤‡∏Å‡∏≤‡∏®'
    },
    description: {
      en: 'Crop burning releases harmful particulate matter and greenhouse gases, severely impacting air quality and public health.',
      th: '‡∏Å‡∏≤‡∏£‡πÄ‡∏ú‡∏≤‡∏û‡∏∑‡∏ä‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏≠‡∏ô‡∏∏‡∏†‡∏≤‡∏Ñ‡πÅ‡∏•‡∏∞‡∏Å‡πä‡∏≤‡∏ã‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡∏Å‡∏£‡∏∞‡∏à‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢ ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á‡∏ï‡πà‡∏≠‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô'
    },
    icon: 'üí®',
    order: 1
  },
  {
    _id: '2',
    title: {
      en: 'Soil Degradation',
      th: '‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏ó‡∏£‡∏°‡∏Ç‡∏≠‡∏á‡∏î‡∏¥‡∏ô'
    },
    description: {
      en: 'Burning destroys beneficial microorganisms and organic matter, reducing soil fertility and long-term productivity.',
      th: '‡∏Å‡∏≤‡∏£‡πÄ‡∏ú‡∏≤‡∏ó‡∏≥‡∏•‡∏≤‡∏¢‡∏à‡∏∏‡∏•‡∏¥‡∏ô‡∏ó‡∏£‡∏µ‡∏¢‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡πÅ‡∏•‡∏∞‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡∏µ‡∏¢‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏ ‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∏‡∏î‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏Ç‡∏≠‡∏á‡∏î‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß'
    },
    icon: 'üåç',
    order: 2
  },
  {
    _id: '3',
    title: {
      en: 'Health Impacts',
      th: '‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏ï‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û'
    },
    description: {
      en: 'Smoke from crop burning causes respiratory problems, eye irritation, and cardiovascular issues, especially in vulnerable populations.',
      th: '‡∏Ñ‡∏ß‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ú‡∏≤‡∏û‡∏∑‡∏ä‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏≤‡∏¢‡πÉ‡∏à ‡∏£‡∏∞‡∏Ñ‡∏≤‡∏¢‡πÄ‡∏Ñ‡∏∑‡∏≠‡∏á‡∏ï‡∏≤ ‡πÅ‡∏•‡∏∞‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á'
    },
    icon: 'üè•',
    order: 3
  }
];

const mockSolutions = [
  {
    _id: '1',
    title: {
      en: 'Zero-Till Farming',
      th: '‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏ñ‡∏û‡∏£‡∏ß‡∏ô'
    },
    description: {
      en: 'Plant crops directly into residue without burning. Reduces costs, saves time, and improves soil health.',
      th: '‡∏õ‡∏•‡∏π‡∏Å‡∏û‡∏∑‡∏ä‡∏•‡∏á‡πÑ‡∏õ‡πÉ‡∏ô‡∏ï‡∏≠‡∏ã‡∏±‡∏á‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ú‡∏≤ ‡∏•‡∏î‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÄ‡∏ß‡∏•‡∏≤ ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏î‡∏¥‡∏ô'
    },
    icon: 'üåæ',
    category: 'agricultural',
    order: 1
  },
  {
    _id: '2',
    title: {
      en: 'Bio-Decomposer',
      th: '‡∏ï‡∏±‡∏ß‡∏¢‡πà‡∏≠‡∏¢‡∏™‡∏•‡∏≤‡∏¢‡∏ä‡∏µ‡∏ß‡∏†‡∏≤‡∏û'
    },
    description: {
      en: 'Spray microbial solution to rapidly decompose crop residue, converting it into nutrient-rich compost.',
      th: '‡∏û‡πà‡∏ô‡∏™‡∏≤‡∏£‡∏•‡∏∞‡∏•‡∏≤‡∏¢‡∏à‡∏∏‡∏•‡∏¥‡∏ô‡∏ó‡∏£‡∏µ‡∏¢‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡πà‡∏≠‡∏¢‡∏™‡∏•‡∏≤‡∏¢‡∏ï‡∏≠‡∏ã‡∏±‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏∏‡πã‡∏¢‡∏´‡∏°‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏∏‡∏î‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£'
    },
    icon: 'üß™',
    category: 'technology',
    order: 2
  },
  {
    _id: '3',
    title: {
      en: 'Baler Machine',
      th: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏±‡∏î‡∏ü‡∏≤‡∏á'
    },
    description: {
      en: 'Collect and bale crop residue for use as animal fodder, fuel, or raw material for industries.',
      th: '‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏î‡∏ï‡∏≠‡∏ã‡∏±‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏±‡∏ï‡∏ß‡πå ‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏•‡∏¥‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°'
    },
    icon: 'üöú',
    category: 'technology',
    order: 3
  },
  {
    _id: '4',
    title: {
      en: 'Subsidies & Incentives',
      th: '‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏∏‡∏î‡∏´‡∏ô‡∏∏‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏£‡∏á‡∏à‡∏π‡∏á‡πÉ‡∏à'
    },
    description: {
      en: 'Government support for farmers adopting sustainable practices and purchasing machinery.',
      th: '‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏±‡∏ê‡∏ö‡∏≤‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏Å‡∏£‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏ô‡∏ß‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô‡πÅ‡∏•‡∏∞‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏±‡∏Å‡∏£'
    },
    icon: 'üí∞',
    category: 'economic',
    order: 4
  }
];

export default async function HomePage({
  params,
}: {
  params: Promise<{ locale: string }>;
}) {
  const { locale } = await params;

  // Try to fetch from Sanity, fall back to mock data
  let problems = mockProblems;
  let solutions = mockSolutions;

  try {
    const fetchedProblems = await client.fetch(problemsQuery);
    const fetchedSolutions = await client.fetch(solutionsQuery);

    if (fetchedProblems && fetchedProblems.length > 0) {
      problems = fetchedProblems;
    }
    if (fetchedSolutions && fetchedSolutions.length > 0) {
      solutions = fetchedSolutions;
    }
  } catch (error) {
    // Use mock data if Sanity is not configured yet
    console.log('Using mock data - Sanity not configured yet');
  }

  return (
    <div className="min-h-screen bg-white">
      <Header />
      <Hero />
      <PageContent problems={problems} solutions={solutions} />
      <Footer />
    </div>
  );
}
